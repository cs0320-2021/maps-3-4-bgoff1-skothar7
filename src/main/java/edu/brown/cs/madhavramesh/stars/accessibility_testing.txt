1.
The main benefit would be ease of use for a larger number of users.
Making the website more easily navigable and allowing users to easily
locate elements or translate to other languages ensures that a larger number
of people can use the website.

2.
To begin with, User Inyerface had a link below the "No" button that directs
you to the next page. However, the underline indicating where the link is
doesn't correspond to the word that has the link. This is an easy fix and
simply requires underlining the word "Here" instead of "click".

The "No" button was another source of frustration. Typically, buttons are
used to indicate when the user wants to do something and not when they
don't want to do something. This break from convention will only confuse
a greater portion of users and lead to undesired behavior. To fix this,
you could simply convert the button to "Yes" and change the corresponding
behavior.

Finally, after clicking the link to the game, a box to enter personal
information appears. The problem is that the check where you would
normally indicate that you accept the terms and conditions is used
in this situation to indicate that you don't accept the terms and
conditions. Once again, by deviating from what users expect to be there,
it becomes much harder to use the website. To fix this, you could simply
change the checkbox to read "I accept the Terms and Conditions."

3.
The first change was adding an html attribute with a lang element. Since the
default value is unknown, this would have been problematic for users using
screen readers. By setting a specific language, screen readers know how
to read with proper pronunciation and inflection. This will likely also
help with any translation tools since it automatically identifies the
language that the text on the website is in.

This was the only change generated by the Lighthouse report. Another way
I improved accessibility though is by adding a label to all my form
elements. For example, the place to enter the number of neighbors or radius
is titled "Number of neighbors/radius to search for:" and the places
to type a position are titled x, y, and z. I tried to make the labels
close to their fields so it was clear what field they referenced and
added them to the left or above the field.

Finally, I provided feedback any time a user entered invalid inputs.
For example, if they entered a String in the position field, an alert is
raised informing the user that only integers or decimals are allowed in
those fields. Additionally, if they type a negative number of neighbors or
radius to find, a bubble pops up telling them that it is an invalid input.