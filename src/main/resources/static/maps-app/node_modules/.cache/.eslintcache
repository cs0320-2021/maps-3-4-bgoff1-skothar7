[{"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/index.js":"1","/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/reportWebVitals.js":"2","/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/App.js":"3","/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js":"4","/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/checkinFeed.js":"5","/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/TextBox.js":"6"},{"size":500,"mtime":1615682331584,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1615682331584,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1616731699182,"results":"10","hashOfConfig":"8"},{"size":18369,"mtime":1616881349042,"results":"11","hashOfConfig":"8"},{"size":5078,"mtime":1616877312177,"results":"12","hashOfConfig":"8"},{"size":279,"mtime":1616549517479,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"4tzso8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/index.js",[],["29","30"],"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/reportWebVitals.js",[],"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/App.js",[],"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js",["31","32","33"],"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/checkinFeed.js",["34","35"],"import logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport React, {useState, useEffect} from 'react'\nimport {AwesomeButton} from \"react-awesome-button\";\nimport TextBox from \"./TextBox\";\n\nlet allCheckins = \"\"\n\nlet user = \"\";\n\nfunction setUser(u) {\n    user = u\n}\n\nfunction getUser() {\n    return user\n}\n\nfunction CheckinFeed() {\n\n    const [newCheckins, setNewCheckins] = useState([])\n    const [userData, setUserData] = useState(\"h\")\n    let userDataBuilder = \"\"\n\n\n\n\n\n    /**\n     * Makes an axios request.\n     */\n    const getCheckins = () => {\n\n        console.log(\"new checkin interval\")\n        const toSend = {\n            dummy : 42,\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/checkin\",\n            toSend,\n            config\n        )\n            .then(response => {\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                if(response !== undefined) {\n                    setNewCheckins(response.data[\"checkins\"]);\n                }\n            })\n\n            .catch(function (error) {\n                console.log(error);\n                //console.log(error.response.data);\n            });\n\n\n\n    }\n\n    //setInterval(getCheckins, 3000);\n\n    // setTimeout(() => {\n    //     getCheckins();\n    //     console.log(\"new interval\");\n    // }, 3000);\n\n\n\n    const searchForUser = () => {\n        console.log(\"trying to search for user\")\n\n        //---------post request for selected user-------------\n        const toSend2 = {\n            id: user\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/user\",\n            toSend2,\n            config\n        )\n            .then(response2 => {\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                if (response2 !== undefined) {\n                    let rawUserData = response2.data[\"user\"]\n                    userDataBuilder = \"\"\n                    for (let j = 0; j < rawUserData.length; j++) {\n                        let currentUserCheckin = rawUserData[j].split(\",\")\n                        userDataBuilder = userDataBuilder + \"<option value =\" + currentUserCheckin[0] + \">\"+ currentUserCheckin[0] + \",\"+ currentUserCheckin[1]\n                            + \", \" + currentUserCheckin[2] + \", \" + currentUserCheckin[3] + \", \" + currentUserCheckin[4]\n                            +\"</option>\"\n\n                    }\n                    console.log(userDataBuilder)\n                    setUserData(userDataBuilder)\n                }\n            })\n\n            .catch(function (error) {\n                console.log(error);\n                console.log(error.response.data);\n            });\n\n    }\n\n    useEffect(() => {\n        setTimeout(getCheckins, 3000);\n        console.log(\"inside useEffect\");\n        for (let i=0; i < newCheckins.length; i++) {\n            let currentCheckin = newCheckins[i].split(\",\")\n            allCheckins = allCheckins + \"<option value=\"+currentCheckin[0]+\">\"+currentCheckin[0] + \", \" + currentCheckin[1]\n                + \", \" + currentCheckin[2] + \", \" + currentCheckin[3] + \", \" + currentCheckin[4]+\"</option>\"\n        }\n\n\n    })\n\n    return (\n        <div className=\"CheckinFeed\">\n            <select name=\"checkins\" multiple size=\"10\">\n                <optgroup label=\"checkin-list\" dangerouslySetInnerHTML={{__html: allCheckins}}>\n                </optgroup>\n            </select>\n\n            <div className= \"User feed\">\n                <select name=\"Usercheckins\" multiple size=\"10\">\n                    <optgroup label=\"User checkin-list\" dangerouslySetInnerHTML={{__html: userData}}>\n                    </optgroup>\n                </select>\n                <TextBox label={\"User ID \"} onChange = {setUser}/>\n                <AwesomeButton type=\"primary\" onPress={() => {searchForUser()}}>Find User Data</AwesomeButton>\n            </div>\n         </div>\n\n    );\n}\n\nexport default CheckinFeed;\n\n// $(function()){\n//     setInterval(funcEverySec, 1000);\n// });\n//\n// function funcEverySec {\n//\n// }","/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/TextBox.js",["36"],"import logo from './logo.svg';\nimport './App.css';\n\nfunction TextBox(props) {\n  return (\n    <div className=\"TextBox\">\n      {props.label}\n      <input  type=\"text\" label={props.label} onChange={(e) => props.onChange(e.target.value)}/>\n    </div>\n  );\n}\n\nexport default TextBox;\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":37,"column":5,"nodeType":"43","messageId":"44","endLine":37,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":200,"column":9,"nodeType":"43","endLine":200,"endColumn":18,"suggestions":"48"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"49","line":16,"column":10,"nodeType":"43","messageId":"44","endLine":16,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'clickCoordinate2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFirstRender'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [firstRender, ways] as a second argument to the useEffect Hook.",["52"],"'getUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Add dependencies array: [firstRender, ways]",{"range":"55","text":"56"},[6070,6070],", [firstRender, ways]"]