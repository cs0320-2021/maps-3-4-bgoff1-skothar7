[{"C:\\users\\Ben\\documents\\react-lab-cs32\\src\\index.js":"1","C:\\users\\Ben\\documents\\react-lab-cs32\\src\\App.js":"2","C:\\users\\Ben\\documents\\react-lab-cs32\\src\\reportWebVitals.js":"3","C:\\users\\Ben\\documents\\react-lab-cs32\\src\\Route.js":"4","C:\\users\\Ben\\documents\\react-lab-cs32\\src\\TextBox.js":"5","C:\\users\\ben\\documents\\react-lab-cs32\\src\\index.js":"6","C:\\users\\ben\\documents\\react-lab-cs32\\src\\reportWebVitals.js":"7","C:\\users\\ben\\documents\\react-lab-cs32\\src\\App.js":"8","C:\\users\\ben\\documents\\react-lab-cs32\\src\\Route.js":"9","C:\\users\\ben\\documents\\react-lab-cs32\\src\\TextBox.js":"10","C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\index.js":"11","C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\App.js":"12","C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\reportWebVitals.js":"13","C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\Route.js":"14","C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\TextBox.js":"15","C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\Canvas.js":"16","C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\index.js":"17","C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\App.js":"18","C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\reportWebVitals.js":"19","C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\Route.js":"20","C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\Canvas.js":"21","C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\TextBox.js":"22","C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\checkinFeed.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":528,"mtime":1615195328570,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":994,"mtime":1615153096529,"results":"28","hashOfConfig":"25"},{"size":263,"mtime":1615153961804,"results":"29","hashOfConfig":"25"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":573,"mtime":1615237161364,"results":"33","hashOfConfig":"31"},{"size":2497,"mtime":1615241432685,"results":"34","hashOfConfig":"31"},{"size":279,"mtime":1615241403194,"results":"35","hashOfConfig":"31"},{"size":500,"mtime":499162500000,"results":"36","hashOfConfig":"37"},{"size":573,"mtime":1615237161364,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":2668,"mtime":1615767203665,"results":"40","hashOfConfig":"37"},{"size":279,"mtime":1615241403194,"results":"41","hashOfConfig":"37"},{"size":3454,"mtime":1615789577192,"results":"42","hashOfConfig":"37"},{"size":500,"mtime":499162500000,"results":"43","hashOfConfig":"44"},{"size":367,"mtime":1616549310294,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":16745,"mtime":1616541583124,"results":"47","hashOfConfig":"44"},{"size":5303,"mtime":1616272314838,"results":"48","hashOfConfig":"44"},{"size":279,"mtime":1616536937205,"results":"49","hashOfConfig":"44"},{"size":4676,"mtime":1616640268679,"results":"50","hashOfConfig":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"km747k",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1fq9r4g",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1ijwkhn",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"k07icl",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\users\\Ben\\documents\\react-lab-cs32\\src\\index.js",[],["105","106"],"C:\\users\\Ben\\documents\\react-lab-cs32\\src\\App.js",[],"C:\\users\\Ben\\documents\\react-lab-cs32\\src\\reportWebVitals.js",[],"C:\\users\\Ben\\documents\\react-lab-cs32\\src\\Route.js",["107","108","109","110"],"C:\\users\\Ben\\documents\\react-lab-cs32\\src\\TextBox.js",["111"],"C:\\users\\ben\\documents\\react-lab-cs32\\src\\index.js",[],["112","113"],"C:\\users\\ben\\documents\\react-lab-cs32\\src\\reportWebVitals.js",[],"C:\\users\\ben\\documents\\react-lab-cs32\\src\\App.js",[],"C:\\users\\ben\\documents\\react-lab-cs32\\src\\Route.js",["114"],"C:\\users\\ben\\documents\\react-lab-cs32\\src\\TextBox.js",["115"],"C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\index.js",[],["116","117"],"C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\App.js",[],"C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\reportWebVitals.js",[],"C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\Route.js",["118","119","120"],"C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\TextBox.js",["121"],"import logo from './logo.svg';\nimport './App.css';\n\nfunction TextBox(props) {\n  return (\n    <div className=\"TextBox\">\n      {props.label}\n      <input  type=\"text\" label={props.label} onChange={(e) => props.onChange(e.target.value)}/>\n    </div>\n  );\n}\n\nexport default TextBox;\n","C:\\users\\Ben\\Documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\Canvas.js",[],"C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\index.js",[],["122","123"],"C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\App.js",[],"C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\reportWebVitals.js",[],"C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\Route.js",["124","125","126","127","128"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport TextBox from './TextBox'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport axios from \"axios\";\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\n\r\n\r\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\nconst getPixelRatio = context => {\r\n    let backingStore =\r\n        context.backingStorePixelRatio ||\r\n        context.webkitBackingStorePixelRatio ||\r\n        context.mozBackingStorePixelRatio ||\r\n        context.msBackingStorePixelRatio ||\r\n        context.oBackingStorePixelRatio ||\r\n        context.backingStorePixelRatio ||\r\n        1;\r\n    return (window.devicePixelRatio || 1) / backingStore;\r\n};\r\n\r\nlet startLat = 41.831311;\r\nlet startLon = -71.406524;\r\nlet endLat = 41.821395;\r\nlet endLon = -71.396608;\r\nlet clickCoordinate = [];\r\nlet releaseCoordinate = [];\r\nlet clickCoordinate2 = [];\r\nlet releaseCoordinate2 = [];\r\nlet routeStartLat = \"\";\r\nlet routeStartLon = \"\";\r\nlet routeEndLat = \"\";\r\nlet routeEndLon = \"\";\r\nlet route = [];\r\n\r\nlet hasClicked = false;\r\n\r\nfunction setStartLat(slat) {\r\n    startLat = parseFloat(slat)\r\n}\r\n\r\nfunction getStartLat() {\r\n    return parseFloat(startLat)\r\n}\r\n\r\nfunction setStartLon(slon) {\r\n    startLon = parseFloat(slon)\r\n}\r\n\r\nfunction getStartLon() {\r\n    return parseFloat(startLon)\r\n}\r\n\r\nfunction setEndLat(elat) {\r\n    endLat = parseFloat(elat)\r\n}\r\n\r\nfunction getEndLat() {\r\n    return parseFloat(endLat)\r\n}\r\n\r\nfunction setEndLon(elon) {\r\n    endLon = parseFloat(elon)\r\n}\r\n\r\nfunction getEndLon() {\r\n    return parseFloat(endLon)\r\n}\r\n\r\nfunction setRouteStartLat(slat) {\r\n    routeStartLat = slat\r\n}\r\n\r\nfunction getRouteStartLat() {\r\n    return routeStartLat\r\n}\r\n\r\nfunction setRouteStartLon(slon) {\r\n    console.log(\"88 \"+slon)\r\n    routeStartLon = slon\r\n}\r\n\r\nfunction getRouteStartLon() {\r\n    return routeStartLon\r\n}\r\n\r\nfunction setRouteEndLat(elat) {\r\n    routeEndLat = elat\r\n}\r\n\r\nfunction getRouteEndLat() {\r\n    return routeEndLat\r\n}\r\n\r\nfunction setRouteEndLon(elon) {\r\n    routeEndLon = elon\r\n}\r\n\r\nfunction getRouteEndLon() {\r\n    return routeEndLon\r\n}\r\n\r\nfunction setClickCoordinate(click) {\r\n    clickCoordinate = click\r\n}\r\n\r\nfunction getClickCoordinate() {\r\n    return clickCoordinate\r\n}\r\n\r\nfunction setReleaseCoordinate(release) {\r\n    releaseCoordinate = release\r\n}\r\n\r\nfunction getReleaseCoordinate() {\r\n    return releaseCoordinate\r\n}\r\n\r\nfunction setSecondReleaseCoordinate(release) {\r\n    releaseCoordinate2 = release\r\n}\r\n\r\nfunction getSecondReleaseCoordinate() {\r\n    return releaseCoordinate2\r\n}\r\n\r\nfunction setRoute(r) {\r\n    route = r\r\n}\r\n\r\nfunction getRoute() {\r\n    return route\r\n}\r\n\r\n\r\n\r\nfunction Route(props) {\r\n    const w = 600.0;\r\n    const h = 600.0;\r\n    let coordToPix = Math.abs(parseFloat((getStartLon() - getEndLon())/w));\r\n    const [zoomInFactor, setZoomInFactor] = useState(1);\r\n    const [startCanvas, refreshCanvas] = useState(\"\");\r\n//TODO: Fill in the ? with appropriate names/values for a route.\r\n//Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\r\n    const [ways, setWays] = useState([]);\r\n    //const [route, setRoute] = useState([]);\r\n    //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\r\n\r\n    /**\r\n     * Makes an axios request.\r\n     */\r\n    const requestWays = () => {\r\n        console.log(9 + \" \" + startLon)\r\n        const toSend = {\r\n            //TODO: Pass in the values for the data. Follow the format the route expects!\r\n            srclat : getStartLat(),\r\n            srclong : getStartLon(),\r\n            destlat : getEndLat(),\r\n            destlong : getEndLon()\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        //Install and import this!\r\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n        axios.post(\r\n            \"http://localhost:4567/ways\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n                //Note: It is very important that you understand how this is set up and why it works!\r\n                setWays(response.data[\"ways\"]);//console.log  the response.data[\"route\"]\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n        let ref = useRef();\r\n        const [firstRender, setFirstRender] = useState(true);\r\n        useEffect(() => {\r\n            if (firstRender) {\r\n                setFirstRender(false)\r\n                requestWays()\r\n            }\r\n            canvas = ref.current;\r\n            //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\n            //smooths lines\r\n            ctx = canvas.getContext(\"2d\");\r\n            let ratio = getPixelRatio(ctx);\r\n            let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\r\n            let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\r\n            canvas.width = width * ratio;\r\n            canvas.height = height * ratio;\r\n            canvas.style.width = `${width}px`;\r\n            canvas.style.height = `${height}px`;\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.lineWidth = 1\r\n\r\n            console.log(getEndLat());\r\n            console.log(getEndLon());\r\n            console.log(getStartLat());\r\n            console.log(getStartLon());\r\n\r\n            ctx.fillStyle = \"#e8d8c3\";\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            printCanvas(ways)\r\n            printCanvas(getRoute())\r\n\r\n            console.log(\"done\")\r\n\r\n        })\r\n\r\n    const printCanvas = (toPrint) => {\r\n            console.log(toPrint.length)\r\n        let parsedWay;\r\n        let type;\r\n        let startLatWay;\r\n        let startLonWay;\r\n        let endLatWay;\r\n        let endLonWay;\r\n        let startCircle;\r\n        let startPixX;\r\n        let startPixY;\r\n        let endPixX;\r\n        let endPixY;\r\n\r\n        startCircle = false\r\n\r\n        console.log(\"low\" + toPrint.length);\r\n\r\n        for (let i=0; i<toPrint.length; i++) {\r\n\r\n            parsedWay = toPrint[i].split(\",\");\r\n            type = parsedWay[0]\r\n            startLatWay = parseFloat(parsedWay[1]);\r\n            startLonWay = parseFloat(parsedWay[2]);\r\n            endLatWay = parseFloat(parsedWay[3]);\r\n            endLonWay = parseFloat(parsedWay[4]);\r\n            startPixX = w*(startLonWay - getStartLon())/(getEndLon() - getStartLon())\r\n            startPixY = h*(startLatWay - getStartLat())/(getEndLat() - getStartLat())\r\n            endPixX = w*(endLonWay - getStartLon())/(getEndLon() - getStartLon())\r\n            endPixY = h*(endLatWay - getStartLat())/(getEndLat() - getStartLat())\r\n            if (i%10===0){\r\n                console.log(startPixX)\r\n            }\r\n            ctx.beginPath();\r\n            ctx.moveTo(startPixX, startPixY);\r\n            ctx.lineTo(endPixX, endPixY);\r\n            //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\r\n            //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\r\n            ctx.strokeStyle = \"red\";\r\n            if (type === \"\" || type === \"unclassified\") {\r\n                ctx.strokeStyle = \"blue\";\r\n            } else {\r\n                if (type === \"path\") {\r\n                    console.log(\"yes\")\r\n                    ctx.strokeStyle = \"pink\";\r\n                    ctx.lineWidth = 5\r\n                    ctx.stroke()\r\n                    if (!startCircle) {\r\n                        ctx.moveTo(startPixX, startPixY);\r\n                        ctx.beginPath();\r\n                        ctx.arc(startPixX, startPixY, 15, 0, 2 * Math.PI);\r\n                        //ctx.rect(startPixX - 21, startPixY - 21, 42, 42)\r\n                        startCircle = true\r\n                    } else {\r\n                        if (i === toPrint.length - 1) {\r\n                            ctx.moveTo(endPixX, endPixY);\r\n                            ctx.beginPath();\r\n                            ctx.arc(endPixX, endPixY, 15, 0, 2 * Math.PI);\r\n                            //ctx.rect(endPixX - 21, endPixY - 21, 42, 42)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ctx.stroke();\r\n            ctx.lineWidth = 1\r\n        }\r\n        console.log(toPrint.length)\r\n    }\r\n    const refreshButton = () => {\r\n        ctx.fillStyle = \"#e8d8c3\";\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        printCanvas(ways)\r\n        console.log(getRouteStartLat())\r\n        console.log(getRouteStartLon())\r\n        console.log(getRouteEndLat())\r\n        console.log(getRouteEndLon())\r\n            console.log(ways.length)\r\n        console.log(hasClicked)\r\n\r\n        //requestWays()\r\n        const toSend = {\r\n            //TODO: Pass in the values for the data. Follow the format the route expects!\r\n            srclat : getRouteStartLat(),\r\n            srclong : getRouteStartLon(),\r\n            destlat : getRouteEndLat(),\r\n            destlong : getRouteEndLon()\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        //Install and import this!\r\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n        axios.post(\r\n            \"http://localhost:4567/route\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n                //Note: It is very important that you understand how this is set up and why it works!\r\n                let currentRoute = response.data[\"route\"]\r\n                setRoute(currentRoute);//console.log  the response.data[\"route\"]\r\n                printCanvas(currentRoute)\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        console.log(ways.length)\r\n\r\n        //to test\r\n        //41.825158\r\n        // -71.404687\r\n        //41.827525\r\n        //-71.400441\r\n\r\n\r\n\r\n    }\r\n\r\n    //clickedOnCanvas setter sets pixels x,y\r\n    //release does the same\r\n\r\n\r\n    const clickedOnCanvas = (clicked) => {\r\n\r\n            console.log(clicked)\r\n\r\n\r\n            setClickCoordinate(clicked)\r\n\r\n\r\n    }\r\n\r\n    const releasedOnCanvas = (released) => {\r\n        console.log(released)\r\n        setReleaseCoordinate(released)\r\n        console.log(getClickCoordinate()[0])\r\n        console.log(getReleaseCoordinate()[0])\r\n        console.log(getClickCoordinate()[1])\r\n        console.log(getReleaseCoordinate()[1])\r\n        if(getClickCoordinate()[0] === getReleaseCoordinate()[0] &&\r\n            getClickCoordinate()[1] === getReleaseCoordinate()[1]) {\r\n\r\n            console.log(\"clicked and released\")\r\n            if (hasClicked){\r\n\r\n                console.log(\"entered clicked condition\")\r\n\r\n                //make post req\r\n                //\r\n                // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\r\n                // setRouteStartLat(getStartLat() + getSecondReleaseCoordinate()[1]*coordToPix)\r\n                // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\r\n                // setRouteEndLat(getStartLat() + parseFloat(released[1])*coordToPix)\r\n                // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\r\n                // setRouteStartLat(getStartLat() - Math.abs(getSecondReleaseCoordinate()[1]*coordToPix))\r\n                // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\r\n                // setRouteEndLat(getStartLat() - Math.abs(parseFloat(released[1])*coordToPix))\r\n\r\n\r\n                setRouteStartLon(getSecondReleaseCoordinate()[0]*(getEndLon() - getStartLon())/w +  getStartLon())\r\n                setRouteStartLat(getSecondReleaseCoordinate()[1]*(getEndLat() - getStartLat())/h +  getStartLat())\r\n                setRouteEndLon(released[0]*(getEndLon() - getStartLon())/w +  getStartLon())\r\n                setRouteEndLat(released[1]*(getEndLat() - getStartLat())/h +  getStartLat())\r\n\r\n               //console.log(w*(getRouteStartLon() - getStartLon())/(getEndLon() - getStartLon()))\r\n               // console.log(h*(getRouteStartLat() - getStartLat())/(getEndLat() - getStartLat()))\r\n                //console.log(w*(getRouteEndLon() - getStartLon())/(getEndLon() - getStartLon()))\r\n                //console.log(h*(getRouteEndLat() - getStartLat())/(getEndLat() - getStartLat()))\r\n\r\n                console.log(getRouteStartLat())\r\n                console.log(getRouteStartLon())\r\n                console.log(getRouteEndLat())\r\n                console.log(getRouteEndLon())\r\n                refreshButton();\r\n\r\n                hasClicked = false;\r\n            } else {\r\n                setSecondReleaseCoordinate(released)\r\n                hasClicked = true;\r\n            }\r\n            //route start/end\r\n        } else {\r\n            //panning\r\n            let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0]))*coordToPix\r\n            let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1]))*coordToPix\r\n            console.log(releaseCoordinate[0])\r\n                setStartLat(getStartLat() + dY);\r\n                setEndLat(getEndLat() + dY);\r\n                setEndLon(getEndLon() - dX);\r\n                setStartLon(getStartLon() - dX);\r\n                requestWays();\r\n                printCanvas(getRoute())\r\n\r\n\r\n        }\r\n    }\r\n\r\n  const zoomIn = () => {\r\n      setZoomInFactor(0.91);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const zoomOut = () => {\r\n      setZoomInFactor(1.1);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const setZoomCoords = () => {\r\n      console.log(zoomInFactor);\r\n\r\n      const avgLat = ((getStartLat() + getEndLat())/2)\r\n      const avgLon = ((getStartLon() + getEndLon())/2)\r\n\r\n      const newStartLat = avgLat + (Math.abs(getStartLat() - avgLat) * zoomInFactor);\r\n      console.log(newStartLat)\r\n      const newEndLat = avgLat - (Math.abs(getEndLat() - avgLat) * zoomInFactor);\r\n      console.log(newEndLat);\r\n      const newEndLon = avgLon + (Math.abs(getEndLon() - avgLon) * zoomInFactor);\r\n      console.log(newEndLon);\r\n      const newStartLon = avgLon - (Math.abs(getStartLon() - avgLon) * zoomInFactor);\r\n      console.log((newStartLon));\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n          setStartLat(newStartLat);\r\n          setEndLat(newEndLat);\r\n          setEndLon(newEndLon);\r\n          setStartLon(newStartLon);\r\n      })\r\n      requestWays();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Route\">\r\n      <header className=\"Route-header\">\r\n        <title>This is a title</title>\r\n      </header>\r\n        <TextBox label={\"Street 1 or Start Latitude \"} onChange = {setRouteStartLat}/>\r\n        <TextBox label={\"Cross Street 1 or Start Longitude \"} onChange = {setRouteStartLon}/>\r\n        <TextBox label={\"Street 2 or End Latitude \"} onChange = {setRouteEndLat}/>\r\n        <TextBox label={\"Cross Street 2 or End Longitude \"} onChange = {setRouteEndLon}/>\r\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Find Path</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\r\n        <p> </p>\r\n        <canvas\r\n            ref={ref}\r\n            style={{ width: w, height: h }}\r\n            routetorender={props.routetorender}\r\n            onChange={(e) => props.onChange(e.target.value)}\r\n            onMouseDown={(e) => clickedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop])}\r\n            onMouseUp={(e) => releasedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop])}\r\n        />\r\n    </div>\r\n  );\r\n}\r\nexport default Route;\r\n\r\n//<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}","C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\Canvas.js",["129"],"import './App.css';\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {requestRoute} from \"./Route\"\r\n\r\nlet curNorthWestLat;\r\nlet curNorthWestLon;\r\n\r\nlet curSouthEastLat;\r\nlet curSouthEastLon;\r\n\r\nlet pixToCoord;\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\nconst getPixelRatio = context => {\r\n    let backingStore =\r\n        context.backingStorePixelRatio ||\r\n        context.webkitBackingStorePixelRatio ||\r\n        context.mozBackingStorePixelRatio ||\r\n        context.msBackingStorePixelRatio ||\r\n        context.oBackingStorePixelRatio ||\r\n        context.backingStorePixelRatio ||\r\n        1;\r\n    return (window.devicePixelRatio || 1) / backingStore;\r\n};\r\n\r\nfunction Canvas(props) {\r\n    let w = 600;\r\n    let h = 600;\r\n    let ref = useRef();\r\n    const firstUpdate = useRef(true);\r\n    useEffect(() => {\r\n        if (firstUpdate.current) {\r\n            curSouthEastLat = 41.822895\r\n            curSouthEastLon = -71.396608\r\n            curNorthWestLat = 41.828693\r\n            curNorthWestLon = -71.406524\r\n            firstUpdate.current = false\r\n            requestRoute()\r\n        } else {\r\n            curSouthEastLat = parseFloat(props.routetorender[3]);\r\n            curSouthEastLon = parseFloat(props.routetorender[4]);\r\n            curNorthWestLat = parseFloat(props.routetorender[1]);\r\n            curNorthWestLon = parseFloat(props.routetorender[2]);\r\n        }\r\n        canvas = ref.current;\r\n        ctx = canvas.getContext(\"2d\");\r\n        let ratio = getPixelRatio(ctx);\r\n        let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\r\n        let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\r\n        canvas.width = width * ratio;\r\n        canvas.height = height * ratio;\r\n        canvas.style.width = `${width}px`;\r\n        canvas.style.height = `${height}px`;\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.lineWidth = 1\r\n        pixToCoord = 50000;\r\n\r\n        //default\r\n        // curSouthEastLat = 41.823876;\r\n        // curSouthEastLon = -71.395963;\r\n        //\r\n        // curNorthWestLat = (curSouthEastLat - w/pixToCoord);\r\n        // curNorthWestLon = (curSouthEastLon - h/pixToCoord);\r\n\r\n        //with ways\r\n\r\n        console.log(curSouthEastLat);\r\n        console.log(curSouthEastLon);\r\n        console.log(curNorthWestLat);\r\n        console.log(curNorthWestLon);\r\n\r\n\r\n        let rawWaysData = props.routetorender[0]\r\n        let listOfWays = [];\r\n        if (rawWaysData != null) {\r\n            listOfWays = (rawWaysData + '').split(\";\");\r\n        }\r\n\r\n        let parsedWay;\r\n        let type;\r\n        let startLat;\r\n        let startLon;\r\n        let endLat;\r\n        let endLon;\r\n\r\n        pixToCoord = ((curNorthWestLon - curSouthEastLon)/w);\r\n        h = (curNorthWestLat - curSouthEastLat)/pixToCoord;\r\n\r\n        console.log(\"low\" + listOfWays.length);\r\n        for (let i=0; i<listOfWays.length; i++) {\r\n            parsedWay =  listOfWays[i].split(\",\");\r\n            type = parsedWay[0]\r\n            startLat = parseFloat(parsedWay[1]);\r\n            startLon = parseFloat(parsedWay[2]);\r\n            endLat = parseFloat(parsedWay[3]);\r\n            endLon = parseFloat(parsedWay[4]);\r\n            if (i === 500) {\r\n                console.log(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon));\r\n            }\r\n            ctx.beginPath();\r\n            ctx.moveTo(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), 0 - h*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\r\n            ctx.lineTo(w*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), 0 - h*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\r\n             //ctx.moveTo(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\r\n             //ctx.lineTo(w*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\r\n            ctx.strokeStyle = \"red\";\r\n            if (type === \"\" || type === \"unclassified\") {\r\n                ctx.strokeStyle = \"blue\";\r\n            }\r\n            ctx.stroke();\r\n\r\n        }\r\n        console.log(\"done\")\r\n\r\n    })\r\n    return (\r\n        <div className=\"Canvas\">\r\n            <canvas\r\n                ref={ref}\r\n                style={{ width: w, height: h }}\r\n                routetorender={props.routetorender}\r\n                onChange={(e) => props.onChange(e.target.value)}\r\n                onMouseDown={(e) => props.onMouseDown([e.pageX, e.pageY])}\r\n                onMouseUp={(e) => props.onMouseUp([e.pageX, e.pageY])}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Canvas;",["130","131"],"C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\TextBox.js",["132"],"C:\\users\\ben\\documents\\cs32\\maps-3-4-bgoff1-skothar7\\src\\main\\resources\\static\\maps-app\\src\\checkinFeed.js",["133","134","135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"145","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":18},{"ruleId":"141","severity":1,"message":"146","line":11,"column":10,"nodeType":"143","messageId":"144","endLine":11,"endColumn":16},{"ruleId":"141","severity":1,"message":"147","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"137","replacedBy":"148"},{"ruleId":"139","replacedBy":"149"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"137","replacedBy":"150"},{"ruleId":"139","replacedBy":"151"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"152","line":4,"column":26,"nodeType":"143","messageId":"144","endLine":4,"endColumn":35},{"ruleId":"141","severity":1,"message":"153","line":16,"column":10,"nodeType":"143","messageId":"144","endLine":16,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"137","replacedBy":"154"},{"ruleId":"139","replacedBy":"155"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"156","line":37,"column":5,"nodeType":"143","messageId":"144","endLine":37,"endColumn":21},{"ruleId":"141","severity":1,"message":"153","line":151,"column":12,"nodeType":"143","messageId":"144","endLine":151,"endColumn":23},{"ruleId":"141","severity":1,"message":"157","line":151,"column":25,"nodeType":"143","messageId":"144","endLine":151,"endColumn":38},{"ruleId":"158","severity":1,"message":"159","line":199,"column":9,"nodeType":"143","endLine":199,"endColumn":18,"suggestions":"160"},{"ruleId":"158","severity":1,"message":"161","line":93,"column":13,"nodeType":"162","endLine":93,"endColumn":59},{"ruleId":"137","replacedBy":"163"},{"ruleId":"139","replacedBy":"164"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"165","line":23,"column":12,"nodeType":"143","messageId":"144","endLine":23,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":56,"column":29,"nodeType":"162","messageId":"168","endLine":56,"endColumn":31},{"ruleId":"166","severity":1,"message":"167","line":94,"column":34,"nodeType":"162","messageId":"168","endLine":94,"endColumn":36},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'startLon' is assigned a value but never used.","'endLat' is assigned a value but never used.","'endLon' is assigned a value but never used.",["169"],["170"],["169"],["170"],"'useEffect' is defined but never used.","'startCanvas' is assigned a value but never used.",["169"],["170"],"'clickCoordinate2' is assigned a value but never used.","'refreshCanvas' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFirstRender'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [firstRender, ways] as a second argument to the useEffect Hook.",["171"],"Assignments to the 'h' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression",["169"],["170"],"'option' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},"Add dependencies array: [firstRender, ways]",{"range":"174","text":"175"},[6122,6122],", [firstRender, ways]"]