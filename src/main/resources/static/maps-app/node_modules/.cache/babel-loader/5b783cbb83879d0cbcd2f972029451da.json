{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\ben\\\\documents\\\\react-lab-cs32\\\\src\\\\Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState } from 'react';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Route() {\n  _s();\n\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [route, setRoute] = useState([]);\n  /**\n   * Makes an axios request.\n   */\n\n  const requestRoute = () => {\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srcLat: startLat,\n      srcLong: startLon,\n      destLat: endLat,\n      destLong: endLon\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        requestRoute();\n      },\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"+uDHXyiDa9yY3RGLSk9/iH4kgFM=\");\n\n_c = Route;\nexport default Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["C:/users/ben/documents/react-lab-cs32/src/Route.js"],"names":["TextBox","React","useState","AwesomeButton","axios","Route","startLat","setStartLat","startLon","setStartLon","endLat","setEndLat","endLon","setEndLon","route","setRoute","requestRoute","toSend","srcLat","srcLong","destLat","destLong","config","headers","post","then","response","console","log","data","catch","error"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,CAAD,CAApC,CAJe,CAKf;AACA;;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA;AACF;AACA;;AACE,QAAMc,YAAY,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAG;AACX;AACAC,MAAAA,MAAM,EAAGZ,QAFE;AAGXa,MAAAA,OAAO,EAAGX,QAHC;AAIPY,MAAAA,OAAO,EAAGV,MAJH;AAKPW,MAAAA,QAAQ,EAAGT;AALJ,KAAf;AAQA,QAAIU,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,uCAA+B;AAFxB;AADE,KAAb,CATyB,CAgBzB;AACA;;AACAnB,IAAAA,KAAK,CAACoB,IAAN,CACQ,6BADR,EAEQP,MAFR,EAGQK,MAHR,EAKKG,IALL,CAKUC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADgB,CAEhB;AACA;;AACAd,MAAAA,QAAQ,CAACW,QAAQ,CAACG,IAAT,CAAc,OAAd,CAAD,CAAR;AACD,KAVL,EAYKC,KAZL,CAYW,UAAUC,KAAV,EAAiB;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAED,KAfL;AAgBD,GAlCD;;AAmCA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAII;AAAA,gBAAKzB;AAAL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,gBAAhB;AAAkC,MAAA,QAAQ,EAAIC;AAA9C;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,iBAAhB;AAAmC,MAAA,QAAQ,EAAIE;AAA/C;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,cAAhB;AAAgC,MAAA,QAAQ,EAAIE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,eAAhB;AAAiC,MAAA,QAAQ,EAAIE;AAA7C;AAAA;AAAA;AAAA;AAAA,YARJ,eAUE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACG,QAAAA,YAAY;AAAG,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7DQX,K;;KAAAA,K;AA8DT,eAAeA,KAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport TextBox from './TextBox'\nimport React, {useState} from 'react'\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\n\nfunction Route() {\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0);\n  //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n  const [route, setRoute] = useState([]);\n\n  /**\n   * Makes an axios request.\n   */\n  const requestRoute = () => {\n    const toSend = {\n        //TODO: Pass in the values for the data. Follow the format the route expects!\n        srcLat : startLat,\n        srcLong : startLon,\n            destLat : endLat,\n            destLong : endLon\n  };\n\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      }\n    }\n\n    //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n    axios.post(\n            \"http://localhost:4567/route\",\n            toSend,\n            config\n    )\n        .then(response => {\n          console.log(response.data);\n          //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n          //Note: It is very important that you understand how this is set up and why it works!\n          setRoute(response.data[\"route\"]);\n        })\n\n        .catch(function (error) {\n          console.log(error);\n\n        });\n  }\n  return (\n    <div className=\"Route\">\n      <header className=\"Route-header\">\n        <title>This is a title</title>\n      </header>\n        <h1>{startLat}</h1>\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLat}/>\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLon}/>\n        <TextBox label={\"End Latitude\"} onChange = {setEndLat}/>\n        <TextBox label={\"End Longitude\"} onChange = {setEndLon}/>\n\n      <AwesomeButton type=\"primary\" onPress={() => {requestRoute()}}>Button</AwesomeButton>\n    </div>\n  );\n}\nexport default Route;\n"]},"metadata":{},"sourceType":"module"}