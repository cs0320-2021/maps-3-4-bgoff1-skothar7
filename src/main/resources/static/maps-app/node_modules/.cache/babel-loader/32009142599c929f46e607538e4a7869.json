{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\ben\\\\documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\nimport Canvas from \"./Canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet brownNorthWestLat = 41.828693;\nlet brownNorthWestLon = -71.406524;\nlet brownSouthEastLat = 41.822895;\nlet brownSouthEastLon = 41.828693;\n\nfunction Route() {\n  _s();\n\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0);\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\n  const [clickCoordinate, setClickCoordinate] = useState([]);\n  const [releaseCoordinate, setReleaseCoordinate] = useState([]);\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [route, setRoute] = useState([]);\n  let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  const refreshButton = () => {\n    setStartLat(startLatBuffer);\n    setStartLon(startLonBuffer);\n    setEndLat(endLatBuffer);\n    setEndLon(endLonBuffer);\n    requestRoute();\n  };\n\n  const clickedOnCanvas = released => {\n    setReleaseCoordinate(released);\n\n    if (clickCoordinate === releaseCoordinate) {//route start/end\n    } else {\n      //panning\n      let dX = releaseCoordinate[0] - clickCoordinate[0];\n      let dY = releaseCoordinate[1] - clickCoordinate[1];\n      ReactDOM.unstable_batchedUpdates(() => {\n        setStartLat();\n        setEndLat();\n        setEndLon();\n        setStartLon();\n        requestRoute();\n      });\n    }\n  };\n  /**\r\n   * Makes an axios request.\r\n   */\n\n\n  const requestRoute = () => {\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: startLat,\n      srclong: startLon,\n      destlat: endLat,\n      destlong: endLon\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = Math.abs(Math.abs(startLat - (startLat + endLat) / 2) * zoomInFactor);\n    let lonFromCenter = Math.abs(Math.abs(endLon - (endLon + startLon) / 2) * zoomInFactor); //const oldStartLat = startLat;\n    //const oldStartLon = startLon;\n    //const oldEndLat = endLat;\n    //const oldEndLon = endLon;\n    //console.log(oldStartLat);\n    //console.log(oldStartLon);\n    //console.log(oldEndLat);\n    //console.log(oldEndLon);\n\n    const avgLat = (startLat + endLat) / 2;\n    const avgLon = (startLon + endLon) / 2;\n    const newStartLat = avgLat + Math.abs(startLat - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(endLat - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(endLon - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(startLon - avgLon) * zoomInFactor;\n    console.log(newStartLon); // + 3)/2);// - ((oldEndLon -  (oldEndLon + 3)/2) * 1));\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n      requestRoute();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: route[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      routetorender: toCanvas,\n      onChange: refreshCanvas,\n      onMouseDown: setClickCoordinate,\n      onMouseUp: clickedOnCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"qFwXbbhKq0hRhrppzdr2+ygv/Z8=\");\n\n_c = Route;\nexport default Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["C:/users/ben/documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","ReactDOM","AwesomeButton","axios","Canvas","brownNorthWestLat","brownNorthWestLon","brownSouthEastLat","brownSouthEastLon","Route","startLat","setStartLat","startLon","setStartLon","endLat","setEndLat","endLon","setEndLon","startLatBuffer","setStartLatBuffer","startLonBuffer","setStartLonBuffer","endLatBuffer","setEndLatBuffer","endLonBuffer","setEndLonBuffer","clickCoordinate","setClickCoordinate","releaseCoordinate","setReleaseCoordinate","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","route","setRoute","toCanvas","refreshButton","requestRoute","clickedOnCanvas","released","dX","dY","unstable_batchedUpdates","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","console","log","data","catch","error","zoomIn","setZoomCoords","zoomOut","latFromCenter","Math","abs","lonFromCenter","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAIC,iBAAiB,GAAG,SAAxB;AACA,IAAIC,iBAAiB,GAAG,CAAC,SAAzB;AACA,IAAIC,iBAAiB,GAAG,SAAxB;AACA,IAAIC,iBAAiB,GAAG,SAAxB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC2B,eAAD,EAAkBC,kBAAlB,IAAwC5B,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC6B,iBAAD,EAAoBC,oBAApB,IAA4C9B,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACiC,WAAD,EAAcC,aAAd,IAA+BlC,QAAQ,CAAC,EAAD,CAA7C,CAZe,CAaf;AACA;;AACE,QAAM,CAACmC,KAAD,EAAQC,QAAR,IAAoBpC,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIqC,QAAQ,GAAG,CAACF,KAAK,CAAC,CAAD,CAAN,EAAWxB,QAAX,EAAqBE,QAArB,EAA+BE,MAA/B,EAAuCE,MAAvC,CAAf;;AAEA,QAAMqB,aAAa,GAAG,MAAM;AACxB1B,IAAAA,WAAW,CAACO,cAAD,CAAX;AACAL,IAAAA,WAAW,CAACO,cAAD,CAAX;AACAL,IAAAA,SAAS,CAACO,YAAD,CAAT;AACAL,IAAAA,SAAS,CAACO,YAAD,CAAT;AACAc,IAAAA,YAAY;AACf,GAND;;AAQA,QAAMC,eAAe,GAAIC,QAAD,IAAc;AAClCX,IAAAA,oBAAoB,CAACW,QAAD,CAApB;;AACA,QAAGd,eAAe,KAAKE,iBAAvB,EAA0C,CACtC;AACH,KAFD,MAEO;AACH;AACA,UAAIa,EAAE,GAAGb,iBAAiB,CAAC,CAAD,CAAjB,GAAuBF,eAAe,CAAC,CAAD,CAA/C;AACA,UAAIgB,EAAE,GAAGd,iBAAiB,CAAC,CAAD,CAAjB,GAAuBF,eAAe,CAAC,CAAD,CAA/C;AACAzB,MAAAA,QAAQ,CAAC0C,uBAAT,CAAiC,MAAM;AACnChC,QAAAA,WAAW;AACXI,QAAAA,SAAS;AACTE,QAAAA,SAAS;AACTJ,QAAAA,WAAW;AACXyB,QAAAA,YAAY;AACf,OAND;AAOH;AACJ,GAhBD;AAkBF;AACF;AACA;;;AACE,QAAMA,YAAY,GAAG,MAAM;AACzB,UAAMM,MAAM,GAAG;AACX;AACAC,MAAAA,MAAM,EAAGnC,QAFE;AAGXoC,MAAAA,OAAO,EAAGlC,QAHC;AAIPmC,MAAAA,OAAO,EAAGjC,MAJH;AAKPkC,MAAAA,QAAQ,EAAGhC;AALJ,KAAf;AAQE,QAAIiC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uCAA+B;AAF1B;AADA,KAAb,CATuB,CAgBzB;AACA;;AACE/C,IAAAA,KAAK,CAACgD,IAAN,CACI,6BADJ,EAEIP,MAFJ,EAGIK,MAHJ,EAKKG,IALL,CAKUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADc,CAEd;AACA;;AACArB,MAAAA,QAAQ,CAACkB,QAAQ,CAACG,IAAT,CAAc,OAAd,CAAD,CAAR,CAJc,CAImB;AACpC,KAVL,EAYKC,KAZL,CAYW,UAAUC,KAAV,EAAiB;AACpBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAEH,KAfL;AAgBH,GAlCD;;AAoCA,QAAMC,MAAM,GAAG,MAAM;AACjB5B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA6B,IAAAA,aAAa;AAChB,GAHD;;AAKA,QAAMC,OAAO,GAAG,MAAM;AAClB9B,IAAAA,eAAe,CAAC,GAAD,CAAf;AACA6B,IAAAA,aAAa;AAChB,GAHD;;AAKA,QAAMA,aAAa,GAAG,MAAM;AACxBN,IAAAA,OAAO,CAACC,GAAR,CAAYzB,YAAZ;AAEA,QAAIgC,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAAUtD,QAAQ,GAAG,CAACA,QAAQ,GAAGI,MAAZ,IAAoB,CAAzC,IAA+CgB,YAAxD,CAApB;AACA,QAAImC,aAAa,GAAGF,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAAUhD,MAAM,GAAI,CAACA,MAAM,GAAGJ,QAAV,IAAoB,CAAxC,IAA8CkB,YAAvD,CAApB,CAJwB,CAMxB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,UAAMoC,MAAM,GAAI,CAACxD,QAAQ,GAACI,MAAV,IAAkB,CAAlC;AACA,UAAMqD,MAAM,GAAI,CAACvD,QAAQ,GAACI,MAAV,IAAkB,CAAlC;AAEA,UAAMoD,WAAW,GAAGF,MAAM,GAAIH,IAAI,CAACC,GAAL,CAAStD,QAAQ,GAAGwD,MAApB,IAA8BpC,YAA5D;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYa,WAAZ;AACA,UAAMC,SAAS,GAAGH,MAAM,GAAIH,IAAI,CAACC,GAAL,CAASlD,MAAM,GAAGoD,MAAlB,IAA4BpC,YAAxD;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AACA,UAAMC,SAAS,GAAGH,MAAM,GAAIJ,IAAI,CAACC,GAAL,CAAShD,MAAM,GAAGmD,MAAlB,IAA4BrC,YAAxD;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYe,SAAZ;AACA,UAAMC,WAAW,GAAGJ,MAAM,GAAIJ,IAAI,CAACC,GAAL,CAASpD,QAAQ,GAAGuD,MAApB,IAA8BrC,YAA5D;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAagB,WAAb,EA1BwB,CA0BG;;AAC3BtE,IAAAA,QAAQ,CAAC0C,uBAAT,CAAiC,MAAM;AACnChC,MAAAA,WAAW,CAACyD,WAAD,CAAX;AACArD,MAAAA,SAAS,CAACsD,SAAD,CAAT;AACApD,MAAAA,SAAS,CAACqD,SAAD,CAAT;AACAzD,MAAAA,WAAW,CAAC0D,WAAD,CAAX;AACAjC,MAAAA,YAAY;AACf,KAND;AAOH,GAlCD;;AAoCA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAII;AAAA,gBAAK5B;AAAL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,gBAAhB;AAAkC,MAAA,QAAQ,EAAIS;AAA9C;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,iBAAhB;AAAmC,MAAA,QAAQ,EAAIE;AAA/C;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,cAAhB;AAAgC,MAAA,QAAQ,EAAIE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,eAAhB;AAAiC,MAAA,QAAQ,EAAIE;AAA7C;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACY,QAAAA,aAAa;AAAG,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACsB,QAAAA,MAAM;AAAG,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACE,QAAAA,OAAO;AAAG,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,gBAAI3B,KAAK,CAAC,CAAD;AAAT;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAEE,QAAvB;AAAiC,MAAA,QAAQ,EAAIH,aAA7C;AAA4D,MAAA,WAAW,EAAIN,kBAA3E;AAA+F,MAAA,SAAS,EAAIY;AAA5G;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAnJQ9B,K;;KAAAA,K;AAoJT,eAAeA,KAAf","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport TextBox from './TextBox'\r\nimport React, {useState, useEffect} from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport axios from \"axios\";\r\nimport Canvas from \"./Canvas\";\r\n\r\nlet brownNorthWestLat = 41.828693\r\nlet brownNorthWestLon = -71.406524\r\nlet brownSouthEastLat = 41.822895\r\nlet brownSouthEastLon = 41.828693\r\n\r\nfunction Route() {\r\n  const [startLat, setStartLat] = useState(0);\r\n  const [startLon, setStartLon] = useState(0);\r\n  const [endLat, setEndLat] = useState(0);\r\n  const [endLon, setEndLon] = useState(0);\r\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\r\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\r\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\r\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\r\n  const [clickCoordinate, setClickCoordinate] = useState([]);\r\n  const [releaseCoordinate, setReleaseCoordinate] = useState([]);\r\n  const [zoomInFactor, setZoomInFactor] = useState(1);\r\n  const [startCanvas, refreshCanvas] = useState(\"\");\r\n  //TODO: Fill in the ? with appropriate names/values for a route.\r\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\r\n    const [route, setRoute] = useState([]);\r\n\r\n    let toCanvas = [route[3], startLat, startLon, endLat, endLon];\r\n\r\n    const refreshButton = () => {\r\n        setStartLat(startLatBuffer)\r\n        setStartLon(startLonBuffer)\r\n        setEndLat(endLatBuffer)\r\n        setEndLon(endLonBuffer)\r\n        requestRoute()\r\n    }\r\n\r\n    const clickedOnCanvas = (released) => {\r\n        setReleaseCoordinate(released)\r\n        if(clickCoordinate === releaseCoordinate) {\r\n            //route start/end\r\n        } else {\r\n            //panning\r\n            let dX = releaseCoordinate[0] - clickCoordinate[0]\r\n            let dY = releaseCoordinate[1] - clickCoordinate[1]\r\n            ReactDOM.unstable_batchedUpdates(() => {\r\n                setStartLat();\r\n                setEndLat();\r\n                setEndLon();\r\n                setStartLon();\r\n                requestRoute();\r\n            })\r\n        }\r\n    }\r\n\r\n  /**\r\n   * Makes an axios request.\r\n   */\r\n  const requestRoute = () => {\r\n    const toSend = {\r\n        //TODO: Pass in the values for the data. Follow the format the route expects!\r\n        srclat : startLat,\r\n        srclong : startLon,\r\n            destlat : endLat,\r\n            destlong : endLon\r\n  };\r\n\r\n      let config = {\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              'Access-Control-Allow-Origin': '*',\r\n          }\r\n      }\r\n\r\n    //Install and import this!\r\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n      axios.post(\r\n          \"http://localhost:4567/route\",\r\n          toSend,\r\n          config\r\n      )\r\n          .then(response => {\r\n              console.log(response.data);\r\n              //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n              //Note: It is very important that you understand how this is set up and why it works!\r\n              setRoute(response.data[\"route\"]);//console.log  the response.data[\"route\"]\r\n          })\r\n\r\n          .catch(function (error) {\r\n              console.log(error);\r\n\r\n          });\r\n  }\r\n\r\n  const zoomIn = () => {\r\n      setZoomInFactor(0.91);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const zoomOut = () => {\r\n      setZoomInFactor(1.1);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const setZoomCoords = () => {\r\n      console.log(zoomInFactor);\r\n\r\n      let latFromCenter = Math.abs(Math.abs((startLat - (startLat + endLat)/2)) * zoomInFactor);\r\n      let lonFromCenter = Math.abs(Math.abs((endLon -  (endLon + startLon)/2)) * zoomInFactor);\r\n\r\n      //const oldStartLat = startLat;\r\n      //const oldStartLon = startLon;\r\n      //const oldEndLat = endLat;\r\n      //const oldEndLon = endLon;\r\n\r\n      //console.log(oldStartLat);\r\n      //console.log(oldStartLon);\r\n      //console.log(oldEndLat);\r\n      //console.log(oldEndLon);\r\n\r\n      const avgLat = ((startLat+endLat)/2)\r\n      const avgLon = ((startLon+endLon)/2)\r\n\r\n      const newStartLat = avgLat + (Math.abs(startLat - avgLat) * zoomInFactor);\r\n      console.log(newStartLat)\r\n      const newEndLat = avgLat - (Math.abs(endLat - avgLat) * zoomInFactor);\r\n      console.log(newEndLat);\r\n      const newEndLon = avgLon + (Math.abs(endLon - avgLon) * zoomInFactor);\r\n      console.log(newEndLon);\r\n      const newStartLon = avgLon - (Math.abs(startLon - avgLon) * zoomInFactor);\r\n      console.log((newStartLon));// + 3)/2);// - ((oldEndLon -  (oldEndLon + 3)/2) * 1));\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n          setStartLat(newStartLat);\r\n          setEndLat(newEndLat);\r\n          setEndLon(newEndLon);\r\n          setStartLon(newStartLon);\r\n          requestRoute();\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Route\">\r\n      <header className=\"Route-header\">\r\n        <title>This is a title</title>\r\n      </header>\r\n        <h1>{startLat}</h1>\r\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLatBuffer}/>\r\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLonBuffer}/>\r\n        <TextBox label={\"End Latitude\"} onChange = {setEndLatBuffer}/>\r\n        <TextBox label={\"End Longitude\"} onChange = {setEndLonBuffer}/>\r\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Refresh</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\r\n        <p>{route[2]}</p>\r\n        <Canvas routetorender={toCanvas} onChange = {refreshCanvas} onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}/>\r\n    </div>\r\n  );\r\n}\r\nexport default Route;\r\n"]},"metadata":{},"sourceType":"module"}