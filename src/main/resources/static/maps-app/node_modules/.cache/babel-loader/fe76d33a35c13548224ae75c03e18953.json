{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\ben\\\\documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\nimport Canvas from \"./Canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Route() {\n  _s();\n\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0);\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\n  const [clickCoordinate, setClickCoordinate] = useState([]);\n  const [releaseCoordinate, setReleaseCoordinate] = useState([]);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [route, setRoute] = useState([]);\n  let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  const refreshButton = () => {\n    setStartLat(startLatBuffer);\n    setStartLon(startLonBuffer);\n    setEndLat(endLatBuffer);\n    setEndLon(endLonBuffer);\n    requestRoute();\n  };\n  /**\r\n   * Makes an axios request.\r\n   */\n\n\n  const requestRoute = () => {\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: startLat,\n      srclong: startLon,\n      destlat: endLat,\n      destlong: endLon\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = Math.abs(Math.abs(startLat - (startLat + endLat) / 2) * zoomInFactor);\n    let lonFromCenter = Math.abs(Math.abs(endLon - (endLon + startLon) / 2) * zoomInFactor); //const oldStartLat = startLat;\n    //const oldStartLon = startLon;\n    //const oldEndLat = endLat;\n    //const oldEndLon = endLon;\n    //console.log(oldStartLat);\n    //console.log(oldStartLon);\n    //console.log(oldEndLat);\n    //console.log(oldEndLon);\n\n    const avgLat = (startLat + endLat) / 2;\n    const avgLon = (startLon + endLon) / 2;\n    const newStartLat = avgLat + Math.abs(startLat - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(endLat - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(endLon - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(startLon - avgLon) * zoomInFactor;\n    console.log(newStartLon); // + 3)/2);// - ((oldEndLon -  (oldEndLon + 3)/2) * 1));\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n      requestRoute();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"refresh-button\",\n      children: /*#__PURE__*/_jsxDEV(AwesomeButton, {\n        type: \"primary\",\n        onPress: () => {\n          refreshButton();\n        },\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoom-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(AwesomeButton, {\n        type: \"primary\",\n        onPress: () => {\n          zoomIn();\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n        type: \"primary\",\n        onPress: () => {\n          zoomOut();\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: route[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      routetorender: toCanvas,\n      onChange: refreshCanvas,\n      onMouseDown: setClickCoordinate,\n      onMouseUp: setReleaseCoordinate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"NSKyYhK5osSpGnagpDeIevZmilE=\");\n\n_c = Route;\nexport default Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["C:/users/ben/documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","ReactDOM","AwesomeButton","axios","Canvas","Route","startLat","setStartLat","startLon","setStartLon","endLat","setEndLat","endLon","setEndLon","startLatBuffer","setStartLatBuffer","startLonBuffer","setStartLonBuffer","endLatBuffer","setEndLatBuffer","endLonBuffer","setEndLonBuffer","clickCoordinate","setClickCoordinate","releaseCoordinate","setReleaseCoordinate","startCanvas","refreshCanvas","route","setRoute","toCanvas","refreshButton","requestRoute","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","console","log","data","catch","error","zoomIn","setZoomInFactor","setZoomCoords","zoomOut","zoomInFactor","latFromCenter","Math","abs","lonFromCenter","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon","unstable_batchedUpdates"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport TextBox from './TextBox'\r\nimport React, {useState, useEffect} from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport axios from \"axios\";\r\nimport Canvas from \"./Canvas\";\r\n\r\nfunction Route() {\r\n  const [startLat, setStartLat] = useState(0);\r\n  const [startLon, setStartLon] = useState(0);\r\n  const [endLat, setEndLat] = useState(0);\r\n  const [endLon, setEndLon] = useState(0);\r\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\r\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\r\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\r\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\r\n  const [clickCoordinate, setClickCoordinate] = useState([]);\r\n  const [releaseCoordinate, setReleaseCoordinate] = useState([]);\r\n\r\n\r\n\r\n  const [startCanvas, refreshCanvas] = useState(\"\");\r\n  //TODO: Fill in the ? with appropriate names/values for a route.\r\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\r\n    const [route, setRoute] = useState([]);\r\n\r\n    let toCanvas = [route[3], startLat, startLon, endLat, endLon];\r\n\r\n    const refreshButton = () => {\r\n        setStartLat(startLatBuffer)\r\n        setStartLon(startLonBuffer)\r\n        setEndLat(endLatBuffer)\r\n        setEndLon(endLonBuffer)\r\n        requestRoute()\r\n    }\r\n\r\n  /**\r\n   * Makes an axios request.\r\n   */\r\n  const requestRoute = () => {\r\n    const toSend = {\r\n        //TODO: Pass in the values for the data. Follow the format the route expects!\r\n        srclat : startLat,\r\n        srclong : startLon,\r\n            destlat : endLat,\r\n            destlong : endLon\r\n  };\r\n\r\n      let config = {\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              'Access-Control-Allow-Origin': '*',\r\n          }\r\n      }\r\n\r\n    //Install and import this!\r\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n      axios.post(\r\n          \"http://localhost:4567/route\",\r\n          toSend,\r\n          config\r\n      )\r\n          .then(response => {\r\n              console.log(response.data);\r\n              //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n              //Note: It is very important that you understand how this is set up and why it works!\r\n              setRoute(response.data[\"route\"]);//console.log  the response.data[\"route\"]\r\n          })\r\n\r\n          .catch(function (error) {\r\n              console.log(error);\r\n\r\n          });\r\n  }\r\n\r\n  const zoomIn = () => {\r\n      setZoomInFactor(0.91);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const zoomOut = () => {\r\n      setZoomInFactor(1.1);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const setZoomCoords = () => {\r\n      console.log(zoomInFactor);\r\n\r\n      let latFromCenter = Math.abs(Math.abs((startLat - (startLat + endLat)/2)) * zoomInFactor);\r\n      let lonFromCenter = Math.abs(Math.abs((endLon -  (endLon + startLon)/2)) * zoomInFactor);\r\n\r\n      //const oldStartLat = startLat;\r\n      //const oldStartLon = startLon;\r\n      //const oldEndLat = endLat;\r\n      //const oldEndLon = endLon;\r\n\r\n      //console.log(oldStartLat);\r\n      //console.log(oldStartLon);\r\n      //console.log(oldEndLat);\r\n      //console.log(oldEndLon);\r\n\r\n      const avgLat = ((startLat+endLat)/2)\r\n      const avgLon = ((startLon+endLon)/2)\r\n\r\n      const newStartLat = avgLat + (Math.abs(startLat - avgLat) * zoomInFactor);\r\n      console.log(newStartLat)\r\n      const newEndLat = avgLat - (Math.abs(endLat - avgLat) * zoomInFactor);\r\n      console.log(newEndLat);\r\n      const newEndLon = avgLon + (Math.abs(endLon - avgLon) * zoomInFactor);\r\n      console.log(newEndLon);\r\n      const newStartLon = avgLon - (Math.abs(startLon - avgLon) * zoomInFactor);\r\n      console.log((newStartLon));// + 3)/2);// - ((oldEndLon -  (oldEndLon + 3)/2) * 1));\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n          setStartLat(newStartLat);\r\n          setEndLat(newEndLat);\r\n          setEndLon(newEndLon);\r\n          setStartLon(newStartLon);\r\n          requestRoute();\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Route\">\r\n      <header className=\"Route-header\">\r\n        <title>This is a title</title>\r\n      </header>\r\n        <h1>{startLat}</h1>\r\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLatBuffer}/>\r\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLonBuffer}/>\r\n        <TextBox label={\"End Latitude\"} onChange = {setEndLatBuffer}/>\r\n        <TextBox label={\"End Longitude\"} onChange = {setEndLonBuffer}/>\r\n        <div className=\"refresh-button\">\r\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Refresh</AwesomeButton>\r\n        </div>\r\n        <div className=\"zoom-buttons\">\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\r\n        </div>\r\n        <p>{route[2]}</p>\r\n        <Canvas routetorender={toCanvas} onChange = {refreshCanvas} onMouseDown = {setClickCoordinate} onMouseUp = {setReleaseCoordinate}/>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Route;\r\n"]},"metadata":{},"sourceType":"module"}