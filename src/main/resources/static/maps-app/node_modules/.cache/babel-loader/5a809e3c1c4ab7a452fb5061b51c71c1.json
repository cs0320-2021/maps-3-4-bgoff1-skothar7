{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\Ben\\\\Documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Canvas.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet curNorthWestLat;\nlet curNorthWestLon;\nlet curSouthEastLat;\nlet curSouthEastLon;\nlet pixToCoord; // global reference to the oldCanvas element\n\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx;\n\nfunction Canvas(props) {\n  _s();\n\n  let w = 800;\n  let h = 500;\n  let ref = useRef();\n  useEffect(() => {\n    canvas = ref.current;\n    pixToCoord = -50; //curSouthEastLat = 41.823876;\n    //curSouthEastLon = -71.395963;\n\n    curSouthEastLat = 43;\n    curSouthEastLon = -73; //curNorthWestLat = (curSouthEastLat - w/pixToCoord);\n    //curNorthWestLon = (curSouthEastLon - h/pixToCoord);\n\n    curNorthWestLat = 40;\n    curNorthWestLon = -72;\n    ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = 1;\n    let rawWaysData = props.routetorender;\n    let listOfWays = [];\n\n    if (rawWaysData != null) {\n      listOfWays = (rawWaysData + '').split(\";\");\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(Math.random() * 20 + 50, 50);\n      ctx.lineTo(90, 90);\n      ctx.strokeStyle = \"blue\";\n      ctx.stroke();\n    }\n\n    let i;\n    let parsedWay;\n    let type;\n    let startLat;\n    let startLon;\n    let endLat;\n    let endLon;\n\n    for (i = 0; i < listOfWays.length; i++) {\n      parsedWay = listOfWays[i].split(\",\");\n      type = parsedWay[0];\n      startLat = parseFloat(parsedWay[1]);\n      startLon = parseFloat(parsedWay[2]);\n      endLat = parseFloat(parsedWay[3]);\n      endLon = parseFloat(parsedWay[4]); //console.log(startLat)\n\n      console.log(startLat - curNorthWestLat);\n      console.log(startLon - curNorthWestLon); //console.log(startLon)\n      //console.log(endLat)\n      //console.log(endLon)\n\n      ctx.beginPath();\n      ctx.moveTo((startLat - curNorthWestLat) * pixToCoord, (startLon - curNorthWestLon) * pixToCoord);\n      ctx.lineTo((endLat - curNorthWestLat) * pixToCoord, (endLon - curNorthWestLon) * pixToCoord);\n      ctx.strokeStyle = \"red\";\n      ctx.stroke();\n    } //ctx.beginPath();\n    //ctx.moveTo(0, 0);\n    //ctx.lineTo(100, 100);\n    //ctx.strokeStyle = \"red\";\n    //ctx.stroke();\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: ref,\n      style: {\n        width: w,\n        height: h\n      },\n      routetorender: props.routetorender,\n      onChange: e => props.onChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Canvas, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["C:/users/Ben/Documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Canvas.js"],"names":["React","useEffect","useRef","curNorthWestLat","curNorthWestLon","curSouthEastLat","curSouthEastLon","pixToCoord","canvas","ctx","Canvas","props","w","h","ref","current","getContext","lineWidth","rawWaysData","routetorender","listOfWays","split","beginPath","moveTo","Math","random","lineTo","strokeStyle","stroke","i","parsedWay","type","startLat","startLon","endLat","endLon","length","parseFloat","console","log","width","height","e","onChange","target","value"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, {useEffect, useRef} from \"react\";\r\n\r\nlet curNorthWestLat;\r\nlet curNorthWestLon;\r\n\r\nlet curSouthEastLat;\r\nlet curSouthEastLon;\r\n\r\nlet pixToCoord;\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\nfunction Canvas(props) {\r\n    let w = 800;\r\n    let h = 500;\r\n    let ref = useRef();\r\n    useEffect(() => {\r\n        canvas = ref.current;\r\n        pixToCoord = -50;\r\n\r\n        //curSouthEastLat = 41.823876;\r\n        //curSouthEastLon = -71.395963;\r\n        curSouthEastLat = 43;\r\n        curSouthEastLon = -73;\r\n\r\n        //curNorthWestLat = (curSouthEastLat - w/pixToCoord);\r\n        //curNorthWestLon = (curSouthEastLon - h/pixToCoord);\r\n\r\n        curNorthWestLat = 40;\r\n        curNorthWestLon = -72;\r\n\r\n        ctx = canvas.getContext(\"2d\");\r\n        ctx.lineWidth = 1;\r\n\r\n        let rawWaysData = props.routetorender\r\n        let listOfWays = [];\r\n        if (rawWaysData != null) {\r\n            listOfWays = (rawWaysData + '').split(\";\")\r\n        } else {\r\n            ctx.beginPath();\r\n            ctx.moveTo(Math.random()*20+50, 50);\r\n            ctx.lineTo(90, 90);\r\n            ctx.strokeStyle = \"blue\";\r\n            ctx.stroke();\r\n        }\r\n\r\n        let i;\r\n        let parsedWay;\r\n        let type;\r\n        let startLat;\r\n        let startLon;\r\n        let endLat;\r\n        let endLon;\r\n        for(i=0; i<listOfWays.length; i++){\r\n            parsedWay =  listOfWays[i].split(\",\");\r\n            type = parsedWay[0]\r\n            startLat = parseFloat(parsedWay[1]);\r\n            startLon = parseFloat(parsedWay[2]);\r\n            endLat = parseFloat(parsedWay[3]);\r\n            endLon = parseFloat(parsedWay[4]);\r\n            //console.log(startLat)\r\n            console.log((startLat - curNorthWestLat))\r\n            console.log((startLon - curNorthWestLon))\r\n            //console.log(startLon)\r\n            //console.log(endLat)\r\n            //console.log(endLon)\r\n            ctx.beginPath();\r\n            ctx.moveTo((startLat - curNorthWestLat)*pixToCoord, (startLon - curNorthWestLon)*pixToCoord);\r\n            ctx.lineTo((endLat - curNorthWestLat)*pixToCoord, (endLon - curNorthWestLon)*pixToCoord);\r\n            ctx.strokeStyle = \"red\";\r\n            ctx.stroke();\r\n\r\n\r\n        }\r\n        //ctx.beginPath();\r\n        //ctx.moveTo(0, 0);\r\n        //ctx.lineTo(100, 100);\r\n        //ctx.strokeStyle = \"red\";\r\n        //ctx.stroke();\r\n\r\n    })\r\n    return (\r\n        <div className=\"Canvas\">\r\n            <canvas\r\n                ref={ref}\r\n                style={{ width: w, height: h }}\r\n                routetorender={props.routetorender}\r\n                onChange={(e) => props.onChange(e.target.value)}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}