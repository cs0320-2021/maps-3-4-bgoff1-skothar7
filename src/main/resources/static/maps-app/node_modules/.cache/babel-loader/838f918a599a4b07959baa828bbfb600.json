{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\Ben\\\\Documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Canvas.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet curNorthWestLat;\nlet curNorthWestLon;\nlet curSouthEastLat;\nlet curSouthEastLon;\nlet pixToCoord; // global reference to the oldCanvas element\n\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx;\n\nfunction Canvas(props) {\n  _s();\n\n  useEffect(() => {\n    canvas = /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 18\n    }, this);\n    canvas.width = 800;\n    canvas.height = 500;\n    pixToCoord = 200;\n    curSouthEastLat = 41.823876;\n    curSouthEastLon = -71.395963;\n    curNorthWestLat = curSouthEastLat - canvas.width / pixToCoord;\n    curNorthWestLon = curSouthEastLon - canvas.height / pixToCoord; // TODO: set up the oldCanvas context\n    //<oldCanvas id=\"myCanvas\" width=\"200\" height=\"100\"></oldCanvas>\n    //var c = document.getElementById(\"myCanvas\");\n\n    ctx = canvas.getContext(\"2d\"); //var firstList =\n\n    let listOfWays = props.routeToRender.split(\";\");\n    let i;\n    let parsedWay;\n    let type;\n    let startLat;\n    let startLon;\n    let EndLat;\n    let EndLon;\n\n    for (i = 0; i < listOfWays.length; i++) {\n      parsedWay = listOfWays[i].split(\",\");\n      type = parsedWay[0];\n      startLat = parseFloat(parsedWay[1]);\n      startLon = parseFloat(parsedWay[2]);\n      EndLat = parseFloat(parsedWay[3]);\n      EndLon = parseFloat(parsedWay[4]);\n      ctx.beginPath();\n      ctx.moveTo((startLat - curNorthWestLat) * pixToCoord + canvas.offsetLeft, (startLon - curNorthWestLon) * pixToCoord + canvas.offsetTop);\n      ctx.lineTo((EndLat - curNorthWestLat) * pixToCoord + canvas.offsetLeft, (EndLon - curNorthWestLon) * pixToCoord + canvas.offsetTop);\n      ctx.stroke();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Canvas\",\n    children: [\"canvas\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      label: props.label,\n      onChange: e => props.onChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Canvas, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["C:/users/Ben/Documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Canvas.js"],"names":["useEffect","curNorthWestLat","curNorthWestLon","curSouthEastLat","curSouthEastLon","pixToCoord","canvas","ctx","Canvas","props","width","height","getContext","listOfWays","routeToRender","split","i","parsedWay","type","startLat","startLon","EndLat","EndLon","length","parseFloat","beginPath","moveTo","offsetLeft","offsetTop","lineTo","stroke","label","e","onChange","target","value"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport {useEffect} from \"react\";\r\n\r\nlet curNorthWestLat;\r\nlet curNorthWestLon;\r\n\r\nlet curSouthEastLat;\r\nlet curSouthEastLon;\r\n\r\nlet pixToCoord;\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\nfunction Canvas(props) {\r\n\r\n    useEffect(() => {\r\n\r\n        canvas = <canvas id=\"map\"></canvas>\r\n\r\n        canvas.width = 800;\r\n        canvas.height = 500;\r\n        pixToCoord = 200;\r\n\r\n        curSouthEastLat = 41.823876;\r\n        curSouthEastLon = -71.395963;\r\n\r\n        curNorthWestLat = (curSouthEastLat - canvas.width/pixToCoord);\r\n        curNorthWestLon = (curSouthEastLon - canvas.height/pixToCoord);\r\n\r\n        // TODO: set up the oldCanvas context\r\n\r\n        //<oldCanvas id=\"myCanvas\" width=\"200\" height=\"100\"></oldCanvas>\r\n        //var c = document.getElementById(\"myCanvas\");\r\n        ctx = canvas.getContext(\"2d\");\r\n\r\n        //var firstList =\r\n        let listOfWays = props.routeToRender.split(\";\");\r\n\r\n        let i;\r\n        let parsedWay;\r\n        let type;\r\n        let startLat;\r\n        let startLon;\r\n        let EndLat;\r\n        let EndLon;\r\n        for(i=0; i<listOfWays.length; i++){\r\n            parsedWay =  listOfWays[i].split(\",\");\r\n            type = parsedWay[0]\r\n            startLat = parseFloat(parsedWay[1]);\r\n            startLon = parseFloat(parsedWay[2]);\r\n            EndLat = parseFloat(parsedWay[3]);\r\n            EndLon = parseFloat(parsedWay[4]);\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo((startLat - curNorthWestLat)*pixToCoord + canvas.offsetLeft , (startLon - curNorthWestLon)*pixToCoord + canvas.offsetTop);\r\n            ctx.lineTo((EndLat - curNorthWestLat)*pixToCoord + canvas.offsetLeft , (EndLon - curNorthWestLon)*pixToCoord + canvas.offsetTop);\r\n            ctx.stroke();\r\n\r\n\r\n        }\r\n\r\n    })\r\n    return (\r\n        <div className=\"Canvas\">\r\n            canvas\r\n            <input  type=\"text\" label={props.label} onChange={(e) => props.onChange(e.target.value)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}