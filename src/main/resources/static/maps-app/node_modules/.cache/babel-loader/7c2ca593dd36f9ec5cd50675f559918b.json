{"ast":null,"code":"var _jsxFileName = \"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect } from 'react';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\nimport Canvas from \"./Canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Route() {\n  _s();\n\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0);\n  const [zoomInFactor, setZoomInFactor] = useState(1); //const [endLon, setZoomInFactor] = useState(0);\n\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [route, setRoute] = useState([]);\n  let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n  /**\n   * Makes an axios request.\n   */\n\n  const requestRoute = () => {\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: startLat,\n      srclong: startLon,\n      destlat: endLat,\n      destlong: endLon\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.8);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.25);\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = (startLat - (startLat - endLat) / 2) * zoomInFactor;\n    let lonFromCenter = (endLon - (endLon - startLon) / 2) * zoomInFactor;\n    setStartLat(latFromCenter + (startLat - endLat) / 2);\n    setEndLat((startLat - endLat) / 2 - latFromCenter);\n    setEndLon(lonFromCenter + (endLon - startLon) / 2);\n    setStartLon((endLon - startLon) / 2 - lonFromCenter);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        requestRoute();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: route[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      routetorender: toCanvas,\n      onChange: refreshCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"Af0sunUrHJ0rWC86rZm/Ii60AbQ=\");\n\n_c = Route;\nexport default Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","AwesomeButton","axios","Canvas","Route","startLat","setStartLat","startLon","setStartLon","endLat","setEndLat","endLon","setEndLon","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","route","setRoute","toCanvas","requestRoute","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","console","log","data","catch","error","zoomIn","setZoomCoords","zoomOut","latFromCenter","lonFromCenter"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;AAEE,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,CAAD,CAAhD,CANa,CAOb;;AAIF,QAAM,CAACgB,WAAD,EAAcC,aAAd,IAA+BjB,QAAQ,CAAC,EAAD,CAA7C,CAXe,CAYf;AACA;;AACE,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIoB,QAAQ,GAAG,CAACF,KAAK,CAAC,CAAD,CAAN,EAAWZ,QAAX,EAAqBE,QAArB,EAA+BE,MAA/B,EAAuCE,MAAvC,CAAf;AAEF;AACF;AACA;;AACE,QAAMS,YAAY,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAG;AACX;AACAC,MAAAA,MAAM,EAAGjB,QAFE;AAGXkB,MAAAA,OAAO,EAAGhB,QAHC;AAIPiB,MAAAA,OAAO,EAAGf,MAJH;AAKPgB,MAAAA,QAAQ,EAAGd;AALJ,KAAf;AAQE,QAAIe,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uCAA+B;AAF1B;AADA,KAAb,CATuB,CAgBzB;AACA;;AACEzB,IAAAA,KAAK,CAAC0B,IAAN,CACI,6BADJ,EAEIP,MAFJ,EAGIK,MAHJ,EAKKG,IALL,CAKUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADc,CAEd;AACA;;AACAf,MAAAA,QAAQ,CAACY,QAAQ,CAACG,IAAT,CAAc,OAAd,CAAD,CAAR,CAJc,CAImB;AACpC,KAVL,EAYKC,KAZL,CAYW,UAAUC,KAAV,EAAiB;AACpBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAEH,KAfL;AAgBH,GAlCD;;AAoCA,QAAMC,MAAM,GAAG,MAAM;AACjBtB,IAAAA,eAAe,CAAC,GAAD,CAAf;AACAuB,IAAAA,aAAa;AAChB,GAHD;;AAIE,QAAMC,OAAO,GAAG,MAAM;AAClBxB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAFD;;AAIA,QAAMuB,aAAa,GAAG,MAAM;AAE1BN,IAAAA,OAAO,CAACC,GAAR,CAAYnB,YAAZ;AAEE,QAAI0B,aAAa,GAAG,CAAClC,QAAQ,GAAG,CAACA,QAAQ,GAAGI,MAAZ,IAAoB,CAAhC,IAAqCI,YAAzD;AACA,QAAI2B,aAAa,GAAG,CAAC7B,MAAM,GAAI,CAACA,MAAM,GAAGJ,QAAV,IAAoB,CAA/B,IAAoCM,YAAxD;AAEAP,IAAAA,WAAW,CAACiC,aAAa,GAAG,CAAClC,QAAQ,GAACI,MAAV,IAAkB,CAAnC,CAAX;AACAC,IAAAA,SAAS,CAAC,CAACL,QAAQ,GAACI,MAAV,IAAkB,CAAlB,GAAsB8B,aAAvB,CAAT;AACA3B,IAAAA,SAAS,CAAC4B,aAAa,GAAG,CAAC7B,MAAM,GAACJ,QAAR,IAAkB,CAAnC,CAAT;AACAC,IAAAA,WAAW,CAAC,CAACG,MAAM,GAACJ,QAAR,IAAkB,CAAlB,GAAsBiC,aAAvB,CAAX;AACH,GAXD;;AAaF,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAII;AAAA,gBAAKnC;AAAL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,gBAAhB;AAAkC,MAAA,QAAQ,EAAIC;AAA9C;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,iBAAhB;AAAmC,MAAA,QAAQ,EAAIE;AAA/C;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,cAAhB;AAAgC,MAAA,QAAQ,EAAIE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,eAAhB;AAAiC,MAAA,QAAQ,EAAIE;AAA7C;AAAA;AAAA;AAAA;AAAA,YARJ,eAUE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACQ,QAAAA,YAAY;AAAG,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACgB,QAAAA,MAAM;AAAG,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACE,QAAAA,OAAO;AAAG,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAA,gBAAIrB,KAAK,CAAC,CAAD;AAAT;AAAA;AAAA;AAAA;AAAA,YAbJ,eAeI,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAEE,QAAvB;AAAiC,MAAA,QAAQ,EAAIH;AAA7C;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAnGQZ,K;;KAAAA,K;AAoGT,eAAeA,KAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport TextBox from './TextBox'\nimport React, {useState, useEffect} from 'react'\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\nimport Canvas from \"./Canvas\";\n\nfunction Route() {\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0);\n\n    const [zoomInFactor, setZoomInFactor] = useState(1);\n    //const [endLon, setZoomInFactor] = useState(0);\n\n\n\n  const [startCanvas, refreshCanvas] = useState(\"\");\n  //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n    const [route, setRoute] = useState([]);\n\n    let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  /**\n   * Makes an axios request.\n   */\n  const requestRoute = () => {\n    const toSend = {\n        //TODO: Pass in the values for the data. Follow the format the route expects!\n        srclat : startLat,\n        srclong : startLon,\n            destlat : endLat,\n            destlong : endLon\n  };\n\n      let config = {\n          headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*',\n          }\n      }\n\n    //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n      axios.post(\n          \"http://localhost:4567/route\",\n          toSend,\n          config\n      )\n          .then(response => {\n              console.log(response.data);\n              //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n              //Note: It is very important that you understand how this is set up and why it works!\n              setRoute(response.data[\"route\"]);//console.log  the response.data[\"route\"]\n          })\n\n          .catch(function (error) {\n              console.log(error);\n\n          });\n  }\n\n  const zoomIn = () => {\n      setZoomInFactor(0.8);\n      setZoomCoords();\n  }\n    const zoomOut = () => {\n        setZoomInFactor(1.25);\n    }\n\n    const setZoomCoords = () => {\n\n      console.log(zoomInFactor);\n\n        let latFromCenter = (startLat - (startLat - endLat)/2) * zoomInFactor;\n        let lonFromCenter = (endLon -  (endLon - startLon)/2) * zoomInFactor;\n\n        setStartLat(latFromCenter + (startLat-endLat)/2);\n        setEndLat((startLat-endLat)/2 - latFromCenter);\n        setEndLon(lonFromCenter + (endLon-startLon)/2);\n        setStartLon((endLon-startLon)/2 - lonFromCenter);\n    }\n\n  return (\n    <div className=\"Route\">\n      <header className=\"Route-header\">\n        <title>This is a title</title>\n      </header>\n        <h1>{startLat}</h1>\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLat}/>\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLon}/>\n        <TextBox label={\"End Latitude\"} onChange = {setEndLat}/>\n        <TextBox label={\"End Longitude\"} onChange = {setEndLon}/>\n\n      <AwesomeButton type=\"primary\" onPress={() => {requestRoute()}}>Refresh</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\n        <p>{route[2]}</p>\n\n        <Canvas routetorender={toCanvas} onChange = {refreshCanvas} />\n\n\n    </div>\n  );\n}\nexport default Route;\n"]},"metadata":{},"sourceType":"module"}