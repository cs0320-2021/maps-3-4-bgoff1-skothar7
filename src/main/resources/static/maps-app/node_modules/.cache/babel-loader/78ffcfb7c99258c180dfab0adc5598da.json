{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\ben\\\\documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\"; // global reference to the oldCanvas element\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nlet startLat = 41.831311;\nlet startLon = -71.406524;\nlet endLat = 41.821395;\nlet endLon = -71.396608;\nlet clickCoordinate = [];\nlet releaseCoordinate = [];\nlet routeStartLat;\nlet routeStartLon;\nlet routeEndLat;\nlet routeEndLon;\n\nfunction setStartLat(slat) {\n  startLat = parseFloat(slat);\n}\n\nfunction getStartLat() {\n  return parseFloat(startLat);\n}\n\nfunction setStartLon(slon) {\n  startLon = parseFloat(slon);\n}\n\nfunction getStartLon() {\n  return parseFloat(startLon);\n}\n\nfunction setEndLat(elat) {\n  endLat = parseFloat(elat);\n}\n\nfunction getEndLat() {\n  return parseFloat(endLat);\n}\n\nfunction setEndLon(elon) {\n  endLon = parseFloat(elon);\n}\n\nfunction getEndLon() {\n  return parseFloat(endLon);\n}\n\nfunction setRouteStartLat(slat) {\n  routeStartLat = parseFloat(slat);\n}\n\nfunction getRouteStartLat() {\n  return parseFloat(routeStartLat);\n}\n\nfunction setRouteStartLon(slon) {\n  routeStartLon = parseFloat(slon);\n}\n\nfunction getRouteStartLon() {\n  return parseFloat(routeStartLon);\n}\n\nfunction setRouteEndLat(elat) {\n  routeEndLat = parseFloat(elat);\n}\n\nfunction getRouteEndLat() {\n  return parseFloat(routeEndLat);\n}\n\nfunction setRouteEndLon(elon) {\n  routeEndLon = parseFloat(elon);\n}\n\nfunction getRouteEndLon() {\n  return parseFloat(routeEndLon);\n}\n\nfunction setClickCoordinate(click) {\n  clickCoordinate = click;\n}\n\nfunction getClickCoordinate() {\n  return clickCoordinate;\n}\n\nfunction setReleaseCoordinate(release) {\n  releaseCoordinate = release;\n}\n\nfunction getReleaseCoordinate() {\n  return releaseCoordinate;\n}\n\nfunction Route(props) {\n  _s();\n\n  const w = 600.0;\n  const h = 600.0;\n  let coordToPix = parseFloat((getStartLon() - getEndLon()) / w);\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [ways, setWays] = useState([]);\n  const [route, setRoute] = useState([]); //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  /**\r\n   * Makes an axios request.\r\n   */\n\n  const requestWays = () => {\n    console.log(9 + \" \" + startLon);\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getStartLat(),\n      srclong: getStartLon(),\n      destlat: getEndLat(),\n      destlong: getEndLon()\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/ways\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setWays(response.data[\"ways\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let ref = useRef();\n  const [firstRender, setFirstRender] = useState(true);\n  useEffect(() => {\n    if (firstRender) {\n      setFirstRender(false);\n      requestWays();\n    }\n\n    canvas = ref.current; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n    //smooths lines\n\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    console.log(getEndLat());\n    console.log(getEndLon());\n    console.log(getStartLat());\n    console.log(getStartLon());\n    printCanvas(ways);\n    printCanvas(route);\n    console.log(\"done\");\n  });\n\n  const printCanvas = toPrint => {\n    console.log(toPrint.length);\n    let parsedWay;\n    let type;\n    let startLatWay;\n    let startLonWay;\n    let endLatWay;\n    let endLonWay;\n    let startCircle;\n    let startPixX;\n    let startPixY;\n    let endPixX;\n    let endPixY;\n    startCircle = false;\n    console.log(\"low\" + toPrint.length);\n\n    for (let i = 0; i < 13\n    /*toPrint.length*/\n    ; i++) {\n      parsedWay = toPrint[i].split(\",\");\n      type = parsedWay[0];\n      startLatWay = parseFloat(parsedWay[1]);\n      startLonWay = parseFloat(parsedWay[2]);\n      endLatWay = parseFloat(parsedWay[3]);\n      endLonWay = parseFloat(parsedWay[4]);\n      startPixX = w * (startLonWay - getStartLon()) / (getEndLon() - getStartLon());\n      startPixY = h * (startLatWay - getStartLat()) / (getEndLat() - getStartLat());\n      endPixX = w * (endLonWay - getStartLon()) / (getEndLon() - getStartLon());\n      endPixY = h * (endLatWay - getStartLat()) / (getEndLat() - getStartLat());\n      ctx.beginPath();\n      ctx.moveTo(startPixX, startPixY);\n      ctx.lineTo(endPixX, endPixY); //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\n      //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\n\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      } else {\n        if (type === \"path\") {\n          console.log(\"yes\");\n          ctx.strokeStyle = \"pink\";\n          ctx.lineWidth = 2;\n          ctx.stroke();\n\n          if (!startCircle) {\n            //ctx.moveTo(startPixX, startPixY);\n            //ctx.beginPath();\n            //ctx.arc(startPixX, startPixY, 15, 0, 2 * Math.PI);\n            //ctx.rect(startPixX - 21, startPixY - 21, 42, 42)\n            startCircle = true;\n          } else {\n            if (i === toPrint.length - 1) {//ctx.moveTo(endPixX, endPixY);\n              //ctx.beginPath();\n              //ctx.arc(endPixX, endPixY, 15, 0, 2 * Math.PI);\n              //ctx.rect(endPixX - 21, endPixY - 21, 42, 42)\n            }\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.lineWidth = 1;\n    }\n  };\n\n  const refreshButton = () => {\n    console.log(ways.length);\n    requestWays();\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getRouteStartLat(),\n      srclong: getRouteStartLon(),\n      destlat: getRouteEndLat(),\n      destlong: getRouteEndLon()\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]); //console.log  the response.data[\"route\"]\n\n      printCanvas(response.data[\"route\"]);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    console.log(ways.length); //to test\n    //41.825158\n    // -71.404687\n    //41.827525\n    //-71.400441\n  };\n\n  const clickedOnCanvas = clicked => {\n    setClickCoordinate(clicked);\n  };\n\n  const releasedOnCanvas = released => {\n    setReleaseCoordinate(released);\n\n    if (getClickCoordinate() === getReleaseCoordinate()) {//route start/end\n    } else {\n      //panning\n      let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0])) * coordToPix;\n      let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1])) * coordToPix;\n      console.log(releaseCoordinate[0]);\n      setStartLat(getStartLat() - dY);\n      setEndLat(getEndLat() - dY);\n      setEndLon(getEndLon() + dX);\n      setStartLon(getStartLon() + dX);\n      requestWays();\n    }\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = Math.abs(Math.abs(getStartLat() - (getStartLat() + getEndLat()) / 2) * zoomInFactor);\n    let lonFromCenter = Math.abs(Math.abs(getEndLon() - (getEndLon() + getStartLon()) / 2) * zoomInFactor);\n    const avgLat = (getStartLat() + getEndLat()) / 2;\n    const avgLon = (getStartLon() + getEndLon()) / 2;\n    const newStartLat = avgLat + Math.abs(getStartLat() - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(getEndLat() - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(getEndLon() - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(getStartLon() - avgLon) * zoomInFactor;\n    console.log(newStartLon);\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n    });\n    requestWays();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setRouteStartLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setRouteStartLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setRouteEndLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setRouteEndLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Find Path\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ways[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Canvas\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: ref,\n        style: {\n          width: w,\n          height: h\n        },\n        routetorender: props.routetorender,\n        onChange: e => props.onChange(e.target.value),\n        onMouseDown: e => clickedOnCanvas([e.pageX, e.pageY]),\n        onMouseUp: e => releasedOnCanvas([e.pageX, e.pageY])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this), \"hi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"2+m0PpGDr+WWNv9sUtG4dFrCKWQ=\");\n\n_c = Route;\nexport default Route; //<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["C:/users/ben/documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","useRef","ReactDOM","AwesomeButton","axios","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","startLat","startLon","endLat","endLon","clickCoordinate","releaseCoordinate","routeStartLat","routeStartLon","routeEndLat","routeEndLon","setStartLat","slat","parseFloat","getStartLat","setStartLon","slon","getStartLon","setEndLat","elat","getEndLat","setEndLon","elon","getEndLon","setRouteStartLat","getRouteStartLat","setRouteStartLon","getRouteStartLon","setRouteEndLat","getRouteEndLat","setRouteEndLon","getRouteEndLon","setClickCoordinate","click","getClickCoordinate","setReleaseCoordinate","release","getReleaseCoordinate","Route","props","w","h","coordToPix","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","ways","setWays","route","setRoute","requestWays","console","log","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","data","catch","error","ref","firstRender","setFirstRender","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","clearRect","lineWidth","printCanvas","toPrint","length","parsedWay","type","startLatWay","startLonWay","endLatWay","endLonWay","startCircle","startPixX","startPixY","endPixX","endPixY","i","split","beginPath","moveTo","lineTo","strokeStyle","stroke","refreshButton","clickedOnCanvas","clicked","releasedOnCanvas","released","dX","dY","zoomIn","setZoomCoords","zoomOut","latFromCenter","Math","abs","lonFromCenter","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon","unstable_batchedUpdates","routetorender","e","onChange","target","value","pageX","pageY"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport TextBox from './TextBox'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport axios from \"axios\";\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\n\r\n\r\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\nconst getPixelRatio = context => {\r\n    let backingStore =\r\n        context.backingStorePixelRatio ||\r\n        context.webkitBackingStorePixelRatio ||\r\n        context.mozBackingStorePixelRatio ||\r\n        context.msBackingStorePixelRatio ||\r\n        context.oBackingStorePixelRatio ||\r\n        context.backingStorePixelRatio ||\r\n        1;\r\n    return (window.devicePixelRatio || 1) / backingStore;\r\n};\r\n\r\nlet startLat = 41.831311;\r\nlet startLon = -71.406524;\r\nlet endLat = 41.821395;\r\nlet endLon = -71.396608;\r\nlet clickCoordinate = [];\r\nlet releaseCoordinate = [];\r\nlet routeStartLat;\r\nlet routeStartLon;\r\nlet routeEndLat;\r\nlet routeEndLon;\r\n\r\nfunction setStartLat(slat) {\r\n    startLat = parseFloat(slat)\r\n}\r\n\r\nfunction getStartLat() {\r\n    return parseFloat(startLat)\r\n}\r\n\r\nfunction setStartLon(slon) {\r\n    startLon = parseFloat(slon)\r\n}\r\n\r\nfunction getStartLon() {\r\n    return parseFloat(startLon)\r\n}\r\n\r\nfunction setEndLat(elat) {\r\n    endLat = parseFloat(elat)\r\n}\r\n\r\nfunction getEndLat() {\r\n    return parseFloat(endLat)\r\n}\r\n\r\nfunction setEndLon(elon) {\r\n    endLon = parseFloat(elon)\r\n}\r\n\r\nfunction getEndLon() {\r\n    return parseFloat(endLon)\r\n}\r\n\r\nfunction setRouteStartLat(slat) {\r\n    routeStartLat = parseFloat(slat)\r\n}\r\n\r\nfunction getRouteStartLat() {\r\n    return parseFloat(routeStartLat)\r\n}\r\n\r\nfunction setRouteStartLon(slon) {\r\n    routeStartLon = parseFloat(slon)\r\n}\r\n\r\nfunction getRouteStartLon() {\r\n    return parseFloat(routeStartLon)\r\n}\r\n\r\nfunction setRouteEndLat(elat) {\r\n    routeEndLat = parseFloat(elat)\r\n}\r\n\r\nfunction getRouteEndLat() {\r\n    return parseFloat(routeEndLat)\r\n}\r\n\r\nfunction setRouteEndLon(elon) {\r\n    routeEndLon = parseFloat(elon)\r\n}\r\n\r\nfunction getRouteEndLon() {\r\n    return parseFloat(routeEndLon)\r\n}\r\n\r\nfunction setClickCoordinate(click) {\r\n    clickCoordinate = click\r\n}\r\n\r\nfunction getClickCoordinate() {\r\n    return clickCoordinate\r\n}\r\n\r\nfunction setReleaseCoordinate(release) {\r\n    releaseCoordinate = release\r\n}\r\n\r\nfunction getReleaseCoordinate() {\r\n    return releaseCoordinate\r\n}\r\n\r\n\r\n\r\nfunction Route(props) {\r\n    const w = 600.0;\r\n    const h = 600.0;\r\n    let coordToPix = parseFloat((getStartLon() - getEndLon())/w);\r\n    const [zoomInFactor, setZoomInFactor] = useState(1);\r\n    const [startCanvas, refreshCanvas] = useState(\"\");\r\n//TODO: Fill in the ? with appropriate names/values for a route.\r\n//Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\r\n    const [ways, setWays] = useState([]);\r\n    const [route, setRoute] = useState([]);\r\n    //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\r\n\r\n    /**\r\n     * Makes an axios request.\r\n     */\r\n    const requestWays = () => {\r\n        console.log(9 + \" \" + startLon)\r\n        const toSend = {\r\n            //TODO: Pass in the values for the data. Follow the format the route expects!\r\n            srclat : getStartLat(),\r\n            srclong : getStartLon(),\r\n            destlat : getEndLat(),\r\n            destlong : getEndLon()\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        //Install and import this!\r\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n        axios.post(\r\n            \"http://localhost:4567/ways\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n                //Note: It is very important that you understand how this is set up and why it works!\r\n                setWays(response.data[\"ways\"]);//console.log  the response.data[\"route\"]\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n        let ref = useRef();\r\n        const [firstRender, setFirstRender] = useState(true);\r\n        useEffect(() => {\r\n            if (firstRender) {\r\n                setFirstRender(false)\r\n                requestWays()\r\n            }\r\n            canvas = ref.current;\r\n            //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\n            //smooths lines\r\n            ctx = canvas.getContext(\"2d\");\r\n            let ratio = getPixelRatio(ctx);\r\n            let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\r\n            let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\r\n            canvas.width = width * ratio;\r\n            canvas.height = height * ratio;\r\n            canvas.style.width = `${width}px`;\r\n            canvas.style.height = `${height}px`;\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.lineWidth = 1\r\n\r\n            console.log(getEndLat());\r\n            console.log(getEndLon());\r\n            console.log(getStartLat());\r\n            console.log(getStartLon());\r\n\r\n            printCanvas(ways)\r\n            printCanvas(route)\r\n\r\n            console.log(\"done\")\r\n\r\n        })\r\n\r\n    const printCanvas = (toPrint) => {\r\n            console.log(toPrint.length)\r\n        let parsedWay;\r\n        let type;\r\n        let startLatWay;\r\n        let startLonWay;\r\n        let endLatWay;\r\n        let endLonWay;\r\n        let startCircle;\r\n        let startPixX;\r\n        let startPixY;\r\n        let endPixX;\r\n        let endPixY;\r\n\r\n        startCircle = false\r\n\r\n        console.log(\"low\" + toPrint.length);\r\n        for (let i=0; i<13/*toPrint.length*/; i++) {\r\n            parsedWay = toPrint[i].split(\",\");\r\n            type = parsedWay[0]\r\n            startLatWay = parseFloat(parsedWay[1]);\r\n            startLonWay = parseFloat(parsedWay[2]);\r\n            endLatWay = parseFloat(parsedWay[3]);\r\n            endLonWay = parseFloat(parsedWay[4]);\r\n            startPixX = w*(startLonWay - getStartLon())/(getEndLon() - getStartLon())\r\n            startPixY = h*(startLatWay - getStartLat())/(getEndLat() - getStartLat())\r\n            endPixX = w*(endLonWay - getStartLon())/(getEndLon() - getStartLon())\r\n            endPixY = h*(endLatWay - getStartLat())/(getEndLat() - getStartLat())\r\n            ctx.beginPath();\r\n            ctx.moveTo(startPixX, startPixY);\r\n            ctx.lineTo(endPixX, endPixY);\r\n            //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\r\n            //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\r\n            ctx.strokeStyle = \"red\";\r\n            if (type === \"\" || type === \"unclassified\") {\r\n                ctx.strokeStyle = \"blue\";\r\n            } else {\r\n                if (type === \"path\") {\r\n                    console.log(\"yes\")\r\n                    ctx.strokeStyle = \"pink\";\r\n                    ctx.lineWidth = 2\r\n                    ctx.stroke()\r\n                    if (!startCircle) {\r\n                        //ctx.moveTo(startPixX, startPixY);\r\n                        //ctx.beginPath();\r\n                        //ctx.arc(startPixX, startPixY, 15, 0, 2 * Math.PI);\r\n                        //ctx.rect(startPixX - 21, startPixY - 21, 42, 42)\r\n                        startCircle = true\r\n                    } else {\r\n                        if (i === toPrint.length - 1) {\r\n                            //ctx.moveTo(endPixX, endPixY);\r\n                            //ctx.beginPath();\r\n                            //ctx.arc(endPixX, endPixY, 15, 0, 2 * Math.PI);\r\n                            //ctx.rect(endPixX - 21, endPixY - 21, 42, 42)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ctx.stroke();\r\n            ctx.lineWidth = 1\r\n        }\r\n    }\r\n    const refreshButton = () => {\r\n\r\n            console.log(ways.length)\r\n\r\n        requestWays()\r\n        const toSend = {\r\n            //TODO: Pass in the values for the data. Follow the format the route expects!\r\n            srclat : getRouteStartLat(),\r\n            srclong : getRouteStartLon(),\r\n            destlat : getRouteEndLat(),\r\n            destlong : getRouteEndLon()\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        //Install and import this!\r\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n        axios.post(\r\n            \"http://localhost:4567/route\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n                //Note: It is very important that you understand how this is set up and why it works!\r\n                setRoute(response.data[\"route\"]);//console.log  the response.data[\"route\"]\r\n                printCanvas(response.data[\"route\"])\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        console.log(ways.length)\r\n\r\n        //to test\r\n        //41.825158\r\n        // -71.404687\r\n        //41.827525\r\n        //-71.400441\r\n\r\n\r\n\r\n    }\r\n\r\n    const clickedOnCanvas = (clicked) => {\r\n        setClickCoordinate(clicked)\r\n    }\r\n\r\n    const releasedOnCanvas = (released) => {\r\n        setReleaseCoordinate(released)\r\n        if(getClickCoordinate() === getReleaseCoordinate()) {\r\n            //route start/end\r\n        } else {\r\n            //panning\r\n            let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0]))*coordToPix\r\n            let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1]))*coordToPix\r\n            console.log(releaseCoordinate[0])\r\n                setStartLat(getStartLat() - dY);\r\n                setEndLat(getEndLat() - dY);\r\n                setEndLon(getEndLon() + dX);\r\n                setStartLon(getStartLon() + dX);\r\n                requestWays();\r\n        }\r\n    }\r\n\r\n  const zoomIn = () => {\r\n      setZoomInFactor(0.91);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const zoomOut = () => {\r\n      setZoomInFactor(1.1);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const setZoomCoords = () => {\r\n      console.log(zoomInFactor);\r\n\r\n      let latFromCenter = Math.abs(Math.abs((getStartLat() - (getStartLat() + getEndLat())/2)) * zoomInFactor);\r\n      let lonFromCenter = Math.abs(Math.abs((getEndLon() -  (getEndLon() + getStartLon())/2)) * zoomInFactor);\r\n\r\n      const avgLat = ((getStartLat() + getEndLat())/2)\r\n      const avgLon = ((getStartLon() + getEndLon())/2)\r\n\r\n      const newStartLat = avgLat + (Math.abs(getStartLat() - avgLat) * zoomInFactor);\r\n      console.log(newStartLat)\r\n      const newEndLat = avgLat - (Math.abs(getEndLat() - avgLat) * zoomInFactor);\r\n      console.log(newEndLat);\r\n      const newEndLon = avgLon + (Math.abs(getEndLon() - avgLon) * zoomInFactor);\r\n      console.log(newEndLon);\r\n      const newStartLon = avgLon - (Math.abs(getStartLon() - avgLon) * zoomInFactor);\r\n      console.log((newStartLon));\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n          setStartLat(newStartLat);\r\n          setEndLat(newEndLat);\r\n          setEndLon(newEndLon);\r\n          setStartLon(newStartLon);\r\n      })\r\n      requestWays();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Route\">\r\n      <header className=\"Route-header\">\r\n        <title>This is a title</title>\r\n      </header>\r\n        <h1>{startLat}</h1>\r\n        <TextBox label={\"Start Latitude\"} onChange = {setRouteStartLat}/>\r\n        <TextBox label={\"Start Longitude\"} onChange = {setRouteStartLon}/>\r\n        <TextBox label={\"End Latitude\"} onChange = {setRouteEndLat}/>\r\n        <TextBox label={\"End Longitude\"} onChange = {setRouteEndLon}/>\r\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Find Path</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\r\n        <p>{ways[2]}</p>\r\n        <div className=\"Canvas\">\r\n            <canvas\r\n                ref={ref}\r\n                style={{ width: w, height: h }}\r\n                routetorender={props.routetorender}\r\n                onChange={(e) => props.onChange(e.target.value)}\r\n                onMouseDown={(e) => clickedOnCanvas([e.pageX, e.pageY])}\r\n                onMouseUp={(e) => releasedOnCanvas([e.pageX, e.pageY])}\r\n            />\r\n            hi\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Route;\r\n\r\n//<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}"]},"metadata":{},"sourceType":"module"}