{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\ben\\\\documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\"; // global reference to the oldCanvas element\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nlet startLat = 41.831311;\nlet startLon = -71.406524;\nlet endLat = 41.821395;\nlet endLon = -71.396608;\nlet clickCoordinate = [];\nlet releaseCoordinate = [];\n\nfunction setStartLat(sl) {\n  startLat = parseFloat(sl);\n}\n\nfunction getStartLat() {\n  return parseFloat(startLat);\n}\n\nfunction setStartLon(sl) {\n  startLon = parseFloat(sl);\n}\n\nfunction getStartLon() {\n  return parseFloat(startLon);\n}\n\nfunction setEndLat(el) {\n  endLat = parseFloat(el);\n}\n\nfunction getEndLat() {\n  return parseFloat(endLat);\n}\n\nfunction setEndLon(el) {\n  endLon = parseFloat(el);\n}\n\nfunction getEndLon() {\n  return parseFloat(endLon);\n}\n\nfunction setClickCoordinate(c) {\n  clickCoordinate = c;\n}\n\nfunction getClickCoordinate() {\n  return clickCoordinate;\n}\n\nfunction setReleaseCoordinate(c) {\n  endLon = c;\n}\n\nfunction getReleaseCoordinate() {\n  return releaseCoordinate;\n}\n\nfunction Route(props) {\n  _s();\n\n  const w = 600.0;\n  const h = 600.0;\n  let coordToPix = parseFloat((getStartLon() - getEndLon()) / w);\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [route, setRoute] = useState([]); //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  /**\r\n   * Makes an axios request.\r\n   */\n\n  const requestRoute = () => {\n    console.log(9 + \" \" + startLon);\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getStartLat(),\n      srclong: getStartLon(),\n      destlat: getEndLat(),\n      destlong: getEndLon()\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let ref = useRef();\n  const [firstRender, setFirstRender] = useState(true);\n  useEffect(() => {\n    if (firstRender) {\n      setFirstRender(false);\n      requestRoute();\n    }\n\n    canvas = ref.current; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n    //smooths lines\n\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    console.log(getEndLat());\n    console.log(getEndLat());\n    console.log(getStartLat());\n    console.log(getStartLon());\n    let rawWaysData = route[3];\n    let listOfWays = [];\n\n    if (rawWaysData != null) {\n      listOfWays = (rawWaysData + '').split(\";\");\n    }\n\n    let parsedWay;\n    let type;\n    let startLatWay;\n    let startLonWay;\n    let endLatWay;\n    let endLonWay;\n    console.log(\"low\" + listOfWays.length);\n\n    for (let i = 0; i < listOfWays.length; i++) {\n      parsedWay = listOfWays[i].split(\",\");\n      type = parsedWay[0];\n      startLatWay = parseFloat(parsedWay[1]);\n      startLonWay = parseFloat(parsedWay[2]);\n      endLatWay = parseFloat(parsedWay[3]);\n      endLonWay = parseFloat(parsedWay[4]);\n\n      if (i === 500) {\n        console.log(w * (startLonWay - startLon) / (endLon - startLon));\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(w * (startLonWay - getStartLon()) / (getEndLon() - getStartLon()), h * (startLatWay - getStartLat()) / (getEndLat() - getStartLat()));\n      ctx.lineTo(w * (endLonWay - getStartLon()) / (getEndLon() - getStartLon()), h * (endLatWay - getStartLat()) / (getEndLat() - getStartLat())); //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\n      //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\n\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      }\n\n      ctx.stroke();\n    }\n\n    console.log(\"done\");\n  });\n\n  const refreshButton = () => {\n    setStartLat(startLatBuffer);\n    setStartLon(startLonBuffer);\n    setEndLat(endLatBuffer);\n    setEndLon(endLonBuffer);\n    requestRoute();\n  };\n\n  const clickedOnCanvas = clicked => {\n    setClickCoordinate(clicked);\n  };\n\n  const releasedOnCanvas = released => {\n    setReleaseCoordinate(released);\n\n    if (getClickCoordinate() === getReleaseCoordinate()) {//route start/end\n    } else {\n      //panning\n      let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0])) * coordToPix;\n      let dY = (parseFloat(releaseCoordinate[1]) - parseFloat(clickCoordinate[1])) * coordToPix;\n      console.log(releaseCoordinate[0]);\n      setStartLat(getStartLat() - dY);\n      setEndLat(getEndLat() - dY);\n      setEndLon(getEndLon() + dX);\n      setStartLon(getStartLon() + dX);\n      requestRoute();\n    }\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = Math.abs(Math.abs(getStartLat() - (getStartLat() + getEndLat()) / 2) * zoomInFactor);\n    let lonFromCenter = Math.abs(Math.abs(getEndLon() - (getEndLon() + getStartLon()) / 2) * zoomInFactor);\n    const avgLat = (getStartLat() + getEndLat()) / 2;\n    const avgLon = (getStartLon() + getEndLon()) / 2;\n    const newStartLat = avgLat + Math.abs(getStartLat() - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(getEndLat() - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(getEndLon() - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(getStartLon() - avgLon) * zoomInFactor;\n    console.log(newStartLon);\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n    });\n    requestRoute();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: route[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: ref,\n        style: {\n          width: w,\n          height: h\n        },\n        routetorender: props.routetorender,\n        onChange: e => props.onChange(e.target.value),\n        onMouseDown: e => clickedOnCanvas([e.pageX, e.pageY]),\n        onMouseUp: e => releasedOnCanvas([e.pageX, e.pageY])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"ppDr0kzToQBs0Si2PFSoNKz3fPM=\");\n\n_c = Route;\nexport default Route; //<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["C:/users/ben/documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","useRef","ReactDOM","AwesomeButton","axios","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","startLat","startLon","endLat","endLon","clickCoordinate","releaseCoordinate","setStartLat","sl","parseFloat","getStartLat","setStartLon","getStartLon","setEndLat","el","getEndLat","setEndLon","getEndLon","setClickCoordinate","c","getClickCoordinate","setReleaseCoordinate","getReleaseCoordinate","Route","props","w","h","coordToPix","startLatBuffer","setStartLatBuffer","startLonBuffer","setStartLonBuffer","endLatBuffer","setEndLatBuffer","endLonBuffer","setEndLonBuffer","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","route","setRoute","requestRoute","console","log","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","data","catch","error","ref","firstRender","setFirstRender","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","clearRect","lineWidth","rawWaysData","listOfWays","split","parsedWay","type","startLatWay","startLonWay","endLatWay","endLonWay","length","i","beginPath","moveTo","lineTo","strokeStyle","stroke","refreshButton","clickedOnCanvas","clicked","releasedOnCanvas","released","dX","dY","zoomIn","setZoomCoords","zoomOut","latFromCenter","Math","abs","lonFromCenter","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon","unstable_batchedUpdates","routetorender","e","onChange","target","value","pageX","pageY"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport TextBox from './TextBox'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport axios from \"axios\";\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\n\r\n\r\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\nconst getPixelRatio = context => {\r\n    let backingStore =\r\n        context.backingStorePixelRatio ||\r\n        context.webkitBackingStorePixelRatio ||\r\n        context.mozBackingStorePixelRatio ||\r\n        context.msBackingStorePixelRatio ||\r\n        context.oBackingStorePixelRatio ||\r\n        context.backingStorePixelRatio ||\r\n        1;\r\n    return (window.devicePixelRatio || 1) / backingStore;\r\n};\r\n\r\nlet startLat = 41.831311;\r\nlet startLon = -71.406524;\r\nlet endLat = 41.821395;\r\nlet endLon = -71.396608;\r\nlet clickCoordinate = [];\r\nlet releaseCoordinate = [];\r\n\r\nfunction setStartLat(sl) {\r\n    startLat = parseFloat(sl)\r\n}\r\n\r\nfunction getStartLat() {\r\n    return parseFloat(startLat)\r\n}\r\n\r\nfunction setStartLon(sl) {\r\n    startLon = parseFloat(sl)\r\n}\r\n\r\nfunction getStartLon() {\r\n    return parseFloat(startLon)\r\n}\r\n\r\nfunction setEndLat(el) {\r\n    endLat = parseFloat(el)\r\n}\r\n\r\nfunction getEndLat() {\r\n    return parseFloat(endLat)\r\n}\r\n\r\nfunction setEndLon(el) {\r\n    endLon = parseFloat(el)\r\n}\r\n\r\nfunction getEndLon() {\r\n    return parseFloat(endLon)\r\n}\r\n\r\nfunction setClickCoordinate(c) {\r\n    clickCoordinate = c\r\n}\r\n\r\nfunction getClickCoordinate() {\r\n    return clickCoordinate\r\n}\r\n\r\nfunction setReleaseCoordinate(c) {\r\n    endLon = c\r\n}\r\n\r\nfunction getReleaseCoordinate() {\r\n    return releaseCoordinate\r\n}\r\n\r\n\r\n\r\nfunction Route(props) {\r\n    const w = 600.0;\r\n    const h = 600.0;\r\n    let coordToPix = parseFloat((getStartLon() - getEndLon())/w);\r\n    const [startLatBuffer, setStartLatBuffer] = useState(0);\r\n    const [startLonBuffer, setStartLonBuffer] = useState(0);\r\n    const [endLatBuffer, setEndLatBuffer] = useState(0);\r\n    const [endLonBuffer, setEndLonBuffer] = useState(0);\r\n    const [zoomInFactor, setZoomInFactor] = useState(1);\r\n    const [startCanvas, refreshCanvas] = useState(\"\");\r\n//TODO: Fill in the ? with appropriate names/values for a route.\r\n//Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\r\n    const [route, setRoute] = useState([]);\r\n    //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\r\n\r\n    /**\r\n     * Makes an axios request.\r\n     */\r\n    const requestRoute = () => {\r\n        console.log(9 + \" \" + startLon)\r\n        const toSend = {\r\n            //TODO: Pass in the values for the data. Follow the format the route expects!\r\n            srclat : getStartLat(),\r\n            srclong : getStartLon(),\r\n            destlat : getEndLat(),\r\n            destlong : getEndLon()\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        //Install and import this!\r\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n        axios.post(\r\n            \"http://localhost:4567/route\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n                //Note: It is very important that you understand how this is set up and why it works!\r\n                setRoute(response.data[\"route\"]);//console.log  the response.data[\"route\"]\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n        let ref = useRef();\r\n        const [firstRender, setFirstRender] = useState(true);\r\n        useEffect(() => {\r\n            if (firstRender) {\r\n                setFirstRender(false)\r\n                requestRoute()\r\n            }\r\n            canvas = ref.current;\r\n            //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\n            //smooths lines\r\n            ctx = canvas.getContext(\"2d\");\r\n            let ratio = getPixelRatio(ctx);\r\n            let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\r\n            let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\r\n            canvas.width = width * ratio;\r\n            canvas.height = height * ratio;\r\n            canvas.style.width = `${width}px`;\r\n            canvas.style.height = `${height}px`;\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.lineWidth = 1\r\n\r\n            console.log(getEndLat());\r\n            console.log(getEndLat());\r\n            console.log(getStartLat());\r\n            console.log(getStartLon());\r\n\r\n\r\n            let rawWaysData = route[3]\r\n            let listOfWays = [];\r\n            if (rawWaysData != null) {\r\n                listOfWays = (rawWaysData + '').split(\";\");\r\n            }\r\n\r\n            let parsedWay;\r\n            let type;\r\n            let startLatWay;\r\n            let startLonWay;\r\n            let endLatWay;\r\n            let endLonWay;\r\n\r\n            console.log(\"low\" + listOfWays.length);\r\n            for (let i=0; i<listOfWays.length; i++) {\r\n                parsedWay =  listOfWays[i].split(\",\");\r\n                type = parsedWay[0]\r\n                startLatWay = parseFloat(parsedWay[1]);\r\n                startLonWay = parseFloat(parsedWay[2]);\r\n                endLatWay = parseFloat(parsedWay[3]);\r\n                endLonWay = parseFloat(parsedWay[4]);\r\n                if (i === 500) {\r\n                    console.log(w*(startLonWay - startLon)/(endLon - startLon));\r\n                }\r\n                ctx.beginPath();\r\n                ctx.moveTo(w*(startLonWay - getStartLon())/(getEndLon() - getStartLon()), h*(startLatWay - getStartLat())/(getEndLat() - getStartLat()));\r\n                ctx.lineTo(w*(endLonWay - getStartLon())/(getEndLon() - getStartLon()), h*(endLatWay - getStartLat())/(getEndLat() - getStartLat()));\r\n                //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\r\n                //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\r\n                ctx.strokeStyle = \"red\";\r\n                if (type === \"\" || type === \"unclassified\") {\r\n                    ctx.strokeStyle = \"blue\";\r\n                }\r\n                ctx.stroke();\r\n\r\n            }\r\n            console.log(\"done\")\r\n\r\n        })\r\n\r\n    const refreshButton = () => {\r\n        setStartLat(startLatBuffer)\r\n        setStartLon(startLonBuffer)\r\n        setEndLat(endLatBuffer)\r\n        setEndLon(endLonBuffer)\r\n        requestRoute()\r\n    }\r\n\r\n    const clickedOnCanvas = (clicked) => {\r\n        setClickCoordinate(clicked)\r\n    }\r\n\r\n    const releasedOnCanvas = (released) => {\r\n        setReleaseCoordinate(released)\r\n        if(getClickCoordinate() === getReleaseCoordinate()) {\r\n            //route start/end\r\n        } else {\r\n            //panning\r\n            let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0]))*coordToPix\r\n            let dY = (parseFloat(releaseCoordinate[1]) - parseFloat(clickCoordinate[1]))*coordToPix\r\n            console.log(releaseCoordinate[0])\r\n                setStartLat(getStartLat() - dY);\r\n                setEndLat(getEndLat() - dY);\r\n                setEndLon(getEndLon() + dX);\r\n                setStartLon(getStartLon() + dX);\r\n                requestRoute();\r\n        }\r\n    }\r\n\r\n  const zoomIn = () => {\r\n      setZoomInFactor(0.91);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const zoomOut = () => {\r\n      setZoomInFactor(1.1);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const setZoomCoords = () => {\r\n      console.log(zoomInFactor);\r\n\r\n      let latFromCenter = Math.abs(Math.abs((getStartLat() - (getStartLat() + getEndLat())/2)) * zoomInFactor);\r\n      let lonFromCenter = Math.abs(Math.abs((getEndLon() -  (getEndLon() + getStartLon())/2)) * zoomInFactor);\r\n\r\n      const avgLat = ((getStartLat() + getEndLat())/2)\r\n      const avgLon = ((getStartLon() + getEndLon())/2)\r\n\r\n      const newStartLat = avgLat + (Math.abs(getStartLat() - avgLat) * zoomInFactor);\r\n      console.log(newStartLat)\r\n      const newEndLat = avgLat - (Math.abs(getEndLat() - avgLat) * zoomInFactor);\r\n      console.log(newEndLat);\r\n      const newEndLon = avgLon + (Math.abs(getEndLon() - avgLon) * zoomInFactor);\r\n      console.log(newEndLon);\r\n      const newStartLon = avgLon - (Math.abs(getStartLon() - avgLon) * zoomInFactor);\r\n      console.log((newStartLon));\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n          setStartLat(newStartLat);\r\n          setEndLat(newEndLat);\r\n          setEndLon(newEndLon);\r\n          setStartLon(newStartLon);\r\n      })\r\n      requestRoute();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Route\">\r\n      <header className=\"Route-header\">\r\n        <title>This is a title</title>\r\n      </header>\r\n        <h1>{startLat}</h1>\r\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLatBuffer}/>\r\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLonBuffer}/>\r\n        <TextBox label={\"End Latitude\"} onChange = {setEndLatBuffer}/>\r\n        <TextBox label={\"End Longitude\"} onChange = {setEndLonBuffer}/>\r\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Refresh</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\r\n        <p>{route[2]}</p>\r\n        <div className=\"Canvas\">\r\n            <canvas\r\n                ref={ref}\r\n                style={{ width: w, height: h }}\r\n                routetorender={props.routetorender}\r\n                onChange={(e) => props.onChange(e.target.value)}\r\n                onMouseDown={(e) => clickedOnCanvas([e.pageX, e.pageY])}\r\n                onMouseUp={(e) => releasedOnCanvas([e.pageX, e.pageY])}\r\n            />\r\n\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Route;\r\n\r\n//<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}"]},"metadata":{},"sourceType":"module"}