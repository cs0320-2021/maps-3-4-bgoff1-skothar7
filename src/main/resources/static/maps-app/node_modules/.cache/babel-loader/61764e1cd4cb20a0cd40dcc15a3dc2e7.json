{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\ben\\\\documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet pixToCoord; // global reference to the oldCanvas element\n\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nlet startLat = 41.831311;\nlet startLon = -71.406524;\nlet endLat = 41.821395;\nlet endLon = -71.396608;\n\nfunction setStartLat(sl) {\n  startLat = sl;\n}\n\nfunction getStartLat() {\n  return startLat;\n}\n\nfunction setStartLon(sl) {\n  startLon = sl;\n}\n\nfunction getStartLon() {\n  return startLon;\n}\n\nfunction setEndLat(el) {\n  endLat = el;\n}\n\nfunction getEndLat() {\n  return endLat;\n}\n\nfunction setEndLon(el) {\n  endLon = el;\n}\n\nfunction getEndLon() {\n  return endLon;\n}\n\nfunction Route(props) {\n  _s();\n\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\n  const [clickCoordinate, setClickCoordinate] = useState([]);\n  const [releaseCoordinate, setReleaseCoordinate] = useState([]);\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [route, setRoute] = useState([]); //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  /**\r\n   * Makes an axios request.\r\n   */\n\n  const requestRoute = () => {\n    console.log(9 + \" \" + startLon);\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getStartLat(),\n      srclong: getStartLon(),\n      destlat: endLat,\n      destlong: endLon\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; //function Canvas(props) {\n\n\n  let w = 600;\n  let h = 600;\n  let ref = useRef();\n  const [firstRender, setFirstRender] = useState(true);\n  useEffect(() => {\n    if (firstRender) {\n      setFirstRender(false);\n      requestRoute();\n    }\n\n    canvas = ref.current; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n    //smooths lines\n\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    pixToCoord = 50000;\n    console.log(endLat);\n    console.log(endLon);\n    console.log(startLat);\n    console.log(startLon);\n    let rawWaysData = route[3];\n    let listOfWays = [];\n\n    if (rawWaysData != null) {\n      listOfWays = (rawWaysData + '').split(\";\");\n    }\n\n    let parsedWay;\n    let type;\n    let startLatWay;\n    let startLonWay;\n    let endLatWay;\n    let endLonWay;\n    pixToCoord = (startLon - endLon) / w;\n    h = 600; //(startLat - endLat)/pixToCoord;\n\n    console.log(\"low\" + listOfWays.length);\n\n    for (let i = 0; i < listOfWays.length; i++) {\n      parsedWay = listOfWays[i].split(\",\");\n      type = parsedWay[0];\n      startLatWay = parseFloat(parsedWay[1]);\n      startLonWay = parseFloat(parsedWay[2]);\n      endLatWay = parseFloat(parsedWay[3]);\n      endLonWay = parseFloat(parsedWay[4]);\n\n      if (i === 500) {\n        console.log(w * (startLonWay - startLon) / (endLon - startLon));\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(w * (startLonWay - startLon) / (endLon - startLon), 0 - h * (startLatWay - startLat) / (endLat - startLat));\n      ctx.lineTo(w * (endLonWay - startLon) / (endLon - startLon), 0 - h * (endLatWay - startLat) / (endLat - startLat)); //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\n      //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\n\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      }\n\n      ctx.stroke();\n    }\n\n    console.log(\"done\");\n  });\n\n  const refreshButton = () => {\n    setStartLat(startLatBuffer);\n    setStartLon(startLonBuffer);\n    setEndLat(endLatBuffer);\n    setEndLon(endLonBuffer);\n    requestRoute();\n  };\n\n  const clickedOnCanvas = clicked => {\n    setClickCoordinate(clicked);\n  };\n\n  const releasedOnCanvas = released => {\n    setReleaseCoordinate(released);\n\n    if (clickCoordinate === releaseCoordinate) {//route start/end\n    } else {\n      //panning\n      let dX = releaseCoordinate[0] - clickCoordinate[0];\n      let dY = releaseCoordinate[1] - clickCoordinate[1];\n      ReactDOM.unstable_batchedUpdates(() => {\n        setStartLat();\n        setEndLat();\n        setEndLon();\n        setStartLon();\n        requestRoute();\n      });\n    }\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = Math.abs(Math.abs(startLat - (startLat + endLat) / 2) * zoomInFactor);\n    let lonFromCenter = Math.abs(Math.abs(endLon - (endLon + startLon) / 2) * zoomInFactor); //const oldStartLat = startLat;\n    //const oldStartLon = startLon;\n    //const oldEndLat = endLat;\n    //const oldEndLon = endLon;\n    //console.log(oldStartLat);\n    //console.log(oldStartLon);\n    //console.log(oldEndLat);\n    //console.log(oldEndLon);\n\n    const avgLat = (startLat + endLat) / 2;\n    const avgLon = (startLon + endLon) / 2;\n    const newStartLat = avgLat + Math.abs(startLat - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(endLat - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(endLon - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(startLon - avgLon) * zoomInFactor;\n    console.log(newStartLon);\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n    });\n    requestRoute();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: route[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: ref,\n        style: {\n          width: w,\n          height: h\n        } //routetorender={props.routetorender}\n        //onChange={(e) => props.onChange(e.target.value)}\n        ,\n        onMouseDown: e => clickedOnCanvas([e.pageX, e.pageY]),\n        onMouseUp: e => releasedOnCanvas([e.pageX, e.pageY])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"bIGSPscYl9C5WvLpFHQNzSYx5Ko=\");\n\n_c = Route;\nexport default Route; //<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["C:/users/ben/documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","useRef","ReactDOM","AwesomeButton","axios","pixToCoord","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","startLat","startLon","endLat","endLon","setStartLat","sl","getStartLat","setStartLon","getStartLon","setEndLat","el","getEndLat","setEndLon","getEndLon","Route","props","startLatBuffer","setStartLatBuffer","startLonBuffer","setStartLonBuffer","endLatBuffer","setEndLatBuffer","endLonBuffer","setEndLonBuffer","clickCoordinate","setClickCoordinate","releaseCoordinate","setReleaseCoordinate","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","route","setRoute","requestRoute","console","log","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","data","catch","error","w","h","ref","firstRender","setFirstRender","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","clearRect","lineWidth","rawWaysData","listOfWays","split","parsedWay","type","startLatWay","startLonWay","endLatWay","endLonWay","length","i","parseFloat","beginPath","moveTo","lineTo","strokeStyle","stroke","refreshButton","clickedOnCanvas","clicked","releasedOnCanvas","released","dX","dY","unstable_batchedUpdates","zoomIn","setZoomCoords","zoomOut","latFromCenter","Math","abs","lonFromCenter","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon","e","pageX","pageY"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport TextBox from './TextBox'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport axios from \"axios\";\r\n\r\nlet pixToCoord;\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\n\r\n\r\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\nconst getPixelRatio = context => {\r\n    let backingStore =\r\n        context.backingStorePixelRatio ||\r\n        context.webkitBackingStorePixelRatio ||\r\n        context.mozBackingStorePixelRatio ||\r\n        context.msBackingStorePixelRatio ||\r\n        context.oBackingStorePixelRatio ||\r\n        context.backingStorePixelRatio ||\r\n        1;\r\n    return (window.devicePixelRatio || 1) / backingStore;\r\n};\r\n\r\nlet startLat = 41.831311;\r\nlet startLon = -71.406524;\r\nlet endLat = 41.821395;\r\nlet endLon = -71.396608;\r\n\r\nfunction setStartLat(sl) {\r\n    startLat = sl\r\n}\r\n\r\nfunction getStartLat() {\r\n    return startLat\r\n}\r\n\r\nfunction setStartLon(sl) {\r\n    startLon = sl\r\n}\r\n\r\nfunction getStartLon() {\r\n    return startLon\r\n}\r\n\r\nfunction setEndLat(el) {\r\n    endLat = el\r\n}\r\n\r\nfunction getEndLat() {\r\n    return endLat\r\n}\r\n\r\nfunction setEndLon(el) {\r\n    endLon = el\r\n}\r\n\r\nfunction getEndLon() {\r\n    return endLon\r\n}\r\n\r\n\r\n\r\nfunction Route(props) {\r\n\r\n    const [startLatBuffer, setStartLatBuffer] = useState(0);\r\n    const [startLonBuffer, setStartLonBuffer] = useState(0);\r\n    const [endLatBuffer, setEndLatBuffer] = useState(0);\r\n    const [endLonBuffer, setEndLonBuffer] = useState(0);\r\n    const [clickCoordinate, setClickCoordinate] = useState([]);\r\n    const [releaseCoordinate, setReleaseCoordinate] = useState([]);\r\n    const [zoomInFactor, setZoomInFactor] = useState(1);\r\n    const [startCanvas, refreshCanvas] = useState(\"\");\r\n//TODO: Fill in the ? with appropriate names/values for a route.\r\n//Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\r\n    const [route, setRoute] = useState([]);\r\n    //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\r\n\r\n    /**\r\n     * Makes an axios request.\r\n     */\r\n    const requestRoute = () => {\r\n        console.log(9 + \" \" + startLon)\r\n        const toSend = {\r\n            //TODO: Pass in the values for the data. Follow the format the route expects!\r\n            srclat : getStartLat(),\r\n            srclong : getStartLon(),\r\n            destlat : endLat,\r\n            destlong : endLon\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        //Install and import this!\r\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n        axios.post(\r\n            \"http://localhost:4567/route\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n                //Note: It is very important that you understand how this is set up and why it works!\r\n                setRoute(response.data[\"route\"]);//console.log  the response.data[\"route\"]\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    //function Canvas(props) {\r\n        let w = 600;\r\n        let h = 600;\r\n        let ref = useRef();\r\n        const [firstRender, setFirstRender] = useState(true);\r\n        useEffect(() => {\r\n            if (firstRender) {\r\n                setFirstRender(false)\r\n                requestRoute()\r\n            }\r\n            canvas = ref.current;\r\n            //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\n            //smooths lines\r\n            ctx = canvas.getContext(\"2d\");\r\n            let ratio = getPixelRatio(ctx);\r\n            let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\r\n            let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\r\n            canvas.width = width * ratio;\r\n            canvas.height = height * ratio;\r\n            canvas.style.width = `${width}px`;\r\n            canvas.style.height = `${height}px`;\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.lineWidth = 1\r\n            pixToCoord = 50000;\r\n\r\n            console.log(endLat);\r\n            console.log(endLon);\r\n            console.log(startLat);\r\n            console.log(startLon);\r\n\r\n\r\n            let rawWaysData = route[3]\r\n            let listOfWays = [];\r\n            if (rawWaysData != null) {\r\n                listOfWays = (rawWaysData + '').split(\";\");\r\n            }\r\n\r\n            let parsedWay;\r\n            let type;\r\n            let startLatWay;\r\n            let startLonWay;\r\n            let endLatWay;\r\n            let endLonWay;\r\n\r\n\r\n            pixToCoord = ((startLon - endLon)/w);\r\n            h = 600//(startLat - endLat)/pixToCoord;\r\n\r\n            console.log(\"low\" + listOfWays.length);\r\n            for (let i=0; i<listOfWays.length; i++) {\r\n                parsedWay =  listOfWays[i].split(\",\");\r\n                type = parsedWay[0]\r\n                startLatWay = parseFloat(parsedWay[1]);\r\n                startLonWay = parseFloat(parsedWay[2]);\r\n                endLatWay = parseFloat(parsedWay[3]);\r\n                endLonWay = parseFloat(parsedWay[4]);\r\n                if (i === 500) {\r\n                    console.log(w*(startLonWay - startLon)/(endLon - startLon));\r\n                }\r\n                ctx.beginPath();\r\n                ctx.moveTo(w*(startLonWay - startLon)/(endLon - startLon), 0 - h*(startLatWay - startLat)/(endLat - startLat));\r\n                ctx.lineTo(w*(endLonWay - startLon)/(endLon - startLon), 0 - h*(endLatWay - startLat)/(endLat - startLat));\r\n                //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\r\n                //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\r\n                ctx.strokeStyle = \"red\";\r\n                if (type === \"\" || type === \"unclassified\") {\r\n                    ctx.strokeStyle = \"blue\";\r\n                }\r\n                ctx.stroke();\r\n\r\n            }\r\n            console.log(\"done\")\r\n\r\n        })\r\n\r\n    const refreshButton = () => {\r\n        setStartLat(startLatBuffer)\r\n        setStartLon(startLonBuffer)\r\n        setEndLat(endLatBuffer)\r\n        setEndLon(endLonBuffer)\r\n        requestRoute()\r\n    }\r\n\r\n    const clickedOnCanvas = (clicked) => {\r\n        setClickCoordinate(clicked)\r\n    }\r\n\r\n    const releasedOnCanvas = (released) => {\r\n        setReleaseCoordinate(released)\r\n        if(clickCoordinate === releaseCoordinate) {\r\n            //route start/end\r\n        } else {\r\n            //panning\r\n            let dX = releaseCoordinate[0] - clickCoordinate[0]\r\n            let dY = releaseCoordinate[1] - clickCoordinate[1]\r\n            ReactDOM.unstable_batchedUpdates(() => {\r\n                setStartLat();\r\n                setEndLat();\r\n                setEndLon();\r\n                setStartLon();\r\n                requestRoute();\r\n            })\r\n        }\r\n    }\r\n\r\n  const zoomIn = () => {\r\n      setZoomInFactor(0.91);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const zoomOut = () => {\r\n      setZoomInFactor(1.1);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const setZoomCoords = () => {\r\n      console.log(zoomInFactor);\r\n\r\n      let latFromCenter = Math.abs(Math.abs((startLat - (startLat + endLat)/2)) * zoomInFactor);\r\n      let lonFromCenter = Math.abs(Math.abs((endLon -  (endLon + startLon)/2)) * zoomInFactor);\r\n\r\n      //const oldStartLat = startLat;\r\n      //const oldStartLon = startLon;\r\n      //const oldEndLat = endLat;\r\n      //const oldEndLon = endLon;\r\n\r\n      //console.log(oldStartLat);\r\n      //console.log(oldStartLon);\r\n      //console.log(oldEndLat);\r\n      //console.log(oldEndLon);\r\n\r\n      const avgLat = ((startLat+endLat)/2)\r\n      const avgLon = ((startLon+endLon)/2)\r\n\r\n      const newStartLat = avgLat + (Math.abs(startLat - avgLat) * zoomInFactor);\r\n      console.log(newStartLat)\r\n      const newEndLat = avgLat - (Math.abs(endLat - avgLat) * zoomInFactor);\r\n      console.log(newEndLat);\r\n      const newEndLon = avgLon + (Math.abs(endLon - avgLon) * zoomInFactor);\r\n      console.log(newEndLon);\r\n      const newStartLon = avgLon - (Math.abs(startLon - avgLon) * zoomInFactor);\r\n      console.log((newStartLon));\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n          setStartLat(newStartLat);\r\n          setEndLat(newEndLat);\r\n          setEndLon(newEndLon);\r\n          setStartLon(newStartLon);\r\n      })\r\n      requestRoute();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Route\">\r\n      <header className=\"Route-header\">\r\n        <title>This is a title</title>\r\n      </header>\r\n        <h1>{startLat}</h1>\r\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLatBuffer}/>\r\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLonBuffer}/>\r\n        <TextBox label={\"End Latitude\"} onChange = {setEndLatBuffer}/>\r\n        <TextBox label={\"End Longitude\"} onChange = {setEndLonBuffer}/>\r\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Refresh</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\r\n        <p>{route[2]}</p>\r\n        <div className=\"Canvas\">\r\n            <canvas\r\n                ref={ref}\r\n                style={{ width: w, height: h }}\r\n                //routetorender={props.routetorender}\r\n                //onChange={(e) => props.onChange(e.target.value)}\r\n                onMouseDown={(e) => clickedOnCanvas([e.pageX, e.pageY])}\r\n                onMouseUp={(e) => releasedOnCanvas([e.pageX, e.pageY])}\r\n            />\r\n\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Route;\r\n\r\n//<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}"]},"metadata":{},"sourceType":"module"}