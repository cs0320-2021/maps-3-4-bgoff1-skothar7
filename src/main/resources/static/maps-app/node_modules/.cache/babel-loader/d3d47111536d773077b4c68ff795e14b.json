{"ast":null,"code":"var _jsxFileName = \"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\"; // global reference to the oldCanvas element\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nlet startLat = 41.831311;\nlet startLon = -71.406524;\nlet endLat = 41.821395;\nlet endLon = -71.396608;\nlet clickCoordinate = [];\nlet releaseCoordinate = [];\n\nfunction setStartLat(slat) {\n  startLat = parseFloat(slat);\n}\n\nfunction getStartLat() {\n  return parseFloat(startLat);\n}\n\nfunction setStartLon(slon) {\n  startLon = parseFloat(slon);\n}\n\nfunction getStartLon() {\n  return parseFloat(startLon);\n}\n\nfunction setEndLat(elat) {\n  endLat = parseFloat(elat);\n}\n\nfunction getEndLat() {\n  return parseFloat(endLat);\n}\n\nfunction setEndLon(elon) {\n  endLon = parseFloat(elon);\n}\n\nfunction getEndLon() {\n  return parseFloat(endLon);\n}\n\nfunction setClickCoordinate(click) {\n  clickCoordinate = click;\n}\n\nfunction getClickCoordinate() {\n  return clickCoordinate;\n}\n\nfunction setReleaseCoordinate(release) {\n  releaseCoordinate = release;\n}\n\nfunction getReleaseCoordinate() {\n  return releaseCoordinate;\n}\n\nfunction Route(props) {\n  _s();\n\n  const w = 600.0;\n  const h = 600.0;\n  let coordToPix = parseFloat((getStartLon() - getEndLon()) / w);\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [ways, setWays] = useState([]); //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  /**\n   * Makes an axios request.\n   */\n\n  const requestWays = () => {\n    console.log(9 + \" \" + startLon);\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getStartLat(),\n      srclong: getStartLon(),\n      destlat: getEndLat(),\n      destlong: getEndLon()\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/ways\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setWays(response.data[\"ways\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let ref = useRef();\n  const [firstRender, setFirstRender] = useState(true);\n  useEffect(() => {\n    if (firstRender) {\n      setFirstRender(false);\n      requestWays();\n    }\n\n    canvas = ref.current; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n    //smooths lines\n\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    console.log(getEndLat());\n    console.log(getEndLat());\n    console.log(getStartLat());\n    console.log(getStartLon());\n    let listOfWays = ways;\n    let parsedWay;\n    let type;\n    let startLatWay;\n    let startLonWay;\n    let endLatWay;\n    let endLonWay;\n    console.log(\"low\" + listOfWays.length);\n\n    for (let i = 0; i < listOfWays.length; i++) {\n      parsedWay = listOfWays[i].split(\",\");\n      type = parsedWay[0];\n      startLatWay = parseFloat(parsedWay[1]);\n      startLonWay = parseFloat(parsedWay[2]);\n      endLatWay = parseFloat(parsedWay[3]);\n      endLonWay = parseFloat(parsedWay[4]);\n\n      if (i === 500) {\n        console.log(w * (startLonWay - startLon) / (endLon - startLon));\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(w * (startLonWay - getStartLon()) / (getEndLon() - getStartLon()), h * (startLatWay - getStartLat()) / (getEndLat() - getStartLat()));\n      ctx.lineTo(w * (endLonWay - getStartLon()) / (getEndLon() - getStartLon()), h * (endLatWay - getStartLat()) / (getEndLat() - getStartLat())); //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\n      //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\n\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      } else {\n        if (type === \"path\") {\n          ctx.strokeStyle = \"pink\";\n        }\n      }\n\n      ctx.stroke();\n    }\n\n    console.log(\"done\");\n  });\n\n  const refreshButton = () => {\n    console.log(ways.length);\n    requestWays();\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: startLatBuffer,\n      srclong: startLonBuffer,\n      destlat: endLatBuffer,\n      destlong: endLonBuffer\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setWays(ways.concat(response.data[\"route\"])); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n    console.log(ways.length); //to test\n    //41.\n  };\n\n  const clickedOnCanvas = clicked => {\n    setClickCoordinate(clicked);\n  };\n\n  const releasedOnCanvas = released => {\n    setReleaseCoordinate(released);\n\n    if (getClickCoordinate() === getReleaseCoordinate()) {//route start/end\n    } else {\n      //panning\n      let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0])) * coordToPix;\n      let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1])) * coordToPix;\n      console.log(releaseCoordinate[0]);\n      setStartLat(getStartLat() - dY);\n      setEndLat(getEndLat() - dY);\n      setEndLon(getEndLon() + dX);\n      setStartLon(getStartLon() + dX);\n      requestWays();\n    }\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = Math.abs(Math.abs(getStartLat() - (getStartLat() + getEndLat()) / 2) * zoomInFactor);\n    let lonFromCenter = Math.abs(Math.abs(getEndLon() - (getEndLon() + getStartLon()) / 2) * zoomInFactor);\n    const avgLat = (getStartLat() + getEndLat()) / 2;\n    const avgLon = (getStartLon() + getEndLon()) / 2;\n    const newStartLat = avgLat + Math.abs(getStartLat() - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(getEndLat() - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(getEndLon() - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(getStartLon() - avgLon) * zoomInFactor;\n    console.log(newStartLon);\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n    });\n    requestWays();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ways[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: ref,\n        style: {\n          width: w,\n          height: h\n        },\n        routetorender: props.routetorender,\n        onChange: e => props.onChange(e.target.value),\n        onMouseDown: e => clickedOnCanvas([e.pageX, e.pageY]),\n        onMouseUp: e => releasedOnCanvas([e.pageX, e.pageY])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"i0+FTN6eRrVzujo12IUPd57qiVw=\");\n\n_c = Route;\nexport default Route; //<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","useRef","ReactDOM","AwesomeButton","axios","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","startLat","startLon","endLat","endLon","clickCoordinate","releaseCoordinate","setStartLat","slat","parseFloat","getStartLat","setStartLon","slon","getStartLon","setEndLat","elat","getEndLat","setEndLon","elon","getEndLon","setClickCoordinate","click","getClickCoordinate","setReleaseCoordinate","release","getReleaseCoordinate","Route","props","w","h","coordToPix","startLatBuffer","setStartLatBuffer","startLonBuffer","setStartLonBuffer","endLatBuffer","setEndLatBuffer","endLonBuffer","setEndLonBuffer","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","ways","setWays","requestWays","console","log","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","data","catch","error","ref","firstRender","setFirstRender","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","clearRect","lineWidth","listOfWays","parsedWay","type","startLatWay","startLonWay","endLatWay","endLonWay","length","i","split","beginPath","moveTo","lineTo","strokeStyle","stroke","refreshButton","concat","clickedOnCanvas","clicked","releasedOnCanvas","released","dX","dY","zoomIn","setZoomCoords","zoomOut","latFromCenter","Math","abs","lonFromCenter","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon","unstable_batchedUpdates","routetorender","e","onChange","target","value","pageX","pageY"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,IAAIC,MAAJ,C,CAEA;;AACA,IAAIC,GAAJ,C,CAIA;;AACA,MAAMC,aAAa,GAAGC,OAAO,IAAI;AAC7B,MAAIC,YAAY,GACZD,OAAO,CAACE,sBAAR,IACAF,OAAO,CAACG,4BADR,IAEAH,OAAO,CAACI,yBAFR,IAGAJ,OAAO,CAACK,wBAHR,IAIAL,OAAO,CAACM,uBAJR,IAKAN,OAAO,CAACE,sBALR,IAMA,CAPJ;AAQA,SAAO,CAACK,MAAM,CAACC,gBAAP,IAA2B,CAA5B,IAAiCP,YAAxC;AACH,CAVD;;AAYA,IAAIQ,QAAQ,GAAG,SAAf;AACA,IAAIC,QAAQ,GAAG,CAAC,SAAhB;AACA,IAAIC,MAAM,GAAG,SAAb;AACA,IAAIC,MAAM,GAAG,CAAC,SAAd;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,iBAAiB,GAAG,EAAxB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACvBP,EAAAA,QAAQ,GAAGQ,UAAU,CAACD,IAAD,CAArB;AACH;;AAED,SAASE,WAAT,GAAuB;AACnB,SAAOD,UAAU,CAACR,QAAD,CAAjB;AACH;;AAED,SAASU,WAAT,CAAqBC,IAArB,EAA2B;AACvBV,EAAAA,QAAQ,GAAGO,UAAU,CAACG,IAAD,CAArB;AACH;;AAED,SAASC,WAAT,GAAuB;AACnB,SAAOJ,UAAU,CAACP,QAAD,CAAjB;AACH;;AAED,SAASY,SAAT,CAAmBC,IAAnB,EAAyB;AACrBZ,EAAAA,MAAM,GAAGM,UAAU,CAACM,IAAD,CAAnB;AACH;;AAED,SAASC,SAAT,GAAqB;AACjB,SAAOP,UAAU,CAACN,MAAD,CAAjB;AACH;;AAED,SAASc,SAAT,CAAmBC,IAAnB,EAAyB;AACrBd,EAAAA,MAAM,GAAGK,UAAU,CAACS,IAAD,CAAnB;AACH;;AAED,SAASC,SAAT,GAAqB;AACjB,SAAOV,UAAU,CAACL,MAAD,CAAjB;AACH;;AAED,SAASgB,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/BhB,EAAAA,eAAe,GAAGgB,KAAlB;AACH;;AAED,SAASC,kBAAT,GAA8B;AAC1B,SAAOjB,eAAP;AACH;;AAED,SAASkB,oBAAT,CAA8BC,OAA9B,EAAuC;AACnClB,EAAAA,iBAAiB,GAAGkB,OAApB;AACH;;AAED,SAASC,oBAAT,GAAgC;AAC5B,SAAOnB,iBAAP;AACH;;AAID,SAASoB,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAMC,CAAC,GAAG,KAAV;AACA,QAAMC,CAAC,GAAG,KAAV;AACA,MAAIC,UAAU,GAAGrB,UAAU,CAAC,CAACI,WAAW,KAAKM,SAAS,EAA1B,IAA8BS,CAA/B,CAA3B;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCjD,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACkD,cAAD,EAAiBC,iBAAjB,IAAsCnD,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACoD,YAAD,EAAeC,eAAf,IAAkCrD,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACsD,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACwD,YAAD,EAAeC,eAAf,IAAkCzD,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAAC0D,WAAD,EAAcC,aAAd,IAA+B3D,QAAQ,CAAC,EAAD,CAA7C,CATkB,CAUtB;AACA;;AACI,QAAM,CAAC4D,IAAD,EAAOC,OAAP,IAAkB7D,QAAQ,CAAC,EAAD,CAAhC,CAZkB,CAalB;;AAEA;AACJ;AACA;;AACI,QAAM8D,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAI,GAAJ,GAAU7C,QAAtB;AACA,UAAM8C,MAAM,GAAG;AACX;AACAC,MAAAA,MAAM,EAAGvC,WAAW,EAFT;AAGXwC,MAAAA,OAAO,EAAGrC,WAAW,EAHV;AAIXsC,MAAAA,OAAO,EAAGnC,SAAS,EAJR;AAKXoC,MAAAA,QAAQ,EAAGjC,SAAS;AALT,KAAf;AAQA,QAAIkC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uCAA+B;AAF1B;AADA,KAAb,CAVsB,CAiBtB;AACA;;AACAlE,IAAAA,KAAK,CAACmE,IAAN,CACI,4BADJ,EAEIP,MAFJ,EAGIK,MAHJ,EAKKG,IALL,CAKUC,QAAQ,IAAI;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAQ,CAACC,IAArB,EADc,CAEd;AACA;;AACAd,MAAAA,OAAO,CAACa,QAAQ,CAACC,IAAT,CAAc,MAAd,CAAD,CAAP,CAJc,CAIiB;AAClC,KAVL,EAYKC,KAZL,CAYW,UAAUC,KAAV,EAAiB;AACpBd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH,KAdL;AAeH,GAlCD;;AAoCI,MAAIC,GAAG,GAAG5E,MAAM,EAAhB;AACA,QAAM,CAAC6E,WAAD,EAAcC,cAAd,IAAgChF,QAAQ,CAAC,IAAD,CAA9C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI8E,WAAJ,EAAiB;AACbC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAlB,MAAAA,WAAW;AACd;;AACDxD,IAAAA,MAAM,GAAGwE,GAAG,CAACG,OAAb,CALY,CAMZ;AACA;;AACA1E,IAAAA,GAAG,GAAGD,MAAM,CAAC4E,UAAP,CAAkB,IAAlB,CAAN;AACA,QAAIC,KAAK,GAAG3E,aAAa,CAACD,GAAD,CAAzB;AACA,QAAI6E,KAAK,GAAGC,gBAAgB,CAAC/E,MAAD,CAAhB,CAAyBgF,gBAAzB,CAA0C,OAA1C,EAAmDC,KAAnD,CAAyD,CAAzD,EAA4D,CAAC,CAA7D,CAAZ;AACA,QAAIC,MAAM,GAAGH,gBAAgB,CAAC/E,MAAD,CAAhB,CAAyBgF,gBAAzB,CAA0C,QAA1C,EAAoDC,KAApD,CAA0D,CAA1D,EAA6D,CAAC,CAA9D,CAAb;AACAjF,IAAAA,MAAM,CAAC8E,KAAP,GAAeA,KAAK,GAAGD,KAAvB;AACA7E,IAAAA,MAAM,CAACkF,MAAP,GAAgBA,MAAM,GAAGL,KAAzB;AACA7E,IAAAA,MAAM,CAACmF,KAAP,CAAaL,KAAb,GAAsB,GAAEA,KAAM,IAA9B;AACA9E,IAAAA,MAAM,CAACmF,KAAP,CAAaD,MAAb,GAAuB,GAAEA,MAAO,IAAhC;AACAjF,IAAAA,GAAG,CAACmF,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBpF,MAAM,CAAC8E,KAA3B,EAAkC9E,MAAM,CAACkF,MAAzC;AACAjF,IAAAA,GAAG,CAACoF,SAAJ,GAAgB,CAAhB;AAEA5B,IAAAA,OAAO,CAACC,GAAR,CAAY/B,SAAS,EAArB;AACA8B,IAAAA,OAAO,CAACC,GAAR,CAAY/B,SAAS,EAArB;AACA8B,IAAAA,OAAO,CAACC,GAAR,CAAYrC,WAAW,EAAvB;AACAoC,IAAAA,OAAO,CAACC,GAAR,CAAYlC,WAAW,EAAvB;AAGA,QAAI8D,UAAU,GAAGhC,IAAjB;AACA,QAAIiC,SAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,SAAJ;AAEAnC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ4B,UAAU,CAACO,MAA/B;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACR,UAAU,CAACO,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACpCP,MAAAA,SAAS,GAAID,UAAU,CAACQ,CAAD,CAAV,CAAcC,KAAd,CAAoB,GAApB,CAAb;AACAP,MAAAA,IAAI,GAAGD,SAAS,CAAC,CAAD,CAAhB;AACAE,MAAAA,WAAW,GAAGrE,UAAU,CAACmE,SAAS,CAAC,CAAD,CAAV,CAAxB;AACAG,MAAAA,WAAW,GAAGtE,UAAU,CAACmE,SAAS,CAAC,CAAD,CAAV,CAAxB;AACAI,MAAAA,SAAS,GAAGvE,UAAU,CAACmE,SAAS,CAAC,CAAD,CAAV,CAAtB;AACAK,MAAAA,SAAS,GAAGxE,UAAU,CAACmE,SAAS,CAAC,CAAD,CAAV,CAAtB;;AACA,UAAIO,CAAC,KAAK,GAAV,EAAe;AACXrC,QAAAA,OAAO,CAACC,GAAR,CAAYnB,CAAC,IAAEmD,WAAW,GAAG7E,QAAhB,CAAD,IAA4BE,MAAM,GAAGF,QAArC,CAAZ;AACH;;AACDZ,MAAAA,GAAG,CAAC+F,SAAJ;AACA/F,MAAAA,GAAG,CAACgG,MAAJ,CAAW1D,CAAC,IAAEmD,WAAW,GAAGlE,WAAW,EAA3B,CAAD,IAAiCM,SAAS,KAAKN,WAAW,EAA1D,CAAX,EAA0EgB,CAAC,IAAEiD,WAAW,GAAGpE,WAAW,EAA3B,CAAD,IAAiCM,SAAS,KAAKN,WAAW,EAA1D,CAA1E;AACApB,MAAAA,GAAG,CAACiG,MAAJ,CAAW3D,CAAC,IAAEqD,SAAS,GAAGpE,WAAW,EAAzB,CAAD,IAA+BM,SAAS,KAAKN,WAAW,EAAxD,CAAX,EAAwEgB,CAAC,IAAEmD,SAAS,GAAGtE,WAAW,EAAzB,CAAD,IAA+BM,SAAS,KAAKN,WAAW,EAAxD,CAAxE,EAZoC,CAapC;AACA;;AACApB,MAAAA,GAAG,CAACkG,WAAJ,GAAkB,KAAlB;;AACA,UAAIX,IAAI,KAAK,EAAT,IAAeA,IAAI,KAAK,cAA5B,EAA4C;AACxCvF,QAAAA,GAAG,CAACkG,WAAJ,GAAkB,MAAlB;AACH,OAFD,MAEO;AACH,YAAIX,IAAI,KAAK,MAAb,EAAqB;AACjBvF,UAAAA,GAAG,CAACkG,WAAJ,GAAkB,MAAlB;AACH;AACJ;;AACDlG,MAAAA,GAAG,CAACmG,MAAJ;AACH;;AACD3C,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEH,GA7DQ,CAAT;;AA+DJ,QAAM2C,aAAa,GAAG,MAAM;AAEpB5C,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACuC,MAAjB;AAEJrC,IAAAA,WAAW;AACX,UAAMG,MAAM,GAAG;AACX;AACAC,MAAAA,MAAM,EAAGlB,cAFE;AAGXmB,MAAAA,OAAO,EAAGjB,cAHC;AAIXkB,MAAAA,OAAO,EAAGhB,YAJC;AAKXiB,MAAAA,QAAQ,EAAGf;AALA,KAAf;AAQA,QAAIgB,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uCAA+B;AAF1B;AADA,KAAb,CAbwB,CAoBxB;AACA;;AACAlE,IAAAA,KAAK,CAACmE,IAAN,CACI,6BADJ,EAEIP,MAFJ,EAGIK,MAHJ,EAKKG,IALL,CAKUC,QAAQ,IAAI;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAQ,CAACC,IAArB,EADc,CAEd;AACA;;AACAd,MAAAA,OAAO,CAACD,IAAI,CAACgD,MAAL,CAAYlC,QAAQ,CAACC,IAAT,CAAc,OAAd,CAAZ,CAAD,CAAP,CAJc,CAI+B;AAChD,KAVL,EAYKC,KAZL,CAYW,UAAUC,KAAV,EAAiB;AACpBd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH,KAdL;AAgBAd,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACuC,MAAjB,EAtCwB,CAwCxB;AACA;AAMH,GA/CD;;AAiDA,QAAMU,eAAe,GAAIC,OAAD,IAAa;AACjCzE,IAAAA,kBAAkB,CAACyE,OAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,QAAD,IAAc;AACnCxE,IAAAA,oBAAoB,CAACwE,QAAD,CAApB;;AACA,QAAGzE,kBAAkB,OAAOG,oBAAoB,EAAhD,EAAoD,CAChD;AACH,KAFD,MAEO;AACH;AACA,UAAIuE,EAAE,GAAG,CAACvF,UAAU,CAACgB,oBAAoB,GAAG,CAAH,CAArB,CAAV,GAAwChB,UAAU,CAACa,kBAAkB,GAAG,CAAH,CAAnB,CAAnD,IAA8EQ,UAAvF;AACA,UAAImE,EAAE,GAAG,CAACxF,UAAU,CAACgB,oBAAoB,GAAG,CAAH,CAArB,CAAV,GAAwChB,UAAU,CAACa,kBAAkB,GAAG,CAAH,CAAnB,CAAnD,IAA8EQ,UAAvF;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYzC,iBAAiB,CAAC,CAAD,CAA7B;AACIC,MAAAA,WAAW,CAACG,WAAW,KAAKuF,EAAjB,CAAX;AACAnF,MAAAA,SAAS,CAACE,SAAS,KAAKiF,EAAf,CAAT;AACAhF,MAAAA,SAAS,CAACE,SAAS,KAAK6E,EAAf,CAAT;AACArF,MAAAA,WAAW,CAACE,WAAW,KAAKmF,EAAjB,CAAX;AACAnD,MAAAA,WAAW;AAClB;AACJ,GAfD;;AAiBF,QAAMqD,MAAM,GAAG,MAAM;AACjB1D,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA2D,IAAAA,aAAa;AAChB,GAHD;;AAKA,QAAMC,OAAO,GAAG,MAAM;AAClB5D,IAAAA,eAAe,CAAC,GAAD,CAAf;AACA2D,IAAAA,aAAa;AAChB,GAHD;;AAKA,QAAMA,aAAa,GAAG,MAAM;AACxBrD,IAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AAEA,QAAI8D,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAAU7F,WAAW,KAAK,CAACA,WAAW,KAAKM,SAAS,EAA1B,IAA8B,CAAxD,IAA8DuB,YAAvE,CAApB;AACA,QAAIiE,aAAa,GAAGF,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAAUpF,SAAS,KAAM,CAACA,SAAS,KAAKN,WAAW,EAA1B,IAA8B,CAAvD,IAA6D0B,YAAtE,CAApB;AAEA,UAAMkE,MAAM,GAAI,CAAC/F,WAAW,KAAKM,SAAS,EAA1B,IAA8B,CAA9C;AACA,UAAM0F,MAAM,GAAI,CAAC7F,WAAW,KAAKM,SAAS,EAA1B,IAA8B,CAA9C;AAEA,UAAMwF,WAAW,GAAGF,MAAM,GAAIH,IAAI,CAACC,GAAL,CAAS7F,WAAW,KAAK+F,MAAzB,IAAmClE,YAAjE;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY4D,WAAZ;AACA,UAAMC,SAAS,GAAGH,MAAM,GAAIH,IAAI,CAACC,GAAL,CAASvF,SAAS,KAAKyF,MAAvB,IAAiClE,YAA7D;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY6D,SAAZ;AACA,UAAMC,SAAS,GAAGH,MAAM,GAAIJ,IAAI,CAACC,GAAL,CAASpF,SAAS,KAAKuF,MAAvB,IAAiCnE,YAA7D;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY8D,SAAZ;AACA,UAAMC,WAAW,GAAGJ,MAAM,GAAIJ,IAAI,CAACC,GAAL,CAAS1F,WAAW,KAAK6F,MAAzB,IAAmCnE,YAAjE;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAa+D,WAAb;AACA5H,IAAAA,QAAQ,CAAC6H,uBAAT,CAAiC,MAAM;AACnCxG,MAAAA,WAAW,CAACoG,WAAD,CAAX;AACA7F,MAAAA,SAAS,CAAC8F,SAAD,CAAT;AACA3F,MAAAA,SAAS,CAAC4F,SAAD,CAAT;AACAlG,MAAAA,WAAW,CAACmG,WAAD,CAAX;AACH,KALD;AAMAjE,IAAAA,WAAW;AACd,GAxBD;;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAII;AAAA,gBAAK5C;AAAL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,gBAAhB;AAAkC,MAAA,QAAQ,EAAI+B;AAA9C;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,iBAAhB;AAAmC,MAAA,QAAQ,EAAIE;AAA/C;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,cAAhB;AAAgC,MAAA,QAAQ,EAAIE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,eAAhB;AAAiC,MAAA,QAAQ,EAAIE;AAA7C;AAAA;AAAA;AAAA;AAAA,YARJ,eASI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACoD,QAAAA,aAAa;AAAG,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACQ,QAAAA,MAAM;AAAG,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAE,MAAM;AAACE,QAAAA,OAAO;AAAG,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,gBAAIzD,IAAI,CAAC,CAAD;AAAR;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AACI,QAAA,GAAG,EAAEkB,GADT;AAEI,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAEvC,CAAT;AAAY2C,UAAAA,MAAM,EAAE1C;AAApB,SAFX;AAGI,QAAA,aAAa,EAAEF,KAAK,CAACqF,aAHzB;AAII,QAAA,QAAQ,EAAGC,CAAD,IAAOtF,KAAK,CAACuF,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,KAAxB,CAJrB;AAKI,QAAA,WAAW,EAAGH,CAAD,IAAOrB,eAAe,CAAC,CAACqB,CAAC,CAACI,KAAH,EAAUJ,CAAC,CAACK,KAAZ,CAAD,CALvC;AAMI,QAAA,SAAS,EAAGL,CAAD,IAAOnB,gBAAgB,CAAC,CAACmB,CAAC,CAACI,KAAH,EAAUJ,CAAC,CAACK,KAAZ,CAAD;AANtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA5PQ5F,K;;KAAAA,K;AA6PT,eAAeA,KAAf,C,CAEA","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport TextBox from './TextBox'\nimport React, {useState, useEffect, useRef} from 'react'\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\n\n// global reference to the oldCanvas element\nlet canvas;\n\n// global reference to the oldCanvas' context\nlet ctx;\n\n\n\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\nconst getPixelRatio = context => {\n    let backingStore =\n        context.backingStorePixelRatio ||\n        context.webkitBackingStorePixelRatio ||\n        context.mozBackingStorePixelRatio ||\n        context.msBackingStorePixelRatio ||\n        context.oBackingStorePixelRatio ||\n        context.backingStorePixelRatio ||\n        1;\n    return (window.devicePixelRatio || 1) / backingStore;\n};\n\nlet startLat = 41.831311;\nlet startLon = -71.406524;\nlet endLat = 41.821395;\nlet endLon = -71.396608;\nlet clickCoordinate = [];\nlet releaseCoordinate = [];\n\nfunction setStartLat(slat) {\n    startLat = parseFloat(slat)\n}\n\nfunction getStartLat() {\n    return parseFloat(startLat)\n}\n\nfunction setStartLon(slon) {\n    startLon = parseFloat(slon)\n}\n\nfunction getStartLon() {\n    return parseFloat(startLon)\n}\n\nfunction setEndLat(elat) {\n    endLat = parseFloat(elat)\n}\n\nfunction getEndLat() {\n    return parseFloat(endLat)\n}\n\nfunction setEndLon(elon) {\n    endLon = parseFloat(elon)\n}\n\nfunction getEndLon() {\n    return parseFloat(endLon)\n}\n\nfunction setClickCoordinate(click) {\n    clickCoordinate = click\n}\n\nfunction getClickCoordinate() {\n    return clickCoordinate\n}\n\nfunction setReleaseCoordinate(release) {\n    releaseCoordinate = release\n}\n\nfunction getReleaseCoordinate() {\n    return releaseCoordinate\n}\n\n\n\nfunction Route(props) {\n    const w = 600.0;\n    const h = 600.0;\n    let coordToPix = parseFloat((getStartLon() - getEndLon())/w);\n    const [startLatBuffer, setStartLatBuffer] = useState(0);\n    const [startLonBuffer, setStartLonBuffer] = useState(0);\n    const [endLatBuffer, setEndLatBuffer] = useState(0);\n    const [endLonBuffer, setEndLonBuffer] = useState(0);\n    const [zoomInFactor, setZoomInFactor] = useState(1);\n    const [startCanvas, refreshCanvas] = useState(\"\");\n//TODO: Fill in the ? with appropriate names/values for a route.\n//Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n    const [ways, setWays] = useState([]);\n    //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n    /**\n     * Makes an axios request.\n     */\n    const requestWays = () => {\n        console.log(9 + \" \" + startLon)\n        const toSend = {\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n            srclat : getStartLat(),\n            srclong : getStartLon(),\n            destlat : getEndLat(),\n            destlong : getEndLon()\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/ways\",\n            toSend,\n            config\n        )\n            .then(response => {\n                console.log(response.data);\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                setWays(response.data[\"ways\"]);//console.log  the response.data[\"route\"]\n            })\n\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n        let ref = useRef();\n        const [firstRender, setFirstRender] = useState(true);\n        useEffect(() => {\n            if (firstRender) {\n                setFirstRender(false)\n                requestWays()\n            }\n            canvas = ref.current;\n            //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n            //smooths lines\n            ctx = canvas.getContext(\"2d\");\n            let ratio = getPixelRatio(ctx);\n            let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n            let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = `${width}px`;\n            canvas.style.height = `${height}px`;\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.lineWidth = 1\n\n            console.log(getEndLat());\n            console.log(getEndLat());\n            console.log(getStartLat());\n            console.log(getStartLon());\n\n\n            let listOfWays = ways\n            let parsedWay;\n            let type;\n            let startLatWay;\n            let startLonWay;\n            let endLatWay;\n            let endLonWay;\n\n            console.log(\"low\" + listOfWays.length);\n            for (let i=0; i<listOfWays.length; i++) {\n                parsedWay =  listOfWays[i].split(\",\");\n                type = parsedWay[0]\n                startLatWay = parseFloat(parsedWay[1]);\n                startLonWay = parseFloat(parsedWay[2]);\n                endLatWay = parseFloat(parsedWay[3]);\n                endLonWay = parseFloat(parsedWay[4]);\n                if (i === 500) {\n                    console.log(w*(startLonWay - startLon)/(endLon - startLon));\n                }\n                ctx.beginPath();\n                ctx.moveTo(w*(startLonWay - getStartLon())/(getEndLon() - getStartLon()), h*(startLatWay - getStartLat())/(getEndLat() - getStartLat()));\n                ctx.lineTo(w*(endLonWay - getStartLon())/(getEndLon() - getStartLon()), h*(endLatWay - getStartLat())/(getEndLat() - getStartLat()));\n                //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\n                //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\n                ctx.strokeStyle = \"red\";\n                if (type === \"\" || type === \"unclassified\") {\n                    ctx.strokeStyle = \"blue\";\n                } else {\n                    if (type === \"path\") {\n                        ctx.strokeStyle = \"pink\";\n                    }\n                }\n                ctx.stroke();\n            }\n            console.log(\"done\")\n\n        })\n\n    const refreshButton = () => {\n\n            console.log(ways.length)\n\n        requestWays()\n        const toSend = {\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n            srclat : startLatBuffer,\n            srclong : startLonBuffer,\n            destlat : endLatBuffer,\n            destlong : endLonBuffer\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/route\",\n            toSend,\n            config\n        )\n            .then(response => {\n                console.log(response.data);\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                setWays(ways.concat(response.data[\"route\"]));//console.log  the response.data[\"route\"]\n            })\n\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        console.log(ways.length)\n\n        //to test\n        //41.\n\n\n\n\n\n    }\n\n    const clickedOnCanvas = (clicked) => {\n        setClickCoordinate(clicked)\n    }\n\n    const releasedOnCanvas = (released) => {\n        setReleaseCoordinate(released)\n        if(getClickCoordinate() === getReleaseCoordinate()) {\n            //route start/end\n        } else {\n            //panning\n            let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0]))*coordToPix\n            let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1]))*coordToPix\n            console.log(releaseCoordinate[0])\n                setStartLat(getStartLat() - dY);\n                setEndLat(getEndLat() - dY);\n                setEndLon(getEndLon() + dX);\n                setStartLon(getStartLon() + dX);\n                requestWays();\n        }\n    }\n\n  const zoomIn = () => {\n      setZoomInFactor(0.91);\n      setZoomCoords();\n  }\n\n  const zoomOut = () => {\n      setZoomInFactor(1.1);\n      setZoomCoords();\n  }\n\n  const setZoomCoords = () => {\n      console.log(zoomInFactor);\n\n      let latFromCenter = Math.abs(Math.abs((getStartLat() - (getStartLat() + getEndLat())/2)) * zoomInFactor);\n      let lonFromCenter = Math.abs(Math.abs((getEndLon() -  (getEndLon() + getStartLon())/2)) * zoomInFactor);\n\n      const avgLat = ((getStartLat() + getEndLat())/2)\n      const avgLon = ((getStartLon() + getEndLon())/2)\n\n      const newStartLat = avgLat + (Math.abs(getStartLat() - avgLat) * zoomInFactor);\n      console.log(newStartLat)\n      const newEndLat = avgLat - (Math.abs(getEndLat() - avgLat) * zoomInFactor);\n      console.log(newEndLat);\n      const newEndLon = avgLon + (Math.abs(getEndLon() - avgLon) * zoomInFactor);\n      console.log(newEndLon);\n      const newStartLon = avgLon - (Math.abs(getStartLon() - avgLon) * zoomInFactor);\n      console.log((newStartLon));\n      ReactDOM.unstable_batchedUpdates(() => {\n          setStartLat(newStartLat);\n          setEndLat(newEndLat);\n          setEndLon(newEndLon);\n          setStartLon(newStartLon);\n      })\n      requestWays();\n  }\n\n  return (\n    <div className=\"Route\">\n      <header className=\"Route-header\">\n        <title>This is a title</title>\n      </header>\n        <h1>{startLat}</h1>\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLatBuffer}/>\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLonBuffer}/>\n        <TextBox label={\"End Latitude\"} onChange = {setEndLatBuffer}/>\n        <TextBox label={\"End Longitude\"} onChange = {setEndLonBuffer}/>\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Refresh</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\n        <p>{ways[2]}</p>\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                style={{ width: w, height: h }}\n                routetorender={props.routetorender}\n                onChange={(e) => props.onChange(e.target.value)}\n                onMouseDown={(e) => clickedOnCanvas([e.pageX, e.pageY])}\n                onMouseUp={(e) => releasedOnCanvas([e.pageX, e.pageY])}\n            />\n\n        </div>\n    </div>\n  );\n}\nexport default Route;\n\n//<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}"]},"metadata":{},"sourceType":"module"}