{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\ben\\\\documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\"; // global reference to the oldCanvas element\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nlet startLat = 41.831311;\nlet startLon = -71.406524;\nlet endLat = 41.821395;\nlet endLon = -71.396608;\nlet clickCoordinate = [];\nlet releaseCoordinate = [];\nlet clickCoordinate2 = [];\nlet releaseCoordinate2 = [];\nlet routeStartLat;\nlet routeStartLon;\nlet routeEndLat;\nlet routeEndLon;\nlet route = [];\nlet hasClicked = false;\n\nfunction setStartLat(slat) {\n  startLat = parseFloat(slat);\n}\n\nfunction getStartLat() {\n  return parseFloat(startLat);\n}\n\nfunction setStartLon(slon) {\n  startLon = parseFloat(slon);\n}\n\nfunction getStartLon() {\n  return parseFloat(startLon);\n}\n\nfunction setEndLat(elat) {\n  endLat = parseFloat(elat);\n}\n\nfunction getEndLat() {\n  return parseFloat(endLat);\n}\n\nfunction setEndLon(elon) {\n  endLon = parseFloat(elon);\n}\n\nfunction getEndLon() {\n  return parseFloat(endLon);\n}\n\nfunction setRouteStartLat(slat) {\n  routeStartLat = parseFloat(slat);\n}\n\nfunction getRouteStartLat() {\n  return parseFloat(routeStartLat);\n}\n\nfunction setRouteStartLon(slon) {\n  routeStartLon = parseFloat(slon);\n}\n\nfunction getRouteStartLon() {\n  return parseFloat(routeStartLon);\n}\n\nfunction setRouteEndLat(elat) {\n  routeEndLat = parseFloat(elat);\n}\n\nfunction getRouteEndLat() {\n  return parseFloat(routeEndLat);\n}\n\nfunction setRouteEndLon(elon) {\n  routeEndLon = parseFloat(elon);\n}\n\nfunction getRouteEndLon() {\n  return parseFloat(routeEndLon);\n}\n\nfunction setClickCoordinate(click) {\n  clickCoordinate = click;\n}\n\nfunction getClickCoordinate() {\n  return clickCoordinate;\n}\n\nfunction setReleaseCoordinate(release) {\n  releaseCoordinate = release;\n}\n\nfunction getReleaseCoordinate() {\n  return releaseCoordinate;\n}\n\nfunction setSecondReleaseCoordinate(release) {\n  releaseCoordinate2 = release;\n}\n\nfunction getSecondReleaseCoordinate() {\n  return releaseCoordinate2;\n}\n\nfunction setRoute(r) {\n  route = r;\n}\n\nfunction getRoute() {\n  return route;\n}\n\nfunction Route(props) {\n  _s();\n\n  const w = 600.0;\n  const h = 600.0;\n  let coordToPix = Math.abs(parseFloat((getStartLon() - getEndLon()) / w));\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [ways, setWays] = useState([]); //const [route, setRoute] = useState([]);\n  //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  /**\r\n   * Makes an axios request.\r\n   */\n\n  const requestWays = () => {\n    console.log(9 + \" \" + startLon);\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getStartLat(),\n      srclong: getStartLon(),\n      destlat: getEndLat(),\n      destlong: getEndLon()\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/ways\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setWays(response.data[\"ways\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let ref = useRef();\n  const [firstRender, setFirstRender] = useState(true);\n  useEffect(() => {\n    if (firstRender) {\n      setFirstRender(false);\n      requestWays();\n    }\n\n    canvas = ref.current; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n    //smooths lines\n\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    console.log(getEndLat());\n    console.log(getEndLon());\n    console.log(getStartLat());\n    console.log(getStartLon());\n    printCanvas(ways);\n    printCanvas(getRoute());\n    console.log(\"done\");\n  });\n\n  const printCanvas = toPrint => {\n    console.log(toPrint.length);\n    let parsedWay;\n    let type;\n    let startLatWay;\n    let startLonWay;\n    let endLatWay;\n    let endLonWay;\n    let startCircle;\n    let startPixX;\n    let startPixY;\n    let endPixX;\n    let endPixY;\n    startCircle = false;\n    console.log(\"low\" + toPrint.length);\n\n    for (let i = 0; i < toPrint.length; i++) {\n      parsedWay = toPrint[i].split(\",\");\n      type = parsedWay[0];\n      startLatWay = parseFloat(parsedWay[1]);\n      startLonWay = parseFloat(parsedWay[2]);\n      endLatWay = parseFloat(parsedWay[3]);\n      endLonWay = parseFloat(parsedWay[4]);\n      startPixX = w * (startLonWay - getStartLon()) / (getEndLon() - getStartLon());\n      startPixY = h * (startLatWay - getStartLat()) / (getEndLat() - getStartLat());\n      endPixX = w * (endLonWay - getStartLon()) / (getEndLon() - getStartLon());\n      endPixY = h * (endLatWay - getStartLat()) / (getEndLat() - getStartLat());\n\n      if (i % 10 === 0) {\n        console.log(startPixX);\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(startPixX, startPixY);\n      ctx.lineTo(endPixX, endPixY); //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\n      //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\n\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      } else {\n        if (type === \"path\") {\n          console.log(\"yes\");\n          ctx.strokeStyle = \"pink\";\n          ctx.lineWidth = 5;\n          ctx.stroke();\n\n          if (!startCircle) {\n            ctx.moveTo(startPixX, startPixY);\n            ctx.beginPath();\n            ctx.arc(startPixX, startPixY, 15, 0, 2 * Math.PI); //ctx.rect(startPixX - 21, startPixY - 21, 42, 42)\n\n            startCircle = true;\n          } else {\n            if (i === toPrint.length - 1) {\n              ctx.moveTo(endPixX, endPixY);\n              ctx.beginPath();\n              ctx.arc(endPixX, endPixY, 15, 0, 2 * Math.PI); //ctx.rect(endPixX - 21, endPixY - 21, 42, 42)\n            }\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.lineWidth = 1;\n    }\n\n    console.log(toPrint.length);\n  };\n\n  const refreshButton = () => {\n    console.log(ways.length);\n    console.log(hasClicked); //requestWays()\n\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getRouteStartLat(),\n      srclong: getRouteStartLon(),\n      destlat: getRouteEndLat(),\n      destlong: getRouteEndLon()\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      let currentRoute = response.data[\"route\"];\n      setRoute(currentRoute); //console.log  the response.data[\"route\"]\n\n      printCanvas(currentRoute); //.slice(0, 10))\n    }).catch(function (error) {\n      console.log(error);\n    });\n    console.log(ways.length); //to test\n    //41.825158\n    // -71.404687\n    //41.827525\n    //-71.400441\n  }; //clickedOnCanvas setter sets pixels x,y\n  //release does the same\n\n\n  const clickedOnCanvas = clicked => {\n    console.log(clicked);\n    setClickCoordinate(clicked);\n  };\n\n  const releasedOnCanvas = released => {\n    console.log(released);\n    setReleaseCoordinate(released);\n    console.log(getClickCoordinate()[0]);\n    console.log(getReleaseCoordinate()[0]);\n    console.log(getClickCoordinate()[1]);\n    console.log(getReleaseCoordinate()[1]);\n\n    if (getClickCoordinate()[0] === getReleaseCoordinate()[0] && getClickCoordinate()[1] === getReleaseCoordinate()[1]) {\n      console.log(\"clicked and released\");\n\n      if (hasClicked) {\n        console.log(\"entered clicked condition\"); //make post req\n        //\n        // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\n        // setRouteStartLat(getStartLat() + getSecondReleaseCoordinate()[1]*coordToPix)\n        // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\n        // setRouteEndLat(getStartLat() + parseFloat(released[1])*coordToPix)\n        // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\n        // setRouteStartLat(getStartLat() - Math.abs(getSecondReleaseCoordinate()[1]*coordToPix))\n        // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\n        // setRouteEndLat(getStartLat() - Math.abs(parseFloat(released[1])*coordToPix))\n\n        setRouteStartLon(getSecondReleaseCoordinate()[0] * (getEndLon() - getStartLon()) / w + getStartLon());\n        setRouteStartLat(getSecondReleaseCoordinate()[1] * (getEndLat() - getStartLat()) / h + getStartLat());\n        setRouteEndLon(released[0] * (getEndLon() - getStartLon()) / w + getStartLon());\n        setRouteEndLat(released[1] * (getEndLat() - getStartLat()) / h + getStartLat());\n        console.log(w * (getRouteStartLon() - getStartLon()) / (getEndLon() - getStartLon()));\n        console.log(h * (getRouteStartLat() - getStartLat()) / (getEndLat() - getStartLat()));\n        console.log(w * (getRouteEndLon() - getStartLon()) / (getEndLon() - getStartLon()));\n        console.log(h * (getRouteEndLat() - getStartLat()) / (getEndLat() - getStartLat()));\n        console.log(getRouteStartLat());\n        console.log(getRouteStartLon());\n        console.log(getRouteEndLat());\n        console.log(getRouteEndLon());\n        refreshButton();\n        hasClicked = false;\n      } else {\n        setSecondReleaseCoordinate(released);\n        hasClicked = true;\n      } //route start/end\n\n    } else {\n      //panning\n      let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0])) * coordToPix;\n      let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1])) * coordToPix;\n      console.log(releaseCoordinate[0]);\n      setStartLat(getStartLat() - dY);\n      setEndLat(getEndLat() - dY);\n      setEndLon(getEndLon() + dX);\n      setStartLon(getStartLon() + dX);\n      requestWays();\n      printCanvas(getRoute());\n    }\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    const avgLat = (getStartLat() + getEndLat()) / 2;\n    const avgLon = (getStartLon() + getEndLon()) / 2;\n    const newStartLat = avgLat + Math.abs(getStartLat() - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(getEndLat() - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(getEndLon() - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(getStartLon() - avgLon) * zoomInFactor;\n    console.log(newStartLon);\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n    });\n    requestWays();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setRouteStartLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setRouteStartLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setRouteEndLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setRouteEndLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setRouteStartLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setRouteStartLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setRouteEndLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setRouteEndLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Find Path\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: ways[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: ref,\n      style: {\n        width: w,\n        height: h\n      },\n      routetorender: props.routetorender,\n      onChange: e => props.onChange(e.target.value),\n      onMouseDown: e => clickedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop]),\n      onMouseUp: e => releasedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }, this), \"hi\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"LNBnbkAYFWiyhfnK3gcUsws7KQ0=\");\n\n_c = Route;\nexport default Route; //<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["C:/users/ben/documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","useRef","ReactDOM","AwesomeButton","axios","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","startLat","startLon","endLat","endLon","clickCoordinate","releaseCoordinate","clickCoordinate2","releaseCoordinate2","routeStartLat","routeStartLon","routeEndLat","routeEndLon","route","hasClicked","setStartLat","slat","parseFloat","getStartLat","setStartLon","slon","getStartLon","setEndLat","elat","getEndLat","setEndLon","elon","getEndLon","setRouteStartLat","getRouteStartLat","setRouteStartLon","getRouteStartLon","setRouteEndLat","getRouteEndLat","setRouteEndLon","getRouteEndLon","setClickCoordinate","click","getClickCoordinate","setReleaseCoordinate","release","getReleaseCoordinate","setSecondReleaseCoordinate","getSecondReleaseCoordinate","setRoute","r","getRoute","Route","props","w","h","coordToPix","Math","abs","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","ways","setWays","requestWays","console","log","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","data","catch","error","ref","firstRender","setFirstRender","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","clearRect","lineWidth","printCanvas","toPrint","length","parsedWay","type","startLatWay","startLonWay","endLatWay","endLonWay","startCircle","startPixX","startPixY","endPixX","endPixY","i","split","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","refreshButton","currentRoute","clickedOnCanvas","clicked","releasedOnCanvas","released","dX","dY","zoomIn","setZoomCoords","zoomOut","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon","unstable_batchedUpdates","routetorender","e","onChange","target","value","pageX","offsetLeft","pageY","offsetTop"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport TextBox from './TextBox'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport axios from \"axios\";\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\n\r\n\r\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\nconst getPixelRatio = context => {\r\n    let backingStore =\r\n        context.backingStorePixelRatio ||\r\n        context.webkitBackingStorePixelRatio ||\r\n        context.mozBackingStorePixelRatio ||\r\n        context.msBackingStorePixelRatio ||\r\n        context.oBackingStorePixelRatio ||\r\n        context.backingStorePixelRatio ||\r\n        1;\r\n    return (window.devicePixelRatio || 1) / backingStore;\r\n};\r\n\r\nlet startLat = 41.831311;\r\nlet startLon = -71.406524;\r\nlet endLat = 41.821395;\r\nlet endLon = -71.396608;\r\nlet clickCoordinate = [];\r\nlet releaseCoordinate = [];\r\nlet clickCoordinate2 = [];\r\nlet releaseCoordinate2 = [];\r\nlet routeStartLat;\r\nlet routeStartLon;\r\nlet routeEndLat;\r\nlet routeEndLon;\r\nlet route = [];\r\n\r\nlet hasClicked = false;\r\n\r\nfunction setStartLat(slat) {\r\n    startLat = parseFloat(slat)\r\n}\r\n\r\nfunction getStartLat() {\r\n    return parseFloat(startLat)\r\n}\r\n\r\nfunction setStartLon(slon) {\r\n    startLon = parseFloat(slon)\r\n}\r\n\r\nfunction getStartLon() {\r\n    return parseFloat(startLon)\r\n}\r\n\r\nfunction setEndLat(elat) {\r\n    endLat = parseFloat(elat)\r\n}\r\n\r\nfunction getEndLat() {\r\n    return parseFloat(endLat)\r\n}\r\n\r\nfunction setEndLon(elon) {\r\n    endLon = parseFloat(elon)\r\n}\r\n\r\nfunction getEndLon() {\r\n    return parseFloat(endLon)\r\n}\r\n\r\nfunction setRouteStartLat(slat) {\r\n    routeStartLat = parseFloat(slat)\r\n}\r\n\r\nfunction getRouteStartLat() {\r\n    return parseFloat(routeStartLat)\r\n}\r\n\r\nfunction setRouteStartLon(slon) {\r\n    routeStartLon = parseFloat(slon)\r\n}\r\n\r\nfunction getRouteStartLon() {\r\n    return parseFloat(routeStartLon)\r\n}\r\n\r\nfunction setRouteEndLat(elat) {\r\n    routeEndLat = parseFloat(elat)\r\n}\r\n\r\nfunction getRouteEndLat() {\r\n    return parseFloat(routeEndLat)\r\n}\r\n\r\nfunction setRouteEndLon(elon) {\r\n    routeEndLon = parseFloat(elon)\r\n}\r\n\r\nfunction getRouteEndLon() {\r\n    return parseFloat(routeEndLon)\r\n}\r\n\r\nfunction setClickCoordinate(click) {\r\n    clickCoordinate = click\r\n}\r\n\r\nfunction getClickCoordinate() {\r\n    return clickCoordinate\r\n}\r\n\r\nfunction setReleaseCoordinate(release) {\r\n    releaseCoordinate = release\r\n}\r\n\r\nfunction getReleaseCoordinate() {\r\n    return releaseCoordinate\r\n}\r\n\r\nfunction setSecondReleaseCoordinate(release) {\r\n    releaseCoordinate2 = release\r\n}\r\n\r\nfunction getSecondReleaseCoordinate() {\r\n    return releaseCoordinate2\r\n}\r\n\r\nfunction setRoute(r) {\r\n    route = r\r\n}\r\n\r\nfunction getRoute() {\r\n    return route\r\n}\r\n\r\n\r\n\r\nfunction Route(props) {\r\n    const w = 600.0;\r\n    const h = 600.0;\r\n    let coordToPix = Math.abs(parseFloat((getStartLon() - getEndLon())/w));\r\n    const [zoomInFactor, setZoomInFactor] = useState(1);\r\n    const [startCanvas, refreshCanvas] = useState(\"\");\r\n//TODO: Fill in the ? with appropriate names/values for a route.\r\n//Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\r\n    const [ways, setWays] = useState([]);\r\n    //const [route, setRoute] = useState([]);\r\n    //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\r\n\r\n    /**\r\n     * Makes an axios request.\r\n     */\r\n    const requestWays = () => {\r\n        console.log(9 + \" \" + startLon)\r\n        const toSend = {\r\n            //TODO: Pass in the values for the data. Follow the format the route expects!\r\n            srclat : getStartLat(),\r\n            srclong : getStartLon(),\r\n            destlat : getEndLat(),\r\n            destlong : getEndLon()\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        //Install and import this!\r\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n        axios.post(\r\n            \"http://localhost:4567/ways\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n                //Note: It is very important that you understand how this is set up and why it works!\r\n                setWays(response.data[\"ways\"]);//console.log  the response.data[\"route\"]\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n        let ref = useRef();\r\n        const [firstRender, setFirstRender] = useState(true);\r\n        useEffect(() => {\r\n            if (firstRender) {\r\n                setFirstRender(false)\r\n                requestWays()\r\n            }\r\n            canvas = ref.current;\r\n            //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\n            //smooths lines\r\n            ctx = canvas.getContext(\"2d\");\r\n            let ratio = getPixelRatio(ctx);\r\n            let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\r\n            let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\r\n            canvas.width = width * ratio;\r\n            canvas.height = height * ratio;\r\n            canvas.style.width = `${width}px`;\r\n            canvas.style.height = `${height}px`;\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.lineWidth = 1\r\n\r\n            console.log(getEndLat());\r\n            console.log(getEndLon());\r\n            console.log(getStartLat());\r\n            console.log(getStartLon());\r\n\r\n            printCanvas(ways)\r\n            printCanvas(getRoute())\r\n\r\n            console.log(\"done\")\r\n\r\n        })\r\n\r\n    const printCanvas = (toPrint) => {\r\n            console.log(toPrint.length)\r\n        let parsedWay;\r\n        let type;\r\n        let startLatWay;\r\n        let startLonWay;\r\n        let endLatWay;\r\n        let endLonWay;\r\n        let startCircle;\r\n        let startPixX;\r\n        let startPixY;\r\n        let endPixX;\r\n        let endPixY;\r\n\r\n        startCircle = false\r\n\r\n        console.log(\"low\" + toPrint.length);\r\n\r\n        for (let i=0; i<toPrint.length; i++) {\r\n\r\n            parsedWay = toPrint[i].split(\",\");\r\n            type = parsedWay[0]\r\n            startLatWay = parseFloat(parsedWay[1]);\r\n            startLonWay = parseFloat(parsedWay[2]);\r\n            endLatWay = parseFloat(parsedWay[3]);\r\n            endLonWay = parseFloat(parsedWay[4]);\r\n            startPixX = w*(startLonWay - getStartLon())/(getEndLon() - getStartLon())\r\n            startPixY = h*(startLatWay - getStartLat())/(getEndLat() - getStartLat())\r\n            endPixX = w*(endLonWay - getStartLon())/(getEndLon() - getStartLon())\r\n            endPixY = h*(endLatWay - getStartLat())/(getEndLat() - getStartLat())\r\n            if (i%10===0){\r\n                console.log(startPixX)\r\n            }\r\n            ctx.beginPath();\r\n            ctx.moveTo(startPixX, startPixY);\r\n            ctx.lineTo(endPixX, endPixY);\r\n            //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\r\n            //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\r\n            ctx.strokeStyle = \"red\";\r\n            if (type === \"\" || type === \"unclassified\") {\r\n                ctx.strokeStyle = \"blue\";\r\n            } else {\r\n                if (type === \"path\") {\r\n                    console.log(\"yes\")\r\n                    ctx.strokeStyle = \"pink\";\r\n                    ctx.lineWidth = 5\r\n                    ctx.stroke()\r\n                    if (!startCircle) {\r\n                        ctx.moveTo(startPixX, startPixY);\r\n                        ctx.beginPath();\r\n                        ctx.arc(startPixX, startPixY, 15, 0, 2 * Math.PI);\r\n                        //ctx.rect(startPixX - 21, startPixY - 21, 42, 42)\r\n                        startCircle = true\r\n                    } else {\r\n                        if (i === toPrint.length - 1) {\r\n                            ctx.moveTo(endPixX, endPixY);\r\n                            ctx.beginPath();\r\n                            ctx.arc(endPixX, endPixY, 15, 0, 2 * Math.PI);\r\n                            //ctx.rect(endPixX - 21, endPixY - 21, 42, 42)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ctx.stroke();\r\n            ctx.lineWidth = 1\r\n        }\r\n        console.log(toPrint.length)\r\n    }\r\n    const refreshButton = () => {\r\n\r\n            console.log(ways.length)\r\n        console.log(hasClicked)\r\n\r\n        //requestWays()\r\n        const toSend = {\r\n            //TODO: Pass in the values for the data. Follow the format the route expects!\r\n            srclat : getRouteStartLat(),\r\n            srclong : getRouteStartLon(),\r\n            destlat : getRouteEndLat(),\r\n            destlong : getRouteEndLon()\r\n        };\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n\r\n        //Install and import this!\r\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\r\n        axios.post(\r\n            \"http://localhost:4567/route\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\r\n                //Note: It is very important that you understand how this is set up and why it works!\r\n                let currentRoute = response.data[\"route\"]\r\n                setRoute(currentRoute);//console.log  the response.data[\"route\"]\r\n                printCanvas(currentRoute)//.slice(0, 10))\r\n            })\r\n\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        console.log(ways.length)\r\n\r\n        //to test\r\n        //41.825158\r\n        // -71.404687\r\n        //41.827525\r\n        //-71.400441\r\n\r\n\r\n\r\n    }\r\n\r\n    //clickedOnCanvas setter sets pixels x,y\r\n    //release does the same\r\n\r\n\r\n    const clickedOnCanvas = (clicked) => {\r\n\r\n            console.log(clicked)\r\n\r\n\r\n            setClickCoordinate(clicked)\r\n\r\n\r\n    }\r\n\r\n    const releasedOnCanvas = (released) => {\r\n        console.log(released)\r\n        setReleaseCoordinate(released)\r\n        console.log(getClickCoordinate()[0])\r\n        console.log(getReleaseCoordinate()[0])\r\n        console.log(getClickCoordinate()[1])\r\n        console.log(getReleaseCoordinate()[1])\r\n        if(getClickCoordinate()[0] === getReleaseCoordinate()[0] &&\r\n            getClickCoordinate()[1] === getReleaseCoordinate()[1]) {\r\n\r\n            console.log(\"clicked and released\")\r\n            if (hasClicked){\r\n\r\n                console.log(\"entered clicked condition\")\r\n\r\n                //make post req\r\n                //\r\n                // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\r\n                // setRouteStartLat(getStartLat() + getSecondReleaseCoordinate()[1]*coordToPix)\r\n                // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\r\n                // setRouteEndLat(getStartLat() + parseFloat(released[1])*coordToPix)\r\n                // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\r\n                // setRouteStartLat(getStartLat() - Math.abs(getSecondReleaseCoordinate()[1]*coordToPix))\r\n                // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\r\n                // setRouteEndLat(getStartLat() - Math.abs(parseFloat(released[1])*coordToPix))\r\n\r\n\r\n                setRouteStartLon(getSecondReleaseCoordinate()[0]*(getEndLon() - getStartLon())/w +  getStartLon())\r\n                setRouteStartLat(getSecondReleaseCoordinate()[1]*(getEndLat() - getStartLat())/h +  getStartLat())\r\n                setRouteEndLon(released[0]*(getEndLon() - getStartLon())/w +  getStartLon())\r\n                setRouteEndLat(released[1]*(getEndLat() - getStartLat())/h +  getStartLat())\r\n\r\n               console.log(w*(getRouteStartLon() - getStartLon())/(getEndLon() - getStartLon()))\r\n                console.log(h*(getRouteStartLat() - getStartLat())/(getEndLat() - getStartLat()))\r\n                console.log(w*(getRouteEndLon() - getStartLon())/(getEndLon() - getStartLon()))\r\n                console.log(h*(getRouteEndLat() - getStartLat())/(getEndLat() - getStartLat()))\r\n\r\n                console.log(getRouteStartLat())\r\n                console.log(getRouteStartLon())\r\n                console.log(getRouteEndLat())\r\n                console.log(getRouteEndLon())\r\n                refreshButton();\r\n\r\n                hasClicked = false;\r\n            } else {\r\n                setSecondReleaseCoordinate(released)\r\n                hasClicked = true;\r\n            }\r\n            //route start/end\r\n        } else {\r\n            //panning\r\n            let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0]))*coordToPix\r\n            let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1]))*coordToPix\r\n            console.log(releaseCoordinate[0])\r\n                setStartLat(getStartLat() - dY);\r\n                setEndLat(getEndLat() - dY);\r\n                setEndLon(getEndLon() + dX);\r\n                setStartLon(getStartLon() + dX);\r\n                requestWays();\r\n                printCanvas(getRoute())\r\n\r\n\r\n        }\r\n    }\r\n\r\n  const zoomIn = () => {\r\n      setZoomInFactor(0.91);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const zoomOut = () => {\r\n      setZoomInFactor(1.1);\r\n      setZoomCoords();\r\n  }\r\n\r\n  const setZoomCoords = () => {\r\n      console.log(zoomInFactor);\r\n\r\n      const avgLat = ((getStartLat() + getEndLat())/2)\r\n      const avgLon = ((getStartLon() + getEndLon())/2)\r\n\r\n      const newStartLat = avgLat + (Math.abs(getStartLat() - avgLat) * zoomInFactor);\r\n      console.log(newStartLat)\r\n      const newEndLat = avgLat - (Math.abs(getEndLat() - avgLat) * zoomInFactor);\r\n      console.log(newEndLat);\r\n      const newEndLon = avgLon + (Math.abs(getEndLon() - avgLon) * zoomInFactor);\r\n      console.log(newEndLon);\r\n      const newStartLon = avgLon - (Math.abs(getStartLon() - avgLon) * zoomInFactor);\r\n      console.log((newStartLon));\r\n      ReactDOM.unstable_batchedUpdates(() => {\r\n          setStartLat(newStartLat);\r\n          setEndLat(newEndLat);\r\n          setEndLon(newEndLon);\r\n          setStartLon(newStartLon);\r\n      })\r\n      requestWays();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Route\">\r\n      <header className=\"Route-header\">\r\n        <title>This is a title</title>\r\n      </header>\r\n        <h1>{startLat}</h1>\r\n        <TextBox label={\"Start Latitude\"} onChange = {setRouteStartLat}/>\r\n        <TextBox label={\"Start Longitude\"} onChange = {setRouteStartLon}/>\r\n        <TextBox label={\"End Latitude\"} onChange = {setRouteEndLat}/>\r\n        <TextBox label={\"End Longitude\"} onChange = {setRouteEndLon}/>\r\n        <TextBox label={\"Start Latitude\"} onChange = {setRouteStartLat}/>\r\n        <TextBox label={\"Start Longitude\"} onChange = {setRouteStartLon}/>\r\n        <TextBox label={\"End Latitude\"} onChange = {setRouteEndLat}/>\r\n        <TextBox label={\"End Longitude\"} onChange = {setRouteEndLon}/>\r\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Find Path</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\r\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\r\n        <p>{ways[2]}</p>\r\n            <canvas\r\n                ref={ref}\r\n                style={{ width: w, height: h }}\r\n                routetorender={props.routetorender}\r\n                onChange={(e) => props.onChange(e.target.value)}\r\n                onMouseDown={(e) => clickedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop])}\r\n                onMouseUp={(e) => releasedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop])}\r\n\r\n            />\r\n            hi\r\n    </div>\r\n  );\r\n}\r\nexport default Route;\r\n\r\n//<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}"]},"metadata":{},"sourceType":"module"}