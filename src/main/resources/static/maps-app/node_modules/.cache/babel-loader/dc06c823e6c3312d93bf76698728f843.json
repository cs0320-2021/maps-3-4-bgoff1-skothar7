{"ast":null,"code":"var _jsxFileName = \"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/checkinFeed.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useState, useEffect } from 'react';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport TextBox from \"./TextBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allCheckins = \"\";\nlet user = \"\";\n\nfunction setUser(u) {\n  user = u;\n}\n\nfunction getUser() {\n  return user;\n}\n\nfunction CheckinFeed() {\n  _s();\n\n  const [newCheckins, setNewCheckins] = useState([]);\n  const [option, setOption] = useState(\"h\");\n  let userData = \"\";\n  /**\n   * Makes an axios request.\n   */\n\n  const getCheckins = () => {\n    console.log(\"new checkin interval\");\n    const toSend = {\n      dummy: 42 //TODO: Pass in the values for the data. Follow the format the route expects!\n\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/checkin\", toSend, config).then(response => {\n      //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n      if (response != undefined) {\n        setNewCheckins(response.data[\"checkins\"]);\n      }\n    }).catch(function (error) {\n      console.log(error); //console.log(error.response.data);\n    });\n  };\n\n  setTimeout(getCheckins, 9000); //setInterval(getCheckins, 3000);\n  // setTimeout(() => {\n  //     getCheckins();\n  //     console.log(\"new interval\");\n  // }, 3000);\n\n  const searchForUser = () => {\n    console.log(\"trying to search for user\"); //---------post request for selected user-------------\n\n    const toSend2 = {\n      id: user //TODO: Pass in the values for the data. Follow the format the route expects!\n\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/user\", toSend2, config).then(response2 => {\n      //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n      if (response2 !== undefined) {\n        let rawUserData = response2.data[\"user\"];\n        userData = \"\";\n\n        for (let j = 0; j < rawUserData.length; j++) {\n          let currentUserCheckin = rawUserData[j].split(\",\");\n          userData = userData + \"<option value =\" + currentUserCheckin[0] + \", \" + currentUserCheckin[1] + \", \" + currentUserCheckin[2] + \", \" + currentUserCheckin[3] + \", \" + currentUserCheckin[4] + \"</option>\";\n        }\n\n        console.log(userData);\n      }\n    }).catch(function (error) {\n      console.log(error);\n      console.log(error.response.data);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"inside useEffect\");\n\n    for (let i = 0; i < newCheckins.length; i++) {\n      let currentCheckin = newCheckins[i].split(\",\");\n      allCheckins = allCheckins + \"<option value=\" + currentCheckin[0] + \">\" + currentCheckin[0] + \", \" + currentCheckin[1] + \", \" + currentCheckin[2] + \", \" + currentCheckin[3] + \", \" + currentCheckin[4] + \"</option>\";\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CheckinFeed\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        setUser(e.target.value);\n      },\n      name: \"checkins\",\n      multiple: true,\n      size: \"10\",\n      children: /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"checkin-list\",\n        dangerouslySetInnerHTML: {\n          __html: allCheckins\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"Usercheckins\",\n      multiple: true,\n      size: \"10\",\n      children: /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: \"checkin-list\",\n        dangerouslySetInnerHTML: {\n          __html: userData\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"User ID \",\n      onChange: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        searchForUser();\n      },\n      children: \"Find User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), userData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckinFeed, \"8M+AUlZFTi259+eqIgz/7imo+cw=\");\n\n_c = CheckinFeed;\nexport default CheckinFeed; // $(function()){\n//     setInterval(funcEverySec, 1000);\n// });\n//\n// function funcEverySec {\n//\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckinFeed\");","map":{"version":3,"sources":["/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/checkinFeed.js"],"names":["axios","React","useState","useEffect","AwesomeButton","TextBox","allCheckins","user","setUser","u","getUser","CheckinFeed","newCheckins","setNewCheckins","option","setOption","userData","getCheckins","console","log","toSend","dummy","config","headers","post","then","response","undefined","data","catch","error","setTimeout","searchForUser","toSend2","id","response2","rawUserData","j","length","currentUserCheckin","split","i","currentCheckin","e","target","value","__html"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport React, {useState, useEffect} from 'react'\nimport {AwesomeButton} from \"react-awesome-button\";\nimport TextBox from \"./TextBox\";\n\nlet allCheckins = \"\"\n\nlet user = \"\";\n\nfunction setUser(u) {\n    user = u\n}\n\nfunction getUser() {\n    return user\n}\n\nfunction CheckinFeed() {\n\n    const [newCheckins, setNewCheckins] = useState([])\n    const [option, setOption] = useState(\"h\")\n    let userData = \"\"\n\n\n\n\n\n    /**\n     * Makes an axios request.\n     */\n    const getCheckins = () => {\n\n        console.log(\"new checkin interval\")\n        const toSend = {\n            dummy : 42,\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/checkin\",\n            toSend,\n            config\n        )\n            .then(response => {\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                if(response != undefined) {\n                    setNewCheckins(response.data[\"checkins\"]);\n                }\n            })\n\n            .catch(function (error) {\n                console.log(error);\n                //console.log(error.response.data);\n            });\n\n\n\n    }\n    setTimeout(getCheckins, 9000);\n    //setInterval(getCheckins, 3000);\n\n    // setTimeout(() => {\n    //     getCheckins();\n    //     console.log(\"new interval\");\n    // }, 3000);\n\n\n\n    const searchForUser = () => {\n        console.log(\"trying to search for user\")\n\n        //---------post request for selected user-------------\n        const toSend2 = {\n            id: user\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/user\",\n            toSend2,\n            config\n        )\n            .then(response2 => {\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                if (response2 !== undefined) {\n                    let rawUserData = response2.data[\"user\"]\n                    userData = \"\"\n                    for (let j = 0; j < rawUserData.length; j++) {\n                        let currentUserCheckin = rawUserData[j].split(\",\")\n                        userData = userData + \"<option value =\" + currentUserCheckin[0] + \", \" + currentUserCheckin[1]\n                            + \", \" + currentUserCheckin[2] + \", \" + currentUserCheckin[3] + \", \" + currentUserCheckin[4]\n                            +\"</option>\"\n\n                    }\n                    console.log(userData)\n                }\n            })\n\n            .catch(function (error) {\n                console.log(error);\n                console.log(error.response.data);\n            });\n\n    }\n\n    useEffect(() => {\n        console.log(\"inside useEffect\");\n        for (let i=0; i < newCheckins.length; i++) {\n            let currentCheckin = newCheckins[i].split(\",\")\n            allCheckins = allCheckins + \"<option value=\"+currentCheckin[0]+\">\"+currentCheckin[0] + \", \" + currentCheckin[1]\n                + \", \" + currentCheckin[2] + \", \" + currentCheckin[3] + \", \" + currentCheckin[4]+\"</option>\"\n        }\n\n\n    })\n\n    return (\n        <div className=\"CheckinFeed\">\n            <select onChange={(e) => {setUser(e.target.value)}} name=\"checkins\" multiple size=\"10\">\n                <optgroup label=\"checkin-list\" dangerouslySetInnerHTML={{__html: allCheckins}}>\n                </optgroup>\n            </select>\n\n            <select name=\"Usercheckins\" multiple size=\"10\">\n                <optgroup label=\"checkin-list\" dangerouslySetInnerHTML={{__html: userData}}>\n                </optgroup>\n            </select>\n            <TextBox label={\"User ID \"} onChange = {setUser}/>\n            <AwesomeButton type=\"primary\" onPress={() => {searchForUser()}}>Find User Data</AwesomeButton>\n            {userData}\n         </div>\n    );\n}\n\nexport default CheckinFeed;\n\n// $(function()){\n//     setInterval(funcEverySec, 1000);\n// });\n//\n// function funcEverySec {\n//\n// }"]},"metadata":{},"sourceType":"module"}