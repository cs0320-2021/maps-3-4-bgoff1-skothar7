{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\Ben\\\\Documents\\\\cs32\\\\maps-3-4-bgoff1-skothar7\\\\src\\\\main\\\\resources\\\\static\\\\maps-app\\\\src\\\\Canvas.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet curNorthWestLat;\nlet curNorthWestLon;\nlet curSouthEastLat;\nlet curSouthEastLon;\nlet pixToCoord; // global reference to the oldCanvas element\n\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nfunction Canvas(props) {\n  _s();\n\n  let w = 600;\n  let h = 400;\n  let ref = useRef();\n  useEffect(() => {\n    canvas = ref.current;\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas).getPropertyValue('width');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    pixToCoord = 2000;\n    curSouthEastLat = 41.823876;\n    curSouthEastLon = -71.395963;\n    curNorthWestLat = curSouthEastLat - w / pixToCoord;\n    curNorthWestLon = curSouthEastLon - h / pixToCoord;\n    let rawWaysData = props.routetorender;\n    let listOfWays = [];\n\n    if (rawWaysData != null) {\n      listOfWays = (rawWaysData + '').split(\";\");\n    }\n\n    let parsedWay;\n    let type;\n    let startLat;\n    let startLon;\n    let endLat;\n    let endLon;\n    console.log(\"low\" + listOfWays.length);\n\n    for (let i = 0; i < listOfWays.length; i++) {\n      parsedWay = listOfWays[i].split(\",\");\n      type = parsedWay[0];\n      startLat = parseFloat(parsedWay[1]);\n      startLon = parseFloat(parsedWay[2]);\n      endLat = parseFloat(parsedWay[3]);\n      endLon = parseFloat(parsedWay[4]);\n\n      if (i === 500) {\n        console.log(h * (startLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon));\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(w * (startLat - curNorthWestLat) / (curSouthEastLat - curNorthWestLat) - 550, h * (startLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon) - 300);\n      ctx.lineTo(w * (endLat - curNorthWestLat) / (curSouthEastLat - curNorthWestLat) - 550, h * (endLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon) - 300);\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      }\n\n      ctx.stroke();\n    }\n\n    console.log(\"done\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: ref,\n      style: {\n        width: w,\n        height: h\n      },\n      routetorender: props.routetorender,\n      onChange: e => props.onChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Canvas, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["C:/users/Ben/Documents/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Canvas.js"],"names":["React","useEffect","useRef","curNorthWestLat","curNorthWestLon","curSouthEastLat","curSouthEastLon","pixToCoord","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","Canvas","props","w","h","ref","current","getContext","ratio","width","getComputedStyle","getPropertyValue","clearRect","height","lineWidth","rawWaysData","routetorender","listOfWays","split","parsedWay","type","startLat","startLon","endLat","endLon","console","log","length","i","parseFloat","beginPath","moveTo","lineTo","strokeStyle","stroke","e","onChange","target","value"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, {useEffect, useRef} from \"react\";\r\n\r\nlet curNorthWestLat;\r\nlet curNorthWestLon;\r\n\r\nlet curSouthEastLat;\r\nlet curSouthEastLon;\r\n\r\nlet pixToCoord;\r\n\r\n// global reference to the oldCanvas element\r\nlet canvas;\r\n\r\n// global reference to the oldCanvas' context\r\nlet ctx;\r\n\r\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\r\nconst getPixelRatio = context => {\r\n    let backingStore =\r\n        context.backingStorePixelRatio ||\r\n        context.webkitBackingStorePixelRatio ||\r\n        context.mozBackingStorePixelRatio ||\r\n        context.msBackingStorePixelRatio ||\r\n        context.oBackingStorePixelRatio ||\r\n        context.backingStorePixelRatio ||\r\n        1;\r\n    return (window.devicePixelRatio || 1) / backingStore;\r\n};\r\n\r\nfunction Canvas(props) {\r\n    let w = 600;\r\n    let h = 400;\r\n    let ref = useRef();\r\n    useEffect(() => {\r\n        canvas = ref.current;\r\n        ctx = canvas.getContext(\"2d\");\r\n        let ratio = getPixelRatio(context);\r\n        let width = getComputedStyle(canvas).getPropertyValue('width')\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.lineWidth = 1\r\n        pixToCoord = 2000;\r\n\r\n        curSouthEastLat = 41.823876;\r\n        curSouthEastLon = -71.395963;\r\n\r\n        curNorthWestLat = (curSouthEastLat - w/pixToCoord);\r\n        curNorthWestLon = (curSouthEastLon - h/pixToCoord);\r\n\r\n\r\n        let rawWaysData = props.routetorender\r\n        let listOfWays = [];\r\n        if (rawWaysData != null) {\r\n            listOfWays = (rawWaysData + '').split(\";\");\r\n        }\r\n\r\n        let parsedWay;\r\n        let type;\r\n        let startLat;\r\n        let startLon;\r\n        let endLat;\r\n        let endLon;\r\n        console.log(\"low\" + listOfWays.length);\r\n        for (let i=0; i<listOfWays.length; i++) {\r\n            parsedWay =  listOfWays[i].split(\",\");\r\n            type = parsedWay[0]\r\n            startLat = parseFloat(parsedWay[1]);\r\n            startLon = parseFloat(parsedWay[2]);\r\n            endLat = parseFloat(parsedWay[3]);\r\n            endLon = parseFloat(parsedWay[4]);\r\n            if (i === 500) {\r\n                console.log(h*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon))\r\n            }\r\n            ctx.beginPath();\r\n            ctx.moveTo(w*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat) - 550, h*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon) - 300);\r\n            ctx.lineTo(w*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat) - 550, h*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon) - 300);\r\n            ctx.strokeStyle = \"red\";\r\n            if (type === \"\" || type === \"unclassified\") {\r\n                ctx.strokeStyle = \"blue\";\r\n            }\r\n            ctx.stroke();\r\n\r\n        }\r\n        console.log(\"done\")\r\n\r\n    })\r\n    return (\r\n        <div className=\"Canvas\">\r\n            <canvas\r\n                ref={ref}\r\n                style={{ width: w, height: h }}\r\n                routetorender={props.routetorender}\r\n                onChange={(e) => props.onChange(e.target.value)}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}