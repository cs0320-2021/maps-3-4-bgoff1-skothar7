{"ast":null,"code":"var _jsxFileName = \"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet curNorthWestLat;\nlet curNorthWestLon;\nlet curSouthEastLat;\nlet curSouthEastLon;\nlet pixToCoord; // global reference to the oldCanvas element\n\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nfunction Route(props) {\n  _s();\n\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0);\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\n  const [clickCoordinate, setClickCoordinate] = useState([]);\n  const [releaseCoordinate, setReleaseCoordinate] = useState([]);\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [route, setRoute] = useState([]); //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  /**\n   * Makes an axios request.\n   */\n\n  const requestRoute = () => {\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: startLat,\n      srclong: startLon,\n      destlat: endLat,\n      destlong: endLon\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; //function Canvas(props) {\n\n\n  let w = 600;\n  let h = 600;\n  let ref = useRef();\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      setEndLat(41.822895);\n      setEndLon(-71.396608);\n      console.log(5);\n      setStartLat(41.828693);\n      setStartLon(-71.406524);\n      firstUpdate.current = false;\n      requestRoute();\n    } else {\n      // curSouthEastLat = parseFloat(props.routetorender[3]);\n      // curSouthEastLon = parseFloat(props.routetorender[4]);\n      // curNorthWestLat = parseFloat(props.routetorender[1]);\n      // curNorthWestLon = parseFloat(props.routetorender[2]);\n      curSouthEastLat = parseFloat(endLat);\n      curSouthEastLon = parseFloat(endLon);\n      curNorthWestLat = parseFloat(startLat);\n      curNorthWestLon = parseFloat(startLon);\n    }\n\n    canvas = ref.current;\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    pixToCoord = 50000; //default\n    // curSouthEastLat = 41.823876;\n    // curSouthEastLon = -71.395963;\n    //\n    // curNorthWestLat = (curSouthEastLat - w/pixToCoord);\n    // curNorthWestLon = (curSouthEastLon - h/pixToCoord);\n    //with ways\n\n    console.log(curSouthEastLat);\n    console.log(curSouthEastLon);\n    console.log(curNorthWestLat);\n    console.log(curNorthWestLon);\n    let rawWaysData = route[3]; //props.routetorender[0]\n\n    let listOfWays = [];\n\n    if (rawWaysData != null) {\n      listOfWays = (rawWaysData + '').split(\";\");\n    }\n\n    let parsedWay;\n    let type;\n    let startLat;\n    let startLon;\n    let endLat;\n    let endLon;\n    pixToCoord = (curNorthWestLon - curSouthEastLon) / w;\n    h = (curNorthWestLat - curSouthEastLat) / pixToCoord;\n    console.log(\"low\" + listOfWays.length);\n\n    for (let i = 0; i < listOfWays.length; i++) {\n      parsedWay = listOfWays[i].split(\",\");\n      type = parsedWay[0];\n      startLat = parseFloat(parsedWay[1]);\n      startLon = parseFloat(parsedWay[2]);\n      endLat = parseFloat(parsedWay[3]);\n      endLon = parseFloat(parsedWay[4]);\n\n      if (i === 500) {\n        console.log(w * (startLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon));\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(w * (startLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon), 0 - h * (startLat - curNorthWestLat) / (curSouthEastLat - curNorthWestLat));\n      ctx.lineTo(w * (endLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon), 0 - h * (endLat - curNorthWestLat) / (curSouthEastLat - curNorthWestLat)); //ctx.moveTo(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n      //ctx.lineTo(w*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      }\n\n      ctx.stroke();\n    }\n\n    console.log(\"done\");\n  }); // return (\n  //\n  // );\n  // }\n\n  const refreshButton = () => {\n    setStartLat(startLatBuffer);\n    setStartLon(startLonBuffer);\n    setEndLat(endLatBuffer);\n    setEndLon(endLonBuffer);\n    requestRoute();\n  };\n\n  const clickedOnCanvas = released => {\n    setReleaseCoordinate(released);\n\n    if (clickCoordinate === releaseCoordinate) {//route start/end\n    } else {\n      //panning\n      let dX = releaseCoordinate[0] - clickCoordinate[0];\n      let dY = releaseCoordinate[1] - clickCoordinate[1];\n      ReactDOM.unstable_batchedUpdates(() => {\n        setStartLat();\n        setEndLat();\n        setEndLon();\n        setStartLon();\n        requestRoute();\n      });\n    }\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = Math.abs(Math.abs(startLat - (startLat + endLat) / 2) * zoomInFactor);\n    let lonFromCenter = Math.abs(Math.abs(endLon - (endLon + startLon) / 2) * zoomInFactor); //const oldStartLat = startLat;\n    //const oldStartLon = startLon;\n    //const oldEndLat = endLat;\n    //const oldEndLon = endLon;\n    //console.log(oldStartLat);\n    //console.log(oldStartLon);\n    //console.log(oldEndLat);\n    //console.log(oldEndLon);\n\n    const avgLat = (startLat + endLat) / 2;\n    const avgLon = (startLon + endLon) / 2;\n    const newStartLat = avgLat + Math.abs(startLat - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(endLat - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(endLon - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(startLon - avgLon) * zoomInFactor;\n    console.log(newStartLon); // + 3)/2);// - ((oldEndLon -  (oldEndLon + 3)/2) * 1));\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n      requestRoute();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: route[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Canvas\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: ref,\n        style: {\n          width: w,\n          height: h\n        },\n        routetorender: props.routetorender,\n        onChange: e => props.onChange(e.target.value) //onMouseDown={(e) => props.onMouseDown([e.pageX, e.pageY])}\n        //onMouseUp={(e) => props.onMouseUp([e.pageX, e.pageY])}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), \"/>\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"kkcfj6ND8PqJsuF5V1H/J7kdEuw=\");\n\n_c = Route;\nexport default Route; //<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","useRef","ReactDOM","AwesomeButton","axios","curNorthWestLat","curNorthWestLon","curSouthEastLat","curSouthEastLon","pixToCoord","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","Route","props","startLat","setStartLat","startLon","setStartLon","endLat","setEndLat","endLon","setEndLon","startLatBuffer","setStartLatBuffer","startLonBuffer","setStartLonBuffer","endLatBuffer","setEndLatBuffer","endLonBuffer","setEndLonBuffer","clickCoordinate","setClickCoordinate","releaseCoordinate","setReleaseCoordinate","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","route","setRoute","requestRoute","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","console","log","data","catch","error","w","h","ref","firstUpdate","current","parseFloat","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","clearRect","lineWidth","rawWaysData","listOfWays","split","parsedWay","type","length","i","beginPath","moveTo","lineTo","strokeStyle","stroke","refreshButton","clickedOnCanvas","released","dX","dY","unstable_batchedUpdates","zoomIn","setZoomCoords","zoomOut","latFromCenter","Math","abs","lonFromCenter","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon","routetorender","e","onChange","target","value"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport TextBox from './TextBox'\nimport React, {useState, useEffect, useRef} from 'react'\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\n\nlet curNorthWestLat;\nlet curNorthWestLon;\n\nlet curSouthEastLat;\nlet curSouthEastLon;\n\nlet pixToCoord;\n\n// global reference to the oldCanvas element\nlet canvas;\n\n// global reference to the oldCanvas' context\nlet ctx;\n\n\n\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\nconst getPixelRatio = context => {\n    let backingStore =\n        context.backingStorePixelRatio ||\n        context.webkitBackingStorePixelRatio ||\n        context.mozBackingStorePixelRatio ||\n        context.msBackingStorePixelRatio ||\n        context.oBackingStorePixelRatio ||\n        context.backingStorePixelRatio ||\n        1;\n    return (window.devicePixelRatio || 1) / backingStore;\n};\n\n\n\nfunction Route(props) {\n\n    const [startLat, setStartLat] = useState(0);\n    const [startLon, setStartLon] = useState(0);\n    const [endLat, setEndLat] = useState(0);\n    const [endLon, setEndLon] = useState(0);\n    const [startLatBuffer, setStartLatBuffer] = useState(0);\n    const [startLonBuffer, setStartLonBuffer] = useState(0);\n    const [endLatBuffer, setEndLatBuffer] = useState(0);\n    const [endLonBuffer, setEndLonBuffer] = useState(0);\n    const [clickCoordinate, setClickCoordinate] = useState([]);\n    const [releaseCoordinate, setReleaseCoordinate] = useState([]);\n    const [zoomInFactor, setZoomInFactor] = useState(1);\n    const [startCanvas, refreshCanvas] = useState(\"\");\n//TODO: Fill in the ? with appropriate names/values for a route.\n//Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n    const [route, setRoute] = useState([]);\n    //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n    /**\n     * Makes an axios request.\n     */\n    const requestRoute = () => {\n        const toSend = {\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n            srclat : startLat,\n            srclong : startLon,\n            destlat : endLat,\n            destlong : endLon\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/route\",\n            toSend,\n            config\n        )\n            .then(response => {\n                console.log(response.data);\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                setRoute(response.data[\"route\"]);//console.log  the response.data[\"route\"]\n            })\n\n            .catch(function (error) {\n                console.log(error);\n\n            });\n    }\n\n    //function Canvas(props) {\n        let w = 600;\n        let h = 600;\n        let ref = useRef();\n        const firstUpdate = useRef(true);\n        useEffect(() => {\n            if (firstUpdate.current) {\n                setEndLat(41.822895)\n                setEndLon(-71.396608)\n                console.log(5)\n                setStartLat(41.828693)\n                setStartLon(-71.406524)\n                firstUpdate.current = false\n                requestRoute()\n            } else {\n                // curSouthEastLat = parseFloat(props.routetorender[3]);\n                // curSouthEastLon = parseFloat(props.routetorender[4]);\n                // curNorthWestLat = parseFloat(props.routetorender[1]);\n                // curNorthWestLon = parseFloat(props.routetorender[2]);\n                curSouthEastLat = parseFloat(endLat);\n                curSouthEastLon = parseFloat(endLon);\n                curNorthWestLat = parseFloat(startLat);\n                curNorthWestLon = parseFloat(startLon);\n            }\n            canvas = ref.current;\n            ctx = canvas.getContext(\"2d\");\n            let ratio = getPixelRatio(ctx);\n            let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n            let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = `${width}px`;\n            canvas.style.height = `${height}px`;\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.lineWidth = 1\n            pixToCoord = 50000;\n\n            //default\n            // curSouthEastLat = 41.823876;\n            // curSouthEastLon = -71.395963;\n            //\n            // curNorthWestLat = (curSouthEastLat - w/pixToCoord);\n            // curNorthWestLon = (curSouthEastLon - h/pixToCoord);\n\n            //with ways\n\n            console.log(curSouthEastLat);\n            console.log(curSouthEastLon);\n            console.log(curNorthWestLat);\n            console.log(curNorthWestLon);\n\n\n            let rawWaysData = route[3]//props.routetorender[0]\n            let listOfWays = [];\n            if (rawWaysData != null) {\n                listOfWays = (rawWaysData + '').split(\";\");\n            }\n\n            let parsedWay;\n            let type;\n            let startLat;\n            let startLon;\n            let endLat;\n            let endLon;\n\n            pixToCoord = ((curNorthWestLon - curSouthEastLon)/w);\n            h = (curNorthWestLat - curSouthEastLat)/pixToCoord;\n\n            console.log(\"low\" + listOfWays.length);\n            for (let i=0; i<listOfWays.length; i++) {\n                parsedWay =  listOfWays[i].split(\",\");\n                type = parsedWay[0]\n                startLat = parseFloat(parsedWay[1]);\n                startLon = parseFloat(parsedWay[2]);\n                endLat = parseFloat(parsedWay[3]);\n                endLon = parseFloat(parsedWay[4]);\n                if (i === 500) {\n                    console.log(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon));\n                }\n                ctx.beginPath();\n                ctx.moveTo(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), 0 - h*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n                ctx.lineTo(w*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), 0 - h*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n                //ctx.moveTo(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n                //ctx.lineTo(w*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n                ctx.strokeStyle = \"red\";\n                if (type === \"\" || type === \"unclassified\") {\n                    ctx.strokeStyle = \"blue\";\n                }\n                ctx.stroke();\n\n            }\n            console.log(\"done\")\n\n        })\n        // return (\n        //\n        // );\n   // }\n\n\n\n\n    const refreshButton = () => {\n        setStartLat(startLatBuffer)\n        setStartLon(startLonBuffer)\n        setEndLat(endLatBuffer)\n        setEndLon(endLonBuffer)\n        requestRoute()\n    }\n\n    const clickedOnCanvas = (released) => {\n        setReleaseCoordinate(released)\n        if(clickCoordinate === releaseCoordinate) {\n            //route start/end\n        } else {\n            //panning\n            let dX = releaseCoordinate[0] - clickCoordinate[0]\n            let dY = releaseCoordinate[1] - clickCoordinate[1]\n            ReactDOM.unstable_batchedUpdates(() => {\n                setStartLat();\n                setEndLat();\n                setEndLon();\n                setStartLon();\n                requestRoute();\n            })\n        }\n    }\n\n\n\n  const zoomIn = () => {\n      setZoomInFactor(0.91);\n      setZoomCoords();\n  }\n\n  const zoomOut = () => {\n      setZoomInFactor(1.1);\n      setZoomCoords();\n  }\n\n  const setZoomCoords = () => {\n      console.log(zoomInFactor);\n\n      let latFromCenter = Math.abs(Math.abs((startLat - (startLat + endLat)/2)) * zoomInFactor);\n      let lonFromCenter = Math.abs(Math.abs((endLon -  (endLon + startLon)/2)) * zoomInFactor);\n\n      //const oldStartLat = startLat;\n      //const oldStartLon = startLon;\n      //const oldEndLat = endLat;\n      //const oldEndLon = endLon;\n\n      //console.log(oldStartLat);\n      //console.log(oldStartLon);\n      //console.log(oldEndLat);\n      //console.log(oldEndLon);\n\n      const avgLat = ((startLat+endLat)/2)\n      const avgLon = ((startLon+endLon)/2)\n\n      const newStartLat = avgLat + (Math.abs(startLat - avgLat) * zoomInFactor);\n      console.log(newStartLat)\n      const newEndLat = avgLat - (Math.abs(endLat - avgLat) * zoomInFactor);\n      console.log(newEndLat);\n      const newEndLon = avgLon + (Math.abs(endLon - avgLon) * zoomInFactor);\n      console.log(newEndLon);\n      const newStartLon = avgLon - (Math.abs(startLon - avgLon) * zoomInFactor);\n      console.log((newStartLon));// + 3)/2);// - ((oldEndLon -  (oldEndLon + 3)/2) * 1));\n      ReactDOM.unstable_batchedUpdates(() => {\n          setStartLat(newStartLat);\n          setEndLat(newEndLat);\n          setEndLon(newEndLon);\n          setStartLon(newStartLon);\n          requestRoute();\n      })\n  }\n\n\n\n  return (\n    <div className=\"Route\">\n      <header className=\"Route-header\">\n        <title>This is a title</title>\n      </header>\n        <h1>{startLat}</h1>\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLatBuffer}/>\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLonBuffer}/>\n        <TextBox label={\"End Latitude\"} onChange = {setEndLatBuffer}/>\n        <TextBox label={\"End Longitude\"} onChange = {setEndLonBuffer}/>\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Refresh</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\n        <p>{route[2]}</p>\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                style={{ width: w, height: h }}\n                routetorender={props.routetorender}\n                onChange={(e) => props.onChange(e.target.value)}\n                //onMouseDown={(e) => props.onMouseDown([e.pageX, e.pageY])}\n                //onMouseUp={(e) => props.onMouseUp([e.pageX, e.pageY])}\n            />\n\n        </div>\n\n        />\n    </div>\n  );\n}\nexport default Route;\n\n//<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}"]},"metadata":{},"sourceType":"module"}