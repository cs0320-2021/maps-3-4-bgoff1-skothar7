{"ast":null,"code":"var _jsxFileName = \"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet curNorthWestLat;\nlet curNorthWestLon;\nlet curSouthEastLat;\nlet curSouthEastLon;\nlet pixToCoord; // global reference to the oldCanvas element\n\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nfunction Canvas(props) {\n  _s();\n\n  let w = 600;\n  let h = 600;\n  let ref = useRef();\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      curSouthEastLat = 41.822895;\n      curSouthEastLon = -71.396608;\n      curNorthWestLat = 41.828693;\n      curNorthWestLon = -71.406524;\n      firstUpdate.current = false;\n      requestRoute();\n    } else {\n      curSouthEastLat = parseFloat(props.routetorender[3]);\n      curSouthEastLon = parseFloat(props.routetorender[4]);\n      curNorthWestLat = parseFloat(props.routetorender[1]);\n      curNorthWestLon = parseFloat(props.routetorender[2]);\n    }\n\n    canvas = ref.current;\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    pixToCoord = 50000; //default\n    // curSouthEastLat = 41.823876;\n    // curSouthEastLon = -71.395963;\n    //\n    // curNorthWestLat = (curSouthEastLat - w/pixToCoord);\n    // curNorthWestLon = (curSouthEastLon - h/pixToCoord);\n    //with ways\n\n    console.log(curSouthEastLat);\n    console.log(curSouthEastLon);\n    console.log(curNorthWestLat);\n    console.log(curNorthWestLon);\n    let rawWaysData = props.routetorender[0];\n    let listOfWays = [];\n\n    if (rawWaysData != null) {\n      listOfWays = (rawWaysData + '').split(\";\");\n    }\n\n    let parsedWay;\n    let type;\n    let startLat;\n    let startLon;\n    let endLat;\n    let endLon;\n    pixToCoord = (curNorthWestLon - curSouthEastLon) / w;\n    h = (curNorthWestLat - curSouthEastLat) / pixToCoord;\n    console.log(\"low\" + listOfWays.length);\n\n    for (let i = 0; i < listOfWays.length; i++) {\n      parsedWay = listOfWays[i].split(\",\");\n      type = parsedWay[0];\n      startLat = parseFloat(parsedWay[1]);\n      startLon = parseFloat(parsedWay[2]);\n      endLat = parseFloat(parsedWay[3]);\n      endLon = parseFloat(parsedWay[4]);\n\n      if (i === 500) {\n        console.log(w * (startLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon));\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(w * (startLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon), 0 - h * (startLat - curNorthWestLat) / (curSouthEastLat - curNorthWestLat));\n      ctx.lineTo(w * (endLon - curNorthWestLon) / (curSouthEastLon - curNorthWestLon), 0 - h * (endLat - curNorthWestLat) / (curSouthEastLat - curNorthWestLat)); //ctx.moveTo(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n      //ctx.lineTo(w*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      }\n\n      ctx.stroke();\n    }\n\n    console.log(\"done\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Canvas\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: ref,\n      style: {\n        width: w,\n        height: h\n      },\n      routetorender: props.routetorender,\n      onChange: e => props.onChange(e.target.value),\n      onMouseDown: e => props.onMouseDown([e.pageX, e.pageY]),\n      onMouseUp: e => props.onMouseUp([e.pageX, e.pageY])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Canvas, \"09i5QqiURSVJSpQplbFeEF1r1KY=\");\n\n_c = Canvas;\n\nfunction Route() {\n  _s2();\n\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0);\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\n  const [clickCoordinate, setClickCoordinate] = useState([]);\n  const [releaseCoordinate, setReleaseCoordinate] = useState([]);\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\"); //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [route, setRoute] = useState([]);\n  let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  const refreshButton = () => {\n    setStartLat(startLatBuffer);\n    setStartLon(startLonBuffer);\n    setEndLat(endLatBuffer);\n    setEndLon(endLonBuffer);\n    requestRoute();\n  };\n\n  const clickedOnCanvas = released => {\n    setReleaseCoordinate(released);\n\n    if (clickCoordinate === releaseCoordinate) {//route start/end\n    } else {\n      //panning\n      let dX = releaseCoordinate[0] - clickCoordinate[0];\n      let dY = releaseCoordinate[1] - clickCoordinate[1];\n      ReactDOM.unstable_batchedUpdates(() => {\n        setStartLat();\n        setEndLat();\n        setEndLon();\n        setStartLon();\n        requestRoute();\n      });\n    }\n  };\n  /**\n   * Makes an axios request.\n   */\n\n\n  const requestRoute = () => {\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: startLat,\n      srclong: startLon,\n      destlat: endLat,\n      destlong: endLon\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setRoute(response.data[\"route\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    let latFromCenter = Math.abs(Math.abs(startLat - (startLat + endLat) / 2) * zoomInFactor);\n    let lonFromCenter = Math.abs(Math.abs(endLon - (endLon + startLon) / 2) * zoomInFactor); //const oldStartLat = startLat;\n    //const oldStartLon = startLon;\n    //const oldEndLat = endLat;\n    //const oldEndLon = endLon;\n    //console.log(oldStartLat);\n    //console.log(oldStartLon);\n    //console.log(oldEndLat);\n    //console.log(oldEndLon);\n\n    const avgLat = (startLat + endLat) / 2;\n    const avgLon = (startLon + endLon) / 2;\n    const newStartLat = avgLat + Math.abs(startLat - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(endLat - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(endLon - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(startLon - avgLon) * zoomInFactor;\n    console.log(newStartLon); // + 3)/2);// - ((oldEndLon -  (oldEndLon + 3)/2) * 1));\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n      requestRoute();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: startLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Latitude\",\n      onChange: setStartLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Start Longitude\",\n      onChange: setStartLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Latitude\",\n      onChange: setEndLatBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"End Longitude\",\n      onChange: setEndLonBuffer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: route[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      routetorender: toCanvas,\n      onChange: refreshCanvas,\n      onMouseDown: setClickCoordinate,\n      onMouseUp: clickedOnCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Route, \"qFwXbbhKq0hRhrppzdr2+ygv/Z8=\");\n\n_c2 = Route;\nexport default Route;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Canvas\");\n$RefreshReg$(_c2, \"Route\");","map":{"version":3,"sources":["/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","useRef","ReactDOM","AwesomeButton","axios","curNorthWestLat","curNorthWestLon","curSouthEastLat","curSouthEastLon","pixToCoord","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","Canvas","props","w","h","ref","firstUpdate","current","requestRoute","parseFloat","routetorender","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","clearRect","lineWidth","console","log","rawWaysData","listOfWays","split","parsedWay","type","startLat","startLon","endLat","endLon","length","i","beginPath","moveTo","lineTo","strokeStyle","stroke","e","onChange","target","value","onMouseDown","pageX","pageY","onMouseUp","Route","setStartLat","setStartLon","setEndLat","setEndLon","startLatBuffer","setStartLatBuffer","startLonBuffer","setStartLonBuffer","endLatBuffer","setEndLatBuffer","endLonBuffer","setEndLonBuffer","clickCoordinate","setClickCoordinate","releaseCoordinate","setReleaseCoordinate","zoomInFactor","setZoomInFactor","startCanvas","refreshCanvas","route","setRoute","toCanvas","refreshButton","clickedOnCanvas","released","dX","dY","unstable_batchedUpdates","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","data","catch","error","zoomIn","setZoomCoords","zoomOut","latFromCenter","Math","abs","lonFromCenter","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport TextBox from './TextBox'\nimport React, {useState, useEffect, useRef} from 'react'\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\n\nlet curNorthWestLat;\nlet curNorthWestLon;\n\nlet curSouthEastLat;\nlet curSouthEastLon;\n\nlet pixToCoord;\n\n// global reference to the oldCanvas element\nlet canvas;\n\n// global reference to the oldCanvas' context\nlet ctx;\n\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\nconst getPixelRatio = context => {\n    let backingStore =\n        context.backingStorePixelRatio ||\n        context.webkitBackingStorePixelRatio ||\n        context.mozBackingStorePixelRatio ||\n        context.msBackingStorePixelRatio ||\n        context.oBackingStorePixelRatio ||\n        context.backingStorePixelRatio ||\n        1;\n    return (window.devicePixelRatio || 1) / backingStore;\n};\n\nfunction Canvas(props) {\n    let w = 600;\n    let h = 600;\n    let ref = useRef();\n    const firstUpdate = useRef(true);\n    useEffect(() => {\n        if (firstUpdate.current) {\n            curSouthEastLat = 41.822895\n            curSouthEastLon = -71.396608\n            curNorthWestLat = 41.828693\n            curNorthWestLon = -71.406524\n            firstUpdate.current = false\n            requestRoute()\n        } else {\n            curSouthEastLat = parseFloat(props.routetorender[3]);\n            curSouthEastLon = parseFloat(props.routetorender[4]);\n            curNorthWestLat = parseFloat(props.routetorender[1]);\n            curNorthWestLon = parseFloat(props.routetorender[2]);\n        }\n        canvas = ref.current;\n        ctx = canvas.getContext(\"2d\");\n        let ratio = getPixelRatio(ctx);\n        let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n        let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n        canvas.style.width = `${width}px`;\n        canvas.style.height = `${height}px`;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.lineWidth = 1\n        pixToCoord = 50000;\n\n        //default\n        // curSouthEastLat = 41.823876;\n        // curSouthEastLon = -71.395963;\n        //\n        // curNorthWestLat = (curSouthEastLat - w/pixToCoord);\n        // curNorthWestLon = (curSouthEastLon - h/pixToCoord);\n\n        //with ways\n\n        console.log(curSouthEastLat);\n        console.log(curSouthEastLon);\n        console.log(curNorthWestLat);\n        console.log(curNorthWestLon);\n\n\n        let rawWaysData = props.routetorender[0]\n        let listOfWays = [];\n        if (rawWaysData != null) {\n            listOfWays = (rawWaysData + '').split(\";\");\n        }\n\n        let parsedWay;\n        let type;\n        let startLat;\n        let startLon;\n        let endLat;\n        let endLon;\n\n        pixToCoord = ((curNorthWestLon - curSouthEastLon)/w);\n        h = (curNorthWestLat - curSouthEastLat)/pixToCoord;\n\n        console.log(\"low\" + listOfWays.length);\n        for (let i=0; i<listOfWays.length; i++) {\n            parsedWay =  listOfWays[i].split(\",\");\n            type = parsedWay[0]\n            startLat = parseFloat(parsedWay[1]);\n            startLon = parseFloat(parsedWay[2]);\n            endLat = parseFloat(parsedWay[3]);\n            endLon = parseFloat(parsedWay[4]);\n            if (i === 500) {\n                console.log(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon));\n            }\n            ctx.beginPath();\n            ctx.moveTo(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), 0 - h*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n            ctx.lineTo(w*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), 0 - h*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n            //ctx.moveTo(w*(startLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(startLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n            //ctx.lineTo(w*(endLon - curNorthWestLon)/(curSouthEastLon - curNorthWestLon), h-h*(endLat - curNorthWestLat)/(curSouthEastLat - curNorthWestLat));\n            ctx.strokeStyle = \"red\";\n            if (type === \"\" || type === \"unclassified\") {\n                ctx.strokeStyle = \"blue\";\n            }\n            ctx.stroke();\n\n        }\n        console.log(\"done\")\n\n    })\n    return (\n        <div className=\"Canvas\">\n            <canvas\n                ref={ref}\n                style={{ width: w, height: h }}\n                routetorender={props.routetorender}\n                onChange={(e) => props.onChange(e.target.value)}\n                onMouseDown={(e) => props.onMouseDown([e.pageX, e.pageY])}\n                onMouseUp={(e) => props.onMouseUp([e.pageX, e.pageY])}\n            />\n\n        </div>\n    );\n}\n\nfunction Route() {\n  const [startLat, setStartLat] = useState(0);\n  const [startLon, setStartLon] = useState(0);\n  const [endLat, setEndLat] = useState(0);\n  const [endLon, setEndLon] = useState(0);\n  const [startLatBuffer, setStartLatBuffer] = useState(0);\n  const [startLonBuffer, setStartLonBuffer] = useState(0);\n  const [endLatBuffer, setEndLatBuffer] = useState(0);\n  const [endLonBuffer, setEndLonBuffer] = useState(0);\n  const [clickCoordinate, setClickCoordinate] = useState([]);\n  const [releaseCoordinate, setReleaseCoordinate] = useState([]);\n  const [zoomInFactor, setZoomInFactor] = useState(1);\n  const [startCanvas, refreshCanvas] = useState(\"\");\n  //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n    const [route, setRoute] = useState([]);\n\n    let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n    const refreshButton = () => {\n        setStartLat(startLatBuffer)\n        setStartLon(startLonBuffer)\n        setEndLat(endLatBuffer)\n        setEndLon(endLonBuffer)\n        requestRoute()\n    }\n\n    const clickedOnCanvas = (released) => {\n        setReleaseCoordinate(released)\n        if(clickCoordinate === releaseCoordinate) {\n            //route start/end\n        } else {\n            //panning\n            let dX = releaseCoordinate[0] - clickCoordinate[0]\n            let dY = releaseCoordinate[1] - clickCoordinate[1]\n            ReactDOM.unstable_batchedUpdates(() => {\n                setStartLat();\n                setEndLat();\n                setEndLon();\n                setStartLon();\n                requestRoute();\n            })\n        }\n    }\n\n  /**\n   * Makes an axios request.\n   */\n  const requestRoute = () => {\n    const toSend = {\n        //TODO: Pass in the values for the data. Follow the format the route expects!\n        srclat : startLat,\n        srclong : startLon,\n            destlat : endLat,\n            destlong : endLon\n  };\n\n      let config = {\n          headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*',\n          }\n      }\n\n    //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n      axios.post(\n          \"http://localhost:4567/route\",\n          toSend,\n          config\n      )\n          .then(response => {\n              console.log(response.data);\n              //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n              //Note: It is very important that you understand how this is set up and why it works!\n              setRoute(response.data[\"route\"]);//console.log  the response.data[\"route\"]\n          })\n\n          .catch(function (error) {\n              console.log(error);\n\n          });\n  }\n\n  const zoomIn = () => {\n      setZoomInFactor(0.91);\n      setZoomCoords();\n  }\n\n  const zoomOut = () => {\n      setZoomInFactor(1.1);\n      setZoomCoords();\n  }\n\n  const setZoomCoords = () => {\n      console.log(zoomInFactor);\n\n      let latFromCenter = Math.abs(Math.abs((startLat - (startLat + endLat)/2)) * zoomInFactor);\n      let lonFromCenter = Math.abs(Math.abs((endLon -  (endLon + startLon)/2)) * zoomInFactor);\n\n      //const oldStartLat = startLat;\n      //const oldStartLon = startLon;\n      //const oldEndLat = endLat;\n      //const oldEndLon = endLon;\n\n      //console.log(oldStartLat);\n      //console.log(oldStartLon);\n      //console.log(oldEndLat);\n      //console.log(oldEndLon);\n\n      const avgLat = ((startLat+endLat)/2)\n      const avgLon = ((startLon+endLon)/2)\n\n      const newStartLat = avgLat + (Math.abs(startLat - avgLat) * zoomInFactor);\n      console.log(newStartLat)\n      const newEndLat = avgLat - (Math.abs(endLat - avgLat) * zoomInFactor);\n      console.log(newEndLat);\n      const newEndLon = avgLon + (Math.abs(endLon - avgLon) * zoomInFactor);\n      console.log(newEndLon);\n      const newStartLon = avgLon - (Math.abs(startLon - avgLon) * zoomInFactor);\n      console.log((newStartLon));// + 3)/2);// - ((oldEndLon -  (oldEndLon + 3)/2) * 1));\n      ReactDOM.unstable_batchedUpdates(() => {\n          setStartLat(newStartLat);\n          setEndLat(newEndLat);\n          setEndLon(newEndLon);\n          setStartLon(newStartLon);\n          requestRoute();\n      })\n  }\n\n\n\n  return (\n    <div className=\"Route\">\n      <header className=\"Route-header\">\n        <title>This is a title</title>\n      </header>\n        <h1>{startLat}</h1>\n        <TextBox label={\"Start Latitude\"} onChange = {setStartLatBuffer}/>\n        <TextBox label={\"Start Longitude\"} onChange = {setStartLonBuffer}/>\n        <TextBox label={\"End Latitude\"} onChange = {setEndLatBuffer}/>\n        <TextBox label={\"End Longitude\"} onChange = {setEndLonBuffer}/>\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Refresh</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\n        <p>{route[2]}</p>\n        <Canvas routetorender={toCanvas} onChange = {refreshCanvas} onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}/>\n    </div>\n  );\n}\nexport default Route;\n"]},"metadata":{},"sourceType":"module"}