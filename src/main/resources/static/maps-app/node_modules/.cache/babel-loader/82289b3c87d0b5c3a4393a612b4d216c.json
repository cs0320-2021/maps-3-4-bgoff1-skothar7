{"ast":null,"code":"var _jsxFileName = \"/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextBox from './TextBox';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\"; // global reference to the oldCanvas element\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet canvas; // global reference to the oldCanvas' context\n\nlet ctx; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\nconst getPixelRatio = context => {\n  let backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nlet startLat = 41.831311;\nlet startLon = -71.406524;\nlet endLat = 41.821395;\nlet endLon = -71.396608;\nlet clickCoordinate = [];\nlet releaseCoordinate = [];\nlet clickCoordinate2 = [];\nlet releaseCoordinate2 = [];\nlet routeStartLat = \"\";\nlet routeStartLon = \"\";\nlet routeEndLat = \"\";\nlet routeEndLon = \"\";\nlet route = [];\nlet totalPathLength;\nlet journeyInfoString = \"Enter your source and destination to find the shortest path and how long it will take to walk there.\";\nlet journeyStringMsg = \"\";\nlet hasClicked = false;\n\nfunction setStartLat(slat) {\n  startLat = parseFloat(slat);\n}\n\nfunction getStartLat() {\n  return parseFloat(startLat);\n}\n\nfunction setStartLon(slon) {\n  startLon = parseFloat(slon);\n}\n\nfunction getStartLon() {\n  return parseFloat(startLon);\n}\n\nfunction setEndLat(elat) {\n  endLat = parseFloat(elat);\n}\n\nfunction getEndLat() {\n  return parseFloat(endLat);\n}\n\nfunction setEndLon(elon) {\n  endLon = parseFloat(elon);\n}\n\nfunction getEndLon() {\n  return parseFloat(endLon);\n}\n\nfunction setRouteStartLat(slat) {\n  routeStartLat = slat;\n}\n\nfunction getRouteStartLat() {\n  return routeStartLat;\n}\n\nfunction setRouteStartLon(slon) {\n  console.log(\"88 \" + slon);\n  routeStartLon = slon;\n}\n\nfunction getRouteStartLon() {\n  return routeStartLon;\n}\n\nfunction setRouteEndLat(elat) {\n  routeEndLat = elat;\n}\n\nfunction getRouteEndLat() {\n  return routeEndLat;\n}\n\nfunction setRouteEndLon(elon) {\n  routeEndLon = elon;\n}\n\nfunction getRouteEndLon() {\n  return routeEndLon;\n}\n\nfunction setClickCoordinate(click) {\n  clickCoordinate = click;\n}\n\nfunction getClickCoordinate() {\n  return clickCoordinate;\n}\n\nfunction setReleaseCoordinate(release) {\n  releaseCoordinate = release;\n}\n\nfunction getReleaseCoordinate() {\n  return releaseCoordinate;\n}\n\nfunction setSecondReleaseCoordinate(release) {\n  releaseCoordinate2 = release;\n}\n\nfunction getSecondReleaseCoordinate() {\n  return releaseCoordinate2;\n}\n\nfunction setRoute(r) {\n  route = r;\n}\n\nfunction getRoute() {\n  return route;\n}\n\nfunction Route(props) {\n  _s();\n\n  const w = 600.0;\n  const h = 600.0;\n  let coordToPix = Math.abs(parseFloat((getStartLon() - getEndLon()) / w));\n  const [zoomInFactor, setZoomInFactor] = useState(1); //const [journeyStringMsg, setJourneyStringMsg] = useState(\"\");\n  //TODO: Fill in the ? with appropriate names/values for a route.\n  //Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n\n  const [ways, setWays] = useState([]); //const [route, setRoute] = useState([]);\n  //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n  /**\n   * Makes an axios request.\n   */\n\n  const requestWays = () => {\n    console.log(9 + \" \" + startLon);\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getStartLat(),\n      srclong: getStartLon(),\n      destlat: getEndLat(),\n      destlong: getEndLon()\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/ways\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      setWays(response.data[\"ways\"]); //console.log  the response.data[\"route\"]\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let ref = useRef();\n  const [firstRender, setFirstRender] = useState(true);\n  useEffect(() => {\n    if (firstRender) {\n      setFirstRender(false);\n      requestWays();\n    }\n\n    canvas = ref.current; //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n    //smooths lines\n\n    ctx = canvas.getContext(\"2d\");\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.lineWidth = 1;\n    console.log(getEndLat());\n    console.log(getEndLon());\n    console.log(getStartLat());\n    console.log(getStartLon());\n    ctx.fillStyle = \"#e8d8c3\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    printCanvas(ways);\n    printCanvas(getRoute());\n    journeyStringMsg = journeyInfoString;\n    console.log(journeyStringMsg);\n    console.log(\"done\");\n  });\n\n  const printCanvas = toPrint => {\n    console.log(toPrint.length);\n    let parsedWay;\n    let type;\n    let startLatWay;\n    let startLonWay;\n    let endLatWay;\n    let endLonWay;\n    let startCircle;\n    let startPixX;\n    let startPixY;\n    let endPixX;\n    let endPixY;\n    startCircle = false;\n    console.log(\"low\" + toPrint.length);\n\n    for (let i = 0; i < toPrint.length; i++) {\n      parsedWay = toPrint[i].split(\",\");\n      type = parsedWay[0];\n      startLatWay = parseFloat(parsedWay[1]);\n      startLonWay = parseFloat(parsedWay[2]);\n      endLatWay = parseFloat(parsedWay[3]);\n      endLonWay = parseFloat(parsedWay[4]);\n      startPixX = w * (startLonWay - getStartLon()) / (getEndLon() - getStartLon());\n      startPixY = h * (startLatWay - getStartLat()) / (getEndLat() - getStartLat());\n      endPixX = w * (endLonWay - getStartLon()) / (getEndLon() - getStartLon());\n      endPixY = h * (endLatWay - getStartLat()) / (getEndLat() - getStartLat());\n      ctx.beginPath();\n      ctx.moveTo(startPixX, startPixY);\n      ctx.lineTo(endPixX, endPixY); //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\n      //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\n\n      ctx.strokeStyle = \"red\";\n\n      if (type === \"\" || type === \"unclassified\") {\n        ctx.strokeStyle = \"blue\";\n      } else {\n        if (type === \"path\") {\n          console.log(\"yes\");\n          ctx.strokeStyle = \"#80CA28\";\n          ctx.lineWidth = 5;\n          ctx.stroke();\n\n          if (!startCircle) {\n            ctx.moveTo(startPixX, startPixY);\n            ctx.beginPath();\n            ctx.arc(startPixX, startPixY, 15, 0, 2 * Math.PI); //ctx.rect(startPixX - 21, startPixY - 21, 42, 42)\n\n            startCircle = true;\n          } else {\n            if (i === toPrint.length - 1) {\n              ctx.moveTo(endPixX, endPixY);\n              ctx.beginPath();\n              ctx.arc(endPixX, endPixY, 15, 0, 2 * Math.PI); //ctx.rect(endPixX - 21, endPixY - 21, 42, 42)\n            }\n          }\n\n          startLatWay = parseFloat(parsedWay[1]);\n          startLonWay = parseFloat(parsedWay[2]);\n          endLatWay = parseFloat(parsedWay[3]);\n          endLonWay = parseFloat(parsedWay[4]);\n          totalPathLength = totalPathLength + Math.sqrt(Math.pow(startLatWay - endLatWay, 2) + Math.pow(startLonWay - endLonWay, 2));\n          journeyInfoString = \"Your journey will be \" + Number((totalPathLength * 69).toFixed(2)) + \" miles. This will take you \" + Number((totalPathLength * 22.25 * 60).toFixed(2)) + \" minutes by foot.\";\n          console.log(journeyInfoString);\n        }\n      }\n\n      ctx.stroke();\n      ctx.lineWidth = 1;\n    } //setJourneyStringMsg(journeyInfoString)\n\n\n    console.log(toPrint.length);\n  };\n\n  const refreshButton = () => {\n    ctx.fillStyle = \"#e8d8c3\";\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    printCanvas(ways);\n    console.log(getRouteStartLat());\n    console.log(getRouteStartLon());\n    console.log(getRouteEndLat());\n    console.log(getRouteEndLon());\n    console.log(ways.length);\n    console.log(hasClicked);\n\n    if (getRouteStartLat() === \"\" && getRouteStartLon() === \"\" && getRouteEndLat() !== \"\" && getRouteEndLon() !== \"\") {\n      setRouteStartLon((getReleaseCoordinate()[0] * (getEndLon() - getStartLon()) / w + getStartLon()).toString());\n      setRouteStartLat((getReleaseCoordinate()[1] * (getEndLat() - getStartLat()) / h + getStartLat()).toString()); // setRouteStartLat(getClickCoordinate()[0])\n      // setRouteStartLon()\n    } else if (getRouteEndLat() === \"\" && getRouteEndLon() === \"\" && getRouteStartLat() !== \"\" && getRouteStartLon() !== \"\") {\n      setRouteEndLon((getReleaseCoordinate()[0] * (getEndLon() - getStartLon()) / w + getStartLon()).toString());\n      setRouteEndLat((getReleaseCoordinate()[1] * (getEndLat() - getStartLat()) / h + getStartLat()).toString());\n    }\n\n    console.log(getRouteStartLat());\n    console.log(getRouteStartLon());\n    console.log(getRouteEndLat());\n    console.log(getRouteEndLon()); //requestWays()\n\n    const toSend = {\n      //TODO: Pass in the values for the data. Follow the format the route expects!\n      srclat: getRouteStartLat(),\n      srclong: getRouteStartLon(),\n      destlat: getRouteEndLat(),\n      destlong: getRouteEndLon()\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    }; //Install and import this!\n    //TODO: Fill in 1) location for request 2) your data 3) configuration\n\n    axios.post(\"http://localhost:4567/route\", toSend, config).then(response => {\n      console.log(response.data); //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n      //Note: It is very important that you understand how this is set up and why it works!\n\n      let currentRoute = response.data[\"route\"];\n      totalPathLength = 0;\n      setRoute(currentRoute); //console.log  the response.data[\"route\"]\n\n      printCanvas(currentRoute);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    console.log(ways.length); //to test\n    //41.825158\n    // -71.404687\n    //41.827525\n    //-71.400441\n  }; //clickedOnCanvas setter sets pixels x,y\n  //release does the same\n\n\n  const clickedOnCanvas = clicked => {\n    console.log(clicked);\n    setClickCoordinate(clicked);\n  };\n\n  const releasedOnCanvas = released => {\n    console.log(released);\n    setReleaseCoordinate(released);\n    console.log(getClickCoordinate()[0]);\n    console.log(getReleaseCoordinate()[0]);\n    console.log(getClickCoordinate()[1]);\n    console.log(getReleaseCoordinate()[1]);\n\n    if (getClickCoordinate()[0] === getReleaseCoordinate()[0] && getClickCoordinate()[1] === getReleaseCoordinate()[1]) {\n      console.log(\"clicked and released\");\n\n      if (hasClicked) {\n        console.log(\"entered clicked condition\"); //make post req\n        //\n        // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\n        // setRouteStartLat(getStartLat() + getSecondReleaseCoordinate()[1]*coordToPix)\n        // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\n        // setRouteEndLat(getStartLat() + parseFloat(released[1])*coordToPix)\n        // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\n        // setRouteStartLat(getStartLat() - Math.abs(getSecondReleaseCoordinate()[1]*coordToPix))\n        // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\n        // setRouteEndLat(getStartLat() - Math.abs(parseFloat(released[1])*coordToPix))\n\n        setRouteStartLon(getSecondReleaseCoordinate()[0] * (getEndLon() - getStartLon()) / w + getStartLon());\n        setRouteStartLat(getSecondReleaseCoordinate()[1] * (getEndLat() - getStartLat()) / h + getStartLat());\n        setRouteEndLon(released[0] * (getEndLon() - getStartLon()) / w + getStartLon());\n        setRouteEndLat(released[1] * (getEndLat() - getStartLat()) / h + getStartLat()); //console.log(w*(getRouteStartLon() - getStartLon())/(getEndLon() - getStartLon()))\n        // console.log(h*(getRouteStartLat() - getStartLat())/(getEndLat() - getStartLat()))\n        //console.log(w*(getRouteEndLon() - getStartLon())/(getEndLon() - getStartLon()))\n        //console.log(h*(getRouteEndLat() - getStartLat())/(getEndLat() - getStartLat()))\n\n        console.log(getRouteStartLat());\n        console.log(getRouteStartLon());\n        console.log(getRouteEndLat());\n        console.log(getRouteEndLon());\n        refreshButton();\n        hasClicked = false;\n      } else {\n        setSecondReleaseCoordinate(released);\n        hasClicked = true;\n      } //route start/end\n\n    } else {\n      //panning\n      let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0])) * coordToPix;\n      let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1])) * coordToPix;\n      console.log(releaseCoordinate[0]);\n      setStartLat(getStartLat() + dY);\n      setEndLat(getEndLat() + dY);\n      setEndLon(getEndLon() - dX);\n      setStartLon(getStartLon() - dX);\n      requestWays();\n      printCanvas(getRoute());\n    }\n  };\n\n  const zoomIn = () => {\n    setZoomInFactor(0.91);\n    setZoomCoords();\n  };\n\n  const zoomOut = () => {\n    setZoomInFactor(1.1);\n    setZoomCoords();\n  };\n\n  const setZoomCoords = () => {\n    console.log(zoomInFactor);\n    const avgLat = (getStartLat() + getEndLat()) / 2;\n    const avgLon = (getStartLon() + getEndLon()) / 2;\n    const newStartLat = avgLat + Math.abs(getStartLat() - avgLat) * zoomInFactor;\n    console.log(newStartLat);\n    const newEndLat = avgLat - Math.abs(getEndLat() - avgLat) * zoomInFactor;\n    console.log(newEndLat);\n    const newEndLon = avgLon + Math.abs(getEndLon() - avgLon) * zoomInFactor;\n    console.log(newEndLon);\n    const newStartLon = avgLon - Math.abs(getStartLon() - avgLon) * zoomInFactor;\n    console.log(newStartLon);\n    ReactDOM.unstable_batchedUpdates(() => {\n      setStartLat(newStartLat);\n      setEndLat(newEndLat);\n      setEndLon(newEndLon);\n      setStartLon(newStartLon);\n    });\n    requestWays();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Route\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Route-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Street 1 or Start Latitude \",\n      onChange: setRouteStartLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Cross Street 1 or Start Longitude \",\n      onChange: setRouteStartLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Street 2 or End Latitude \",\n      onChange: setRouteEndLat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextBox, {\n      label: \"Cross Street 2 or End Longitude \",\n      onChange: setRouteEndLon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        refreshButton();\n      },\n      children: \"Find Path\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomIn();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AwesomeButton, {\n      type: \"primary\",\n      onPress: () => {\n        zoomOut();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: journeyStringMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: ref,\n      style: {\n        width: w,\n        height: h\n      },\n      routetorender: props.routetorender,\n      onChange: e => props.onChange(e.target.value),\n      onMouseDown: e => clickedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop]),\n      onMouseUp: e => releasedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Route, \"aC4jNrFmUXKv5r5QbO1WnpYtq7o=\");\n\n_c = Route;\nexport default Route; //<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/suyashkothari/Desktop/cs32/maps-3-4-bgoff1-skothar7/src/main/resources/static/maps-app/src/Route.js"],"names":["TextBox","React","useState","useEffect","useRef","ReactDOM","AwesomeButton","axios","canvas","ctx","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","startLat","startLon","endLat","endLon","clickCoordinate","releaseCoordinate","clickCoordinate2","releaseCoordinate2","routeStartLat","routeStartLon","routeEndLat","routeEndLon","route","totalPathLength","journeyInfoString","journeyStringMsg","hasClicked","setStartLat","slat","parseFloat","getStartLat","setStartLon","slon","getStartLon","setEndLat","elat","getEndLat","setEndLon","elon","getEndLon","setRouteStartLat","getRouteStartLat","setRouteStartLon","console","log","getRouteStartLon","setRouteEndLat","getRouteEndLat","setRouteEndLon","getRouteEndLon","setClickCoordinate","click","getClickCoordinate","setReleaseCoordinate","release","getReleaseCoordinate","setSecondReleaseCoordinate","getSecondReleaseCoordinate","setRoute","r","getRoute","Route","props","w","h","coordToPix","Math","abs","zoomInFactor","setZoomInFactor","ways","setWays","requestWays","toSend","srclat","srclong","destlat","destlong","config","headers","post","then","response","data","catch","error","ref","firstRender","setFirstRender","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","clearRect","lineWidth","fillStyle","fillRect","printCanvas","toPrint","length","parsedWay","type","startLatWay","startLonWay","endLatWay","endLonWay","startCircle","startPixX","startPixY","endPixX","endPixY","i","split","beginPath","moveTo","lineTo","strokeStyle","stroke","arc","PI","sqrt","pow","Number","toFixed","refreshButton","toString","currentRoute","clickedOnCanvas","clicked","releasedOnCanvas","released","dX","dY","zoomIn","setZoomCoords","zoomOut","avgLat","avgLon","newStartLat","newEndLat","newEndLon","newStartLon","unstable_batchedUpdates","routetorender","e","onChange","target","value","pageX","offsetLeft","pageY","offsetTop"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport TextBox from './TextBox'\nimport React, {useState, useEffect, useRef} from 'react'\nimport ReactDOM from 'react-dom';\nimport { AwesomeButton } from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport axios from \"axios\";\n\n// global reference to the oldCanvas element\nlet canvas;\n\n// global reference to the oldCanvas' context\nlet ctx;\n\n\n\n//http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\nconst getPixelRatio = context => {\n    let backingStore =\n        context.backingStorePixelRatio ||\n        context.webkitBackingStorePixelRatio ||\n        context.mozBackingStorePixelRatio ||\n        context.msBackingStorePixelRatio ||\n        context.oBackingStorePixelRatio ||\n        context.backingStorePixelRatio ||\n        1;\n    return (window.devicePixelRatio || 1) / backingStore;\n};\n\nlet startLat = 41.831311;\nlet startLon = -71.406524;\nlet endLat = 41.821395;\nlet endLon = -71.396608;\nlet clickCoordinate = [];\nlet releaseCoordinate = [];\nlet clickCoordinate2 = [];\nlet releaseCoordinate2 = [];\nlet routeStartLat = \"\";\nlet routeStartLon = \"\";\nlet routeEndLat = \"\";\nlet routeEndLon = \"\";\nlet route = [];\nlet totalPathLength;\nlet journeyInfoString = \"Enter your source and destination to find the shortest path and how long it will take to walk there.\";\nlet journeyStringMsg = \"\";\n\nlet hasClicked = false;\n\nfunction setStartLat(slat) {\n    startLat = parseFloat(slat)\n}\n\nfunction getStartLat() {\n    return parseFloat(startLat)\n}\n\nfunction setStartLon(slon) {\n    startLon = parseFloat(slon)\n}\n\nfunction getStartLon() {\n    return parseFloat(startLon)\n}\n\nfunction setEndLat(elat) {\n    endLat = parseFloat(elat)\n}\n\nfunction getEndLat() {\n    return parseFloat(endLat)\n}\n\nfunction setEndLon(elon) {\n    endLon = parseFloat(elon)\n}\n\nfunction getEndLon() {\n    return parseFloat(endLon)\n}\n\nfunction setRouteStartLat(slat) {\n    routeStartLat = slat\n}\n\nfunction getRouteStartLat() {\n    return routeStartLat\n}\n\nfunction setRouteStartLon(slon) {\n    console.log(\"88 \"+slon)\n    routeStartLon = slon\n}\n\nfunction getRouteStartLon() {\n    return routeStartLon\n}\n\nfunction setRouteEndLat(elat) {\n    routeEndLat = elat\n}\n\nfunction getRouteEndLat() {\n    return routeEndLat\n}\n\nfunction setRouteEndLon(elon) {\n    routeEndLon = elon\n}\n\nfunction getRouteEndLon() {\n    return routeEndLon\n}\n\nfunction setClickCoordinate(click) {\n    clickCoordinate = click\n}\n\nfunction getClickCoordinate() {\n    return clickCoordinate\n}\n\nfunction setReleaseCoordinate(release) {\n    releaseCoordinate = release\n}\n\nfunction getReleaseCoordinate() {\n    return releaseCoordinate\n}\n\nfunction setSecondReleaseCoordinate(release) {\n    releaseCoordinate2 = release\n}\n\nfunction getSecondReleaseCoordinate() {\n    return releaseCoordinate2\n}\n\nfunction setRoute(r) {\n    route = r\n}\n\nfunction getRoute() {\n    return route\n}\n\n\n\nfunction Route(props) {\n    const w = 600.0;\n    const h = 600.0;\n    let coordToPix = Math.abs(parseFloat((getStartLon() - getEndLon())/w));\n    const [zoomInFactor, setZoomInFactor] = useState(1);\n    //const [journeyStringMsg, setJourneyStringMsg] = useState(\"\");\n//TODO: Fill in the ? with appropriate names/values for a route.\n//Hint: The defaults for latitudes and longitudes were 0s. What might the default useState value for a route be?\n    const [ways, setWays] = useState([]);\n    //const [route, setRoute] = useState([]);\n    //let toCanvas = [route[3], startLat, startLon, endLat, endLon];\n\n    /**\n     * Makes an axios request.\n     */\n    const requestWays = () => {\n        console.log(9 + \" \" + startLon)\n        const toSend = {\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n            srclat : getStartLat(),\n            srclong : getStartLon(),\n            destlat : getEndLat(),\n            destlong : getEndLon()\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/ways\",\n            toSend,\n            config\n        )\n            .then(response => {\n                console.log(response.data);\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                setWays(response.data[\"ways\"]);//console.log  the response.data[\"route\"]\n            })\n\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    }\n\n        let ref = useRef();\n        const [firstRender, setFirstRender] = useState(true);\n        useEffect(() => {\n            if (firstRender) {\n                setFirstRender(false)\n                requestWays()\n            }\n            canvas = ref.current;\n            //http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n            //smooths lines\n            ctx = canvas.getContext(\"2d\");\n            let ratio = getPixelRatio(ctx);\n            let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n            let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = `${width}px`;\n            canvas.style.height = `${height}px`;\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.lineWidth = 1\n\n            console.log(getEndLat());\n            console.log(getEndLon());\n            console.log(getStartLat());\n            console.log(getStartLon());\n\n            ctx.fillStyle = \"#e8d8c3\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            printCanvas(ways)\n            printCanvas(getRoute())\n\n            journeyStringMsg = journeyInfoString;\n            console.log(journeyStringMsg)\n            console.log(\"done\")\n\n        })\n\n    const printCanvas = (toPrint) => {\n            console.log(toPrint.length)\n        let parsedWay;\n        let type;\n        let startLatWay;\n        let startLonWay;\n        let endLatWay;\n        let endLonWay;\n        let startCircle;\n        let startPixX;\n        let startPixY;\n        let endPixX;\n        let endPixY;\n\n        startCircle = false\n\n        console.log(\"low\" + toPrint.length);\n\n        for (let i=0; i<toPrint.length; i++) {\n\n            parsedWay = toPrint[i].split(\",\");\n            type = parsedWay[0]\n            startLatWay = parseFloat(parsedWay[1]);\n            startLonWay = parseFloat(parsedWay[2]);\n            endLatWay = parseFloat(parsedWay[3]);\n            endLonWay = parseFloat(parsedWay[4]);\n            startPixX = w*(startLonWay - getStartLon())/(getEndLon() - getStartLon())\n            startPixY = h*(startLatWay - getStartLat())/(getEndLat() - getStartLat())\n            endPixX = w*(endLonWay - getStartLon())/(getEndLon() - getStartLon())\n            endPixY = h*(endLatWay - getStartLat())/(getEndLat() - getStartLat())\n\n            ctx.beginPath();\n            ctx.moveTo(startPixX, startPixY);\n            ctx.lineTo(endPixX, endPixY);\n            //ctx.moveTo(w*(startLon - startLon)/(endLon - startLon), h-h*(startLat - startLat)/(endLat - startLat));\n            //ctx.lineTo(w*(endLon - startLon)/(endLon - startLon), h-h*(endLat - startLat)/(endLat - startLat));\n            ctx.strokeStyle = \"red\";\n            if (type === \"\" || type === \"unclassified\") {\n                ctx.strokeStyle = \"blue\";\n            } else {\n                if (type === \"path\") {\n                    console.log(\"yes\")\n                    ctx.strokeStyle = \"#80CA28\";\n                    ctx.lineWidth = 5\n                    ctx.stroke()\n                    if (!startCircle) {\n                        ctx.moveTo(startPixX, startPixY);\n                        ctx.beginPath();\n                        ctx.arc(startPixX, startPixY, 15, 0, 2 * Math.PI);\n                        //ctx.rect(startPixX - 21, startPixY - 21, 42, 42)\n                        startCircle = true\n                    } else {\n                        if (i === toPrint.length - 1) {\n                            ctx.moveTo(endPixX, endPixY);\n                            ctx.beginPath();\n                            ctx.arc(endPixX, endPixY, 15, 0, 2 * Math.PI);\n                            //ctx.rect(endPixX - 21, endPixY - 21, 42, 42)\n                        }\n                    }\n                    startLatWay = parseFloat(parsedWay[1]);\n                    startLonWay = parseFloat(parsedWay[2]);\n                    endLatWay = parseFloat(parsedWay[3]);\n                    endLonWay = parseFloat(parsedWay[4]);\n                    totalPathLength = totalPathLength + (Math.sqrt(Math.pow(startLatWay-endLatWay, 2) + Math.pow(startLonWay-endLonWay, 2)));\n                    journeyInfoString = \"Your journey will be \"+Number((totalPathLength*69).toFixed(2))+\" miles. This will take you \"+Number((totalPathLength*22.25*60).toFixed(2))+\" minutes by foot.\"\n                    console.log(journeyInfoString)\n\n\n                }\n            }\n            ctx.stroke();\n            ctx.lineWidth = 1\n        }\n        //setJourneyStringMsg(journeyInfoString)\n        console.log(toPrint.length)\n    }\n    const refreshButton = () => {\n        ctx.fillStyle = \"#e8d8c3\";\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        printCanvas(ways)\n        console.log(getRouteStartLat())\n        console.log(getRouteStartLon())\n        console.log(getRouteEndLat())\n        console.log(getRouteEndLon())\n            console.log(ways.length)\n        console.log(hasClicked)\n        if (getRouteStartLat()===\"\" && getRouteStartLon()===\"\" && getRouteEndLat()!==\"\" && getRouteEndLon()!==\"\"){\n\n            setRouteStartLon((getReleaseCoordinate()[0]*(getEndLon() - getStartLon())/w +  getStartLon()).toString())\n            setRouteStartLat((getReleaseCoordinate()[1]*(getEndLat() - getStartLat())/h +  getStartLat()).toString())\n            // setRouteStartLat(getClickCoordinate()[0])\n            // setRouteStartLon()\n        } else if (getRouteEndLat()===\"\" && getRouteEndLon()===\"\" && getRouteStartLat()!==\"\" && getRouteStartLon()!==\"\"){\n\n            setRouteEndLon((getReleaseCoordinate()[0]*(getEndLon() - getStartLon())/w +  getStartLon()).toString())\n            setRouteEndLat((getReleaseCoordinate()[1]*(getEndLat() - getStartLat())/h +  getStartLat()).toString())\n        }\n        console.log(getRouteStartLat())\n        console.log(getRouteStartLon())\n        console.log(getRouteEndLat())\n        console.log(getRouteEndLon())\n\n        //requestWays()\n        const toSend = {\n            //TODO: Pass in the values for the data. Follow the format the route expects!\n            srclat : getRouteStartLat(),\n            srclong : getRouteStartLon(),\n            destlat : getRouteEndLat(),\n            destlong : getRouteEndLon()\n        };\n\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n\n        //Install and import this!\n        //TODO: Fill in 1) location for request 2) your data 3) configuration\n        axios.post(\n            \"http://localhost:4567/route\",\n            toSend,\n            config\n        )\n            .then(response => {\n                console.log(response.data);\n                //TODO: Go to the Main.java in the server from the stencil, and find what variable you should put here.\n                //Note: It is very important that you understand how this is set up and why it works!\n                let currentRoute = response.data[\"route\"]\n                totalPathLength = 0;\n                setRoute(currentRoute);//console.log  the response.data[\"route\"]\n                printCanvas(currentRoute)\n            })\n\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        console.log(ways.length)\n\n        //to test\n        //41.825158\n        // -71.404687\n        //41.827525\n        //-71.400441\n\n\n\n\n\n    }\n\n    //clickedOnCanvas setter sets pixels x,y\n    //release does the same\n\n\n    const clickedOnCanvas = (clicked) => {\n\n            console.log(clicked)\n\n\n            setClickCoordinate(clicked)\n\n\n    }\n\n    const releasedOnCanvas = (released) => {\n        console.log(released)\n        setReleaseCoordinate(released)\n        console.log(getClickCoordinate()[0])\n        console.log(getReleaseCoordinate()[0])\n        console.log(getClickCoordinate()[1])\n        console.log(getReleaseCoordinate()[1])\n        if(getClickCoordinate()[0] === getReleaseCoordinate()[0] &&\n            getClickCoordinate()[1] === getReleaseCoordinate()[1]) {\n\n            console.log(\"clicked and released\")\n            if (hasClicked){\n\n                console.log(\"entered clicked condition\")\n\n                //make post req\n                //\n                // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\n                // setRouteStartLat(getStartLat() + getSecondReleaseCoordinate()[1]*coordToPix)\n                // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\n                // setRouteEndLat(getStartLat() + parseFloat(released[1])*coordToPix)\n                // setRouteStartLon(getStartLon() + getSecondReleaseCoordinate()[0]*coordToPix)\n                // setRouteStartLat(getStartLat() - Math.abs(getSecondReleaseCoordinate()[1]*coordToPix))\n                // setRouteEndLon(getStartLon() + parseFloat(released[0])*coordToPix)\n                // setRouteEndLat(getStartLat() - Math.abs(parseFloat(released[1])*coordToPix))\n\n\n                setRouteStartLon(getSecondReleaseCoordinate()[0]*(getEndLon() - getStartLon())/w +  getStartLon())\n                setRouteStartLat(getSecondReleaseCoordinate()[1]*(getEndLat() - getStartLat())/h +  getStartLat())\n                setRouteEndLon(released[0]*(getEndLon() - getStartLon())/w +  getStartLon())\n                setRouteEndLat(released[1]*(getEndLat() - getStartLat())/h +  getStartLat())\n\n               //console.log(w*(getRouteStartLon() - getStartLon())/(getEndLon() - getStartLon()))\n               // console.log(h*(getRouteStartLat() - getStartLat())/(getEndLat() - getStartLat()))\n                //console.log(w*(getRouteEndLon() - getStartLon())/(getEndLon() - getStartLon()))\n                //console.log(h*(getRouteEndLat() - getStartLat())/(getEndLat() - getStartLat()))\n\n                console.log(getRouteStartLat())\n                console.log(getRouteStartLon())\n                console.log(getRouteEndLat())\n                console.log(getRouteEndLon())\n                refreshButton();\n\n                hasClicked = false;\n            } else {\n                setSecondReleaseCoordinate(released)\n                hasClicked = true;\n            }\n            //route start/end\n        } else {\n            //panning\n            let dX = (parseFloat(getReleaseCoordinate()[0]) - parseFloat(getClickCoordinate()[0]))*coordToPix\n            let dY = (parseFloat(getReleaseCoordinate()[1]) - parseFloat(getClickCoordinate()[1]))*coordToPix\n            console.log(releaseCoordinate[0])\n                setStartLat(getStartLat() + dY);\n                setEndLat(getEndLat() + dY);\n                setEndLon(getEndLon() - dX);\n                setStartLon(getStartLon() - dX);\n                requestWays();\n                printCanvas(getRoute())\n\n\n        }\n    }\n\n  const zoomIn = () => {\n      setZoomInFactor(0.91);\n      setZoomCoords();\n  }\n\n  const zoomOut = () => {\n      setZoomInFactor(1.1);\n      setZoomCoords();\n  }\n\n  const setZoomCoords = () => {\n      console.log(zoomInFactor);\n\n      const avgLat = ((getStartLat() + getEndLat())/2)\n      const avgLon = ((getStartLon() + getEndLon())/2)\n\n      const newStartLat = avgLat + (Math.abs(getStartLat() - avgLat) * zoomInFactor);\n      console.log(newStartLat)\n      const newEndLat = avgLat - (Math.abs(getEndLat() - avgLat) * zoomInFactor);\n      console.log(newEndLat);\n      const newEndLon = avgLon + (Math.abs(getEndLon() - avgLon) * zoomInFactor);\n      console.log(newEndLon);\n      const newStartLon = avgLon - (Math.abs(getStartLon() - avgLon) * zoomInFactor);\n      console.log((newStartLon));\n      ReactDOM.unstable_batchedUpdates(() => {\n          setStartLat(newStartLat);\n          setEndLat(newEndLat);\n          setEndLon(newEndLon);\n          setStartLon(newStartLon);\n      })\n      requestWays();\n  }\n\n  return (\n    <div className=\"Route\">\n      <header className=\"Route-header\">\n        <title>This is a title</title>\n      </header>\n        <TextBox label={\"Street 1 or Start Latitude \"} onChange = {setRouteStartLat}/>\n        <TextBox label={\"Cross Street 1 or Start Longitude \"} onChange = {setRouteStartLon}/>\n        <TextBox label={\"Street 2 or End Latitude \"} onChange = {setRouteEndLat}/>\n        <TextBox label={\"Cross Street 2 or End Longitude \"} onChange = {setRouteEndLon}/>\n        <AwesomeButton type=\"primary\" onPress={() => {refreshButton()}}>Find Path</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomIn()}}>+</AwesomeButton>\n        <AwesomeButton type=\"primary\" onPress={() => {zoomOut()}}>-</AwesomeButton>\n        <p>\n            {journeyStringMsg}\n      </p>\n        <canvas\n            ref={ref}\n            style={{ width: w, height: h }}\n            routetorender={props.routetorender}\n            onChange={(e) => props.onChange(e.target.value)}\n            onMouseDown={(e) => clickedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop])}\n            onMouseUp={(e) => releasedOnCanvas([e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop])}\n        />\n    </div>\n  );\n}\nexport default Route;\n\n//<Canvas routetorender={toCanvas} onChange = {refreshCanvas} //onMouseDown = {setClickCoordinate} onMouseUp = {clickedOnCanvas}"]},"metadata":{},"sourceType":"module"}